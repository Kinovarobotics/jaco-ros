/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 0x1000004a generated on 2018-11-08 13:46:00.456508
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==0x1000004a);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#ifndef isinf
#define isinf _isinf
#endif
//#ifndef isfinite
//#define isfinite _isfinite
//#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)1e-7)
#endif

// used to check input to atan2 for degenerate cases. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)1e-7)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

// there are checkpoints in ikfast that are evaluated to make sure they are 0. This threshold speicfies by how much they can deviate
#ifndef IKFAST_EVALCOND_THRESH
#define IKFAST_EVALCOND_THRESH ((IkReal)0.00001)
#endif


inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2Simple(float fy, float fx) {
    return atan2f(fy,fx);
}
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2Simple(double fy, double fx) {
    return atan2(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

template <typename T>
struct CheckValue
{
    T value;
    bool valid;
};

template <typename T>
inline CheckValue<T> IKatan2WithCheck(T fy, T fx, T epsilon)
{
    CheckValue<T> ret;
    ret.valid = false;
    ret.value = 0;
    if( !isnan(fy) && !isnan(fx) ) {
        if( IKabs(fy) >= IKFAST_ATAN2_MAGTHRESH || IKabs(fx) > IKFAST_ATAN2_MAGTHRESH ) {
            ret.value = IKatan2Simple(fy,fx);
            ret.valid = true;
        }
    }
    return ret;
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

template <typename T>
inline CheckValue<T> IKPowWithIntegerCheck(T f, int n)
{
    CheckValue<T> ret;
    ret.valid = true;
    if( n == 0 ) {
        ret.value = 1.0;
        return ret;
    }
    else if( n == 1 )
    {
        ret.value = f;
        return ret;
    }
    else if( n < 0 )
    {
        if( f == 0 )
        {
            ret.valid = false;
            ret.value = (T)1.0e30;
            return ret;
        }
        if( n == -1 ) {
            ret.value = T(1.0)/f;
            return ret;
        }
    }

    int num = n > 0 ? n : -n;
    if( num == 2 ) {
        ret.value = f*f;
    }
    else if( num == 3 ) {
        ret.value = f*f*f;
    }
    else {
        ret.value = 1.0;
        while(num>0) {
            if( num & 1 ) {
                ret.value *= f;
            }
            num >>= 1;
            f *= f;
        }
    }
    
    if( n < 0 ) {
        ret.value = T(1.0)/ret.value;
    }
    return ret;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKsin(j[3]);
x6=IKcos(j[3]);
x7=IKsin(j[0]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=((0.0877794860918839)*x6);
x13=((0.249980320149909)*x7);
x14=((1.0)*x9);
x15=((0.433001339129174)*x0);
x16=((0.499980319762597)*x5);
x17=((0.175565882540264)*x6);
x18=((0.249980320149909)*x0);
x19=((1.0)*x5);
x20=((0.499980319762597)*x7);
x21=((0.866036765876652)*x0);
x22=((0.29)*x4);
x23=((0.866036765876652)*x5);
x24=((0.499980319762597)*x0);
x25=((0.161706567276774)*x0);
x26=((0.750019679850091)*x0);
x27=((1.0)*x6);
x28=((0.152046509113451)*x0);
x29=((0.433001339129174)*x7);
x30=((0.258995591688792)*x0);
x31=((1.0)*x7);
x32=((0.866036765876652)*x7);
x33=((1.0)*x8);
x34=((0.175565882540264)*x5);
x35=((0.499980319762597)*x6);
x36=((0.750019679850091)*x7);
x37=((0.258995591688792)*x7);
x38=((0.750019679850091)*x7);
x39=((0.866036765876652)*x6);
x40=((0.750019679850091)*x0);
x41=((0.161706567276774)*x7);
x42=((0.152046509113451)*x7);
x43=((1.0)*x0);
x44=((0.249980320149909)*x6);
x45=(x1*x2);
x46=((-1.0)*x9);
x47=(x2*x4);
x48=(x3*x4);
x49=(x0*x5);
x50=(x1*x3);
x51=((-1.0)*x6);
x52=((-1.0)*x8);
x53=(x6*x9);
x54=((-1.0)*x5);
x55=((-0.750019679850091)*x6);
x56=(x29*x6);
x57=(x0*x19);
x58=(x15*x6);
x59=((0.499980319762597)*x48);
x60=((0.499980319762597)*x45);
x61=(x15*x48);
x62=(x29*x45);
x63=(x29*x48);
x64=((((-1.0)*x45))+x48);
x65=(x59+(((-1.0)*x60)));
x66=((((0.433001339129174)*x47))+(((0.433001339129174)*x50)));
x67=(x64*x8);
x68=(x43*(((((-1.0)*x47))+(((-1.0)*x50)))));
x69=(x24*((x47+x50)));
x70=(x20*((x47+x50)));
x71=(x31*(((((-1.0)*x47))+(((-1.0)*x50)))));
x72=(x38*(((((-1.0)*x47))+(((-1.0)*x50)))));
x73=(x6*x68);
x74=(x6*x71);
x75=(x35*x71);
x76=((((-1.0)*x19*x7))+(((-1.0)*x27*x68)));
x77=((((0.866036765876652)*x47))+(((0.866036765876652)*x50))+((x54*x65)));
x78=(x76*x8);
x79=(((x21*(((((-1.0)*x48))+x45))))+(((-1.0)*x19*x69))+(((-1.0)*x20*x6)));
x80=(((x32*(((((-1.0)*x48))+x45))))+(((-1.0)*x19*x70))+((x24*x6)));
x81=(x62+(((-1.0)*x16*x70))+((x0*x44))+(((-1.0)*x63)));
x82=(((x8*((x66+(((-1.0)*x16*x65))))))+((x53*((x60+(((-1.0)*x59))))))+((x5*(((((-0.750019679850091)*x48))+(((0.750019679850091)*x45))))))+(((-1.0)*x66)));
IkReal x84=((1.0)*x40);
x83=(((x5*(((((-1.0)*x50*x84))+(((-1.0)*x47*x84))))))+(((-0.433001339129174)*x0*x45))+x61+((x9*((((x35*x68))+((x16*x7))))))+((x55*x7))+((x8*(((((-1.0)*x44*x7))+((x15*x45))+(((-1.0)*x16*x69))+(((-1.0)*x61)))))));
eerot[0]=(((x11*x83))+((x10*(((((-1.0)*x33*x76))+(((-1.0)*x14*x79)))))));
eerot[1]=(((x10*x83))+((x11*((((x79*x9))+x78)))));
IkReal x85=((1.0)*x48);
eerot[2]=(((x9*((((x39*x68))+((x23*x7))))))+((x5*((((x15*x50))+((x15*x47))))))+((x18*x45))+((x8*((((x26*x45))+(((-1.0)*x23*x69))+(((-1.0)*x26*x85))+(((-1.0)*x56))))))+x56+(((-1.0)*x18*x85)));
IkReal x86=((1.0)*x48);
eetrans[0]=(((x0*x22))+((x9*((((x34*x7))+((x17*x68))))))+((x41*x6))+((x8*(((((-1.0)*x34*x69))+(((-1.0)*x12*x7))+((x28*x45))+(((-1.0)*x28*x86))))))+(((-1.0)*x30*x86))+((x30*x45))+((x5*((((x25*x50))+((x25*x47))))))+(((-0.007)*x7)));
eerot[3]=(((x10*((((x8*(((((-1.0)*x27*x71))+x57))))+((x80*x9))))))+((x11*((((x46*(((((-0.499980319762597)*x49))+x75))))+x62+((x54*x72))+(((-0.433001339129174)*x48*x7))+((x52*x81))+((x0*x55)))))));
eerot[4]=(((x10*(((((-1.0)*x14*(((((-1.0)*x0*x16))+x75))))+(((-1.0)*x33*x81))+x62+(((-1.0)*x19*x72))+(((-1.0)*x40*x6))+(((-1.0)*x63))))))+((x11*((((x52*((x57+((x51*x71))))))+((x46*x80)))))));
IkReal x87=((1.0)*x45);
IkReal x88=((1.0)*x29);
eerot[5]=(((x5*(((((-1.0)*x50*x88))+(((-1.0)*x47*x88))))))+x58+((x13*x48))+((x8*((((x23*x70))+((x36*x48))+(((-1.0)*x36*x87))+(((-1.0)*x58))))))+(((-1.0)*x13*x87))+((x9*((((x21*x5))+(((-1.0)*x39*x71)))))));
IkReal x89=((1.0)*x45);
IkReal x90=((1.0)*x41);
eetrans[1]=(((x37*x48))+((x8*(((((-1.0)*x0*x12))+((x42*x48))+((x34*x70))+(((-1.0)*x42*x89))))))+(((-1.0)*x37*x89))+(((-1.0)*x22*x7))+((x5*(((((-1.0)*x50*x90))+(((-1.0)*x47*x90))))))+((x9*(((((-1.0)*x17*x71))+((x0*x34))))))+((x25*x6))+(((-0.007)*x0)));
eerot[6]=(((x11*x82))+((x10*((((x46*x77))+((x51*x67)))))));
eerot[7]=(((x10*x82))+((x11*((((x77*x9))+((x6*x67)))))));
eerot[8]=(((x8*(((((0.750019679850091)*x50))+(((0.750019679850091)*x47))+(((-1.0)*x23*x65))))))+((x53*(((((0.866036765876652)*x45))+(((-0.866036765876652)*x48))))))+(((0.249980320149909)*x50))+(((0.249980320149909)*x47))+((x5*(((((0.433001339129174)*x48))+(((-0.433001339129174)*x45)))))));
eetrans[2]=((0.276)+(((-0.29)*x1))+((x53*(((((0.175565882540264)*x45))+(((-0.175565882540264)*x48))))))+((x8*(((((-1.0)*x34*x65))+(((0.152046509113451)*x47))+(((0.152046509113451)*x50))))))+(((0.258995591688792)*x47))+(((0.258995591688792)*x50))+((x5*(((((-0.161706567276774)*x45))+(((0.161706567276774)*x48)))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j0mul,j1,cj1,sj1,htj1,j1mul,j2,cj2,sj2,htj2,j2mul,j3,cj3,sj3,htj3,j3mul,j4,cj4,sj4,htj4,j4mul,j5,cj5,sj5,htj5,j5mul,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

IkReal j100, cj100, sj100;
unsigned char _ij100[2], _nj100;
bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r01;
new_r01=r00;
new_r02=r02;
new_px=((((0.224042100802242)*r02))+(((-1.0)*px)));
new_r10=((-1.0)*r11);
new_r11=((-1.0)*r10);
new_r12=((-1.0)*r12);
new_py=((((-0.224042100802242)*r12))+py);
new_r20=r21;
new_r21=r20;
new_r22=r22;
new_pz=((0.276)+(((-1.0)*pz))+(((0.224042100802242)*r22)));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
IkReal x91=((1.0)*px);
IkReal x92=((1.0)*pz);
IkReal x93=((1.0)*py);
pp=((px*px)+(py*py)+(pz*pz));
npx=(((px*r00))+((py*r10))+((pz*r20)));
npy=(((px*r01))+((py*r11))+((pz*r21)));
npz=(((px*r02))+((py*r12))+((pz*r22)));
rxp0_0=((((-1.0)*r20*x93))+((pz*r10)));
rxp0_1=(((px*r20))+(((-1.0)*r00*x92)));
rxp0_2=((((-1.0)*r10*x91))+((py*r00)));
rxp1_0=((((-1.0)*r21*x93))+((pz*r11)));
rxp1_1=(((px*r21))+(((-1.0)*r01*x92)));
rxp1_2=((((-1.0)*r11*x91))+((py*r01)));
rxp2_0=((((-1.0)*r22*x93))+((pz*r12)));
rxp2_1=(((px*r22))+(((-1.0)*r02*x92)));
rxp2_2=((((-1.0)*r12*x91))+((py*r02)));
IkReal op[72], zeror[48];
int numroots;;
IkReal x94=((0.085755414174472)*npx);
IkReal x95=((0.042877707087236)*npy);
IkReal x96=((0.29)*pp);
IkReal x97=((0.10846)*npz);
IkReal x98=((0.0739270811848896)*r20);
IkReal x99=((0.007)*r02);
IkReal x100=((1.0)*rxp2_2);
IkReal x101=((0.147854162369779)*r21);
IkReal x102=((0.332803079859505)*npy);
IkReal x103=((0.166401539929753)*npx);
IkReal x104=((1.7320735317533)*rxp0_2);
IkReal x105=((0.128047140600125)*r22);
IkReal x106=((0.0121245147222731)*r00);
IkReal x107=((0.0369985436624322)*r21);
IkReal x108=((0.0242490294445463)*r11);
IkReal x109=((3.46414706350661)*rxp1_2);
IkReal x110=((0.0739970873248644)*r20);
IkReal x111=((0.0242490294445463)*r01);
IkReal x112=((0.0121245147222731)*r10);
IkReal x113=((0.252150404460605)*npx);
IkReal x114=((0.0356498514776576)*npz);
IkReal x115=((0.126075202230302)*npy);
IkReal x116=((0.00350027551790128)*r02);
IkReal x117=((0.500039359700182)*rxp2_2);
IkReal x118=((0.0554649940312889)*r20);
IkReal x119=((0.00606201874780844)*r01);
IkReal x120=((0.866002678258348)*rxp1_2);
IkReal x121=((0.00350027551790128)*r12);
IkReal x122=((0.00606201874780844)*r11);
IkReal x123=((0.0121240374956169)*r10);
IkReal x124=((1.7320053565167)*rxp0_2);
IkReal x125=((0.0121240374956169)*r00);
IkReal x126=((0.110929988062578)*r21);
IkReal x127=((-0.007)*r12);
IkReal x128=((-0.166401539929753)*npx);
IkReal x129=((-0.0121245147222731)*r10);
IkReal x130=((((-1.0)*x122))+x121);
IkReal x131=((0.00960504747604252)+x114);
IkReal x132=(x122+x121);
IkReal x133=(x117+x116);
IkReal x134=(x100+x99);
IkReal x135=(x104+x105);
IkReal x136=(x97+x96);
IkReal x137=(x105+x107);
IkReal x138=(x110+x109);
IkReal x139=(x120+x118);
IkReal x140=((0.01267728813357)+(((-1.0)*x136))+x95);
IkReal x141=((0.01267728813357)+(((-1.0)*x136))+(((-1.0)*x95)));
IkReal x142=(x131+x115+(((-1.0)*x96)));
IkReal x143=((((-1.0)*x115))+x131+(((-1.0)*x96)));
IkReal x144=(x139+x119);
op[0]=x140;
op[1]=x140;
op[2]=x94;
op[3]=x94;
op[4]=x141;
op[5]=x141;
op[6]=((((-1.0)*x134))+(((-1.0)*x98)));
op[7]=x127;
op[8]=x101;
op[9]=0;
op[10]=((((-1.0)*x134))+x98);
op[11]=x127;
op[12]=x127;
op[13]=((((-1.0)*x100))+x99+(((-1.0)*x98)));
op[14]=0;
op[15]=x101;
op[16]=x127;
op[17]=((((-1.0)*x100))+x99+x98);
op[18]=0;
op[19]=x140;
op[20]=0;
op[21]=x94;
op[22]=0;
op[23]=x141;
op[24]=x128;
op[25]=x128;
op[26]=x102;
op[27]=x102;
op[28]=x103;
op[29]=x103;
op[30]=((((-1.0)*x106))+(((-1.0)*x104))+x137);
op[31]=x129;
op[32]=(x138+x111);
op[33]=x108;
op[34]=((((-1.0)*x107))+x135+x106);
op[35]=x112;
op[36]=x129;
op[37]=((((-1.0)*x104))+x137+x106);
op[38]=x108;
op[39]=((((-1.0)*x111))+x138);
op[40]=x112;
op[41]=((((-1.0)*x107))+(((-1.0)*x106))+x135);
op[42]=0;
op[43]=x128;
op[44]=0;
op[45]=x102;
op[46]=0;
op[47]=x103;
op[48]=x142;
op[49]=x142;
op[50]=x113;
op[51]=x113;
op[52]=x143;
op[53]=x143;
op[54]=(x144+x133);
op[55]=x132;
op[56]=((((-1.0)*x126))+x124+x125);
op[57]=x123;
op[58]=((((-1.0)*x144))+x133);
op[59]=x130;
op[60]=x132;
op[61]=((((-1.0)*x116))+(((-1.0)*x119))+x139+x117);
op[62]=x123;
op[63]=((((-1.0)*x125))+(((-1.0)*x126))+x124);
op[64]=x130;
op[65]=((((-1.0)*x116))+x117+x119+(((-1.0)*x139)));
op[66]=0;
op[67]=x142;
op[68]=0;
op[69]=x113;
op[70]=0;
op[71]=x143;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j4array[16], cj4array[16], sj4array[16], j5array[16], cj5array[16], sj5array[16], j0array[16], cj0array[16], sj0array[16];
int numsolutions = 0;
for(int ij4 = 0; ij4 < numroots; ij4 += 3)
{
IkReal htj4 = zeror[ij4+0], htj5 = zeror[ij4+1], htj0 = zeror[ij4+2];
if(isnan(htj4)||isnan(htj5)||isnan(htj0)){
continue;
}
j4array[numsolutions]=((2.0)*(atan(htj4)));
j5array[numsolutions]=((2.0)*(atan(htj5)));
j0array[numsolutions]=((2.0)*(atan(htj0)));
if(isinf(htj4)){
cj4array[numsolutions] = IKcos(j4array[numsolutions]);
sj4array[numsolutions] = IKsin(j4array[numsolutions]);
}
else{
IkReal x145=htj4*htj4;
CheckValue<IkReal> x146=IKPowWithIntegerCheck(((1.0)+x145),-1);
if(!x146.valid){
continue;
}
cj4array[numsolutions]=((x146.value)*(((1.0)+(((-1.0)*x145)))));
CheckValue<IkReal> x147=IKPowWithIntegerCheck(((1.0)+(htj4*htj4)),-1);
if(!x147.valid){
continue;
}
sj4array[numsolutions]=((2.0)*htj4*(x147.value));
}
if(isinf(htj5)){
cj5array[numsolutions] = IKcos(j5array[numsolutions]);
sj5array[numsolutions] = IKsin(j5array[numsolutions]);
}
else{
IkReal x148=htj5*htj5;
CheckValue<IkReal> x149=IKPowWithIntegerCheck(((1.0)+x148),-1);
if(!x149.valid){
continue;
}
cj5array[numsolutions]=((x149.value)*(((1.0)+(((-1.0)*x148)))));
CheckValue<IkReal> x150=IKPowWithIntegerCheck(((1.0)+(htj5*htj5)),-1);
if(!x150.valid){
continue;
}
sj5array[numsolutions]=((2.0)*htj5*(x150.value));
}
if(isinf(htj0)){
cj0array[numsolutions] = IKcos(j0array[numsolutions]);
sj0array[numsolutions] = IKsin(j0array[numsolutions]);
}
else{
IkReal x151=htj0*htj0;
CheckValue<IkReal> x152=IKPowWithIntegerCheck(((1.0)+x151),-1);
if(!x152.valid){
continue;
}
cj0array[numsolutions]=((x152.value)*(((1.0)+(((-1.0)*x151)))));
CheckValue<IkReal> x153=IKPowWithIntegerCheck(((1.0)+(htj0*htj0)),-1);
if(!x153.valid){
continue;
}
sj0array[numsolutions]=((2.0)*htj0*(x153.value));
}
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j4valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj4 = 16;
_nj5 = 1;
_nj0 = 1;
for(int ij4 = 0; ij4 < numsolutions; ++ij4)
    {
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
_ij5[0] = 0; _ij5[1] = -1;
_ij0[0] = 0; _ij0[1] = -1;
for(int iij4 = ij4+1; iij4 < numsolutions; ++iij4)
{
if( !j4valid[iij4] ) { continue; }
if( IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj5array[ij4]-cj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij4]-sj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj0array[ij4]-cj0array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij4]-sj0array[iij4]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j4valid[iij4]=false; _ij4[1] = iij4; _ij5[1] = 0; _ij0[1] = 0;  break; 
}
}
    j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

    j5 = j5array[ij4]; cj5 = cj5array[ij4]; sj5 = sj5array[ij4];

    j0 = j0array[ij4]; cj0 = cj0array[ij4]; sj0 = sj0array[ij4];

innerfn(solutions);
    }
}
return solutions.GetNumSolutions()>0;
}
inline void innerfn(IkSolutionListBase<IkReal>& solutions) {
for(int fniter = 0; fniter < 1; ++fniter) {
{
IkReal j3eval[2];
IkReal x154=cj5*cj5;
IkReal x155=sj4*sj4;
IkReal x156=sj5*sj5;
IkReal x157=cj4*cj4;
IkReal x158=(r11*r20);
IkReal x159=((0.750019679850091)*cj4);
IkReal x160=(cj5*r22);
IkReal x161=((3.46441978055434)*sj4);
IkReal x162=((0.433001339129174)*r10);
IkReal x163=(r10*r22);
IkReal x164=(r10*r21);
IkReal x165=(r12*r20);
IkReal x166=((0.866036765876652)*sj4);
IkReal x167=((1.73214170967343)*cj4);
IkReal x168=((0.433001339129174)*cj4);
IkReal x169=(sj5*x166);
IkReal x170=(cj5*r12*r21);
IkReal x171=(r11*r22*sj5);
IkReal x172=((0.433001339129174)*x157);
IkReal x173=(r12*r21*sj5);
IkReal x174=((1.73214170967343)*x157);
IkReal x175=((1.73214170967343)*x155);
IkReal x176=((0.433001339129174)*x155);
IkReal x177=(x155*x156);
IkReal x178=(x154*x157);
IkReal x179=((3.00031490239039)*cj4*x154);
IkReal x180=(x156*x157);
IkReal x181=(x154*x155);
IkReal x182=((3.00031490239039)*cj4*x156);
j3eval[0]=(((x161*x170))+(((-1.0)*cj5*x165*x167))+((r10*x160*x167))+((cj5*x165*x174))+((cj5*x165*x175))+((x167*x173))+(((-1.0)*r10*x160*x175))+(((-1.0)*r10*x160*x174))+((sj5*x161*x165))+((x171*x175))+((x171*x174))+(((-1.0)*r11*x160*x161))+(((-1.0)*sj5*x161*x163))+(((-1.0)*x164*x182))+((x158*x177))+((x158*x179))+((x158*x178))+(((-1.0)*x164*x181))+(((-1.0)*x164*x180))+(((-1.0)*x164*x179))+(((-1.0)*x173*x175))+(((-1.0)*x173*x174))+((x158*x182))+((x158*x181))+((x158*x180))+(((-1.0)*x164*x178))+(((-1.0)*x164*x177))+(((-1.0)*x167*x171)));
j3eval[1]=IKsign((((x154*x158*x159))+(((-1.0)*x155*x160*x162))+(((-1.0)*x156*x159*x164))+(((-1.0)*cj5*x165*x168))+((x168*x173))+(((-1.0)*x163*x169))+(((0.249980320149909)*x158*x177))+(((0.249980320149909)*x158*x178))+(((-1.0)*x157*x160*x162))+(((-0.249980320149909)*x164*x178))+(((-0.249980320149909)*x164*x177))+((cj5*x165*x172))+((cj5*x165*x176))+((x166*x170))+(((0.249980320149909)*x158*x180))+(((0.249980320149909)*x158*x181))+((cj4*x160*x162))+((x171*x172))+((x171*x176))+(((-1.0)*x154*x159*x164))+(((-1.0)*r11*x160*x166))+(((-0.249980320149909)*x164*x180))+(((-0.249980320149909)*x164*x181))+((x165*x169))+(((-1.0)*x168*x171))+(((-1.0)*x172*x173))+((x156*x158*x159))+(((-1.0)*x173*x176))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
IkReal x183=cj5*cj5;
IkReal x184=sj4*sj4;
IkReal x185=cj4*cj4;
IkReal x186=sj5*sj5;
IkReal x187=((1.73214170967343)*cj5);
IkReal x188=(r02*r21);
IkReal x189=(cj5*sj4);
IkReal x190=(r01*r20);
IkReal x191=((0.750019679850091)*cj4);
IkReal x192=(r00*r22);
IkReal x193=(r02*r20);
IkReal x194=(cj4*sj5);
IkReal x195=(r01*r22);
IkReal x196=((3.00031490239039)*cj4);
IkReal x197=(r00*x184);
IkReal x198=(r21*x186);
IkReal x199=(r21*x183);
IkReal x200=((3.46441978055434)*sj4*sj5);
IkReal x201=((0.249980320149909)*x186);
IkReal x202=(r00*x185);
IkReal x203=(sj5*x184);
IkReal x204=((1.0)*x184);
IkReal x205=((0.433001339129174)*cj4*cj5);
IkReal x206=((0.433001339129174)*x185);
IkReal x207=((1.0)*x185);
IkReal x208=((0.249980320149909)*x183);
IkReal x209=((0.866036765876652)*sj4*sj5);
IkReal x210=((1.73214170967343)*sj5*x185);
IkReal x211=(cj5*x184*x193);
j3eval[0]=((((-1.0)*x186*x190*x204))+(((-1.0)*x186*x190*x207))+((x198*x202))+((x185*x187*x192))+(((1.73214170967343)*x188*x203))+((x192*x200))+(((-1.73214170967343)*x188*x194))+(((-1.0)*x183*x190*x196))+(((-1.0)*x184*x187*x193))+(((3.46441978055434)*x189*x195))+((r00*x196*x198))+((r00*x196*x199))+(((-1.0)*cj4*x187*x192))+((cj4*x187*x193))+(((1.73214170967343)*x194*x195))+(((-3.46441978055434)*x188*x189))+((x184*x187*x192))+(((-1.73214170967343)*x195*x203))+(((-1.0)*x193*x200))+(((-1.0)*x186*x190*x196))+((x188*x210))+(((-1.0)*x195*x210))+(((-1.0)*x183*x190*x204))+(((-1.0)*x183*x190*x207))+((x197*x198))+((x197*x199))+((x199*x202))+(((-1.0)*x185*x187*x193)));
j3eval[1]=IKsign(((((0.433001339129174)*x188*x203))+(((0.249980320149909)*x199*x202))+((sj5*x188*x206))+(((-1.0)*x192*x205))+(((-1.0)*x185*x190*x201))+(((-1.0)*x185*x190*x208))+((r00*x191*x199))+((r00*x191*x198))+(((0.866036765876652)*x189*x195))+((x192*x209))+(((-1.0)*x183*x190*x191))+(((-0.866036765876652)*x188*x189))+(((0.433001339129174)*cj5*x184*x192))+(((0.249980320149909)*x198*x202))+(((-0.433001339129174)*x188*x194))+(((-0.433001339129174)*x195*x203))+(((-1.0)*cj5*x193*x206))+(((0.433001339129174)*x194*x195))+(((-1.0)*sj5*x195*x206))+(((-1.0)*x193*x209))+(((-1.0)*x186*x190*x191))+((x193*x205))+((cj5*x192*x206))+(((-1.0)*x184*x190*x201))+(((-1.0)*x184*x190*x208))+(((-0.433001339129174)*x211))+(((0.249980320149909)*x197*x199))+(((0.249980320149909)*x197*x198))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
IkReal x212=cj4*cj4;
IkReal x213=cj5*cj5;
IkReal x214=sj4*sj4;
IkReal x215=sj5*sj5;
IkReal x216=(r01*r12);
IkReal x217=(cj5*sj4);
IkReal x218=((1.73214170967343)*r02);
IkReal x219=((0.866036765876652)*r02);
IkReal x220=(sj4*sj5);
IkReal x221=((0.433001339129174)*sj5);
IkReal x222=(r00*r12);
IkReal x223=((1.73214170967343)*cj4);
IkReal x224=((0.433001339129174)*cj5);
IkReal x225=(cj4*r11);
IkReal x226=(r02*r11);
IkReal x227=(r02*r10);
IkReal x228=(cj4*r01*r10);
IkReal x229=((0.750019679850091)*x213);
IkReal x230=(r10*x212);
IkReal x231=(r11*x214);
IkReal x232=(r00*x213);
IkReal x233=(sj5*x212);
IkReal x234=(r11*x212);
IkReal x235=((3.00031490239039)*x215);
IkReal x236=((0.750019679850091)*x215);
IkReal x237=(r10*x214);
IkReal x238=(r01*x215);
IkReal x239=(r00*x215);
IkReal x240=((1.73214170967343)*x214);
IkReal x241=((0.249980320149909)*r01*x213);
IkReal x242=((1.0)*r01*x213);
j3eval[0]=((((3.00031490239039)*x225*x232))+((x234*x239))+(((-1.0)*sj5*x218*x225))+((cj4*cj5*r10*x218))+(((-1.0)*x230*x238))+((x232*x234))+(((-1.73214170967343)*x216*x233))+((sj5*x218*x231))+(((-1.0)*x237*x242))+(((3.46441978055434)*x220*x222))+(((-1.0)*x230*x242))+(((-1.0)*x237*x238))+((cj5*x222*x240))+(((-3.00031490239039)*x213*x228))+((sj5*x216*x223))+((r00*x225*x235))+(((3.46441978055434)*x216*x217))+(((-1.0)*cj5*x218*x230))+(((-1.0)*cj5*x218*x237))+(((-3.46441978055434)*x217*x226))+(((-1.0)*sj5*x216*x240))+((r11*x218*x233))+((x231*x232))+((x231*x239))+(((1.73214170967343)*cj5*x212*x222))+(((-1.0)*x228*x235))+(((-1.0)*cj5*x222*x223))+(((-3.46441978055434)*x220*x227)));
j3eval[1]=IKsign(((((-1.0)*x214*x224*x227))+(((-1.0)*x212*x224*x227))+(((0.249980320149909)*x234*x239))+(((-1.0)*cj4*x222*x224))+((x212*x221*x226))+(((0.866036765876652)*x220*x222))+((cj4*x224*x227))+(((-1.0)*x212*x216*x221))+(((-1.0)*r10*x219*x220))+(((-1.0)*x237*x241))+(((-1.0)*x230*x241))+(((-1.0)*x228*x229))+(((-1.0)*r02*x221*x225))+((cj4*x216*x221))+((r00*x225*x236))+(((0.866036765876652)*x216*x217))+(((-0.249980320149909)*x230*x238))+((x212*x222*x224))+(((0.249980320149909)*x232*x234))+((r00*x225*x229))+(((0.249980320149909)*x231*x232))+(((0.249980320149909)*x231*x239))+(((-0.249980320149909)*x237*x238))+((x214*x221*x226))+(((-1.0)*x228*x236))+(((-1.0)*r11*x217*x219))+((x214*x222*x224))+(((-1.0)*x214*x216*x221))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x243=(r10*sj5);
IkReal x244=((0.499980319762597)*sj4);
IkReal x245=(cj5*r01);
IkReal x246=((0.249980320149909)*cj4);
IkReal x247=(cj5*r11);
IkReal x248=(r00*sj5);
IkReal x249=((0.433001339129174)*r12);
IkReal x250=((0.866036765876652)*sj4);
IkReal x251=(cj5*r00);
IkReal x252=((1.0)*cj4);
IkReal x253=(r01*sj5);
IkReal x254=(r11*sj5);
IkReal x255=((0.433001339129174)*r02);
IkReal x256=(cj5*r10);
IkReal x257=(r12*x250);
IkReal x258=(x252*x256);
IkReal x259=(x243*x244);
IkReal x260=(x244*x247);
IkReal x261=(x259+x257+x260);
IkReal x262=((((-1.0)*x251*x252))+((x244*x245))+((x244*x248))+((cj4*x253))+((r02*x250)));
IkReal x263=((((-0.750019679850091)*x245))+(((-0.750019679850091)*x248))+(((-1.0)*cj4*x255))+(((-1.0)*x244*x251))+x255+(((-1.0)*x245*x246))+(((-1.0)*x246*x248))+((x244*x253)));
IkReal x264=((((-1.0)*cj4*x249))+(((-0.750019679850091)*x243))+(((-0.750019679850091)*x247))+(((-1.0)*x244*x256))+(((-1.0)*x243*x246))+x249+(((-1.0)*x246*x247))+((x244*x254)));
CheckValue<IkReal> x265=IKPowWithIntegerCheck(IKsign((((x263*(((((-1.0)*x252*x254))+x258+(((-1.0)*x261))))))+((x262*x264)))),-1);
if(!x265.valid){
continue;
}
CheckValue<IkReal> x266 = IKatan2WithCheck(IkReal((((cj0*x263))+((sj0*x264)))),IkReal(((((-1.0)*sj0*((x261+((cj4*x254))+(((-1.0)*x258))))))+(((-1.0)*cj0*x262)))),IKFAST_ATAN2_MAGTHRESH);
if(!x266.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x265.value)))+(x266.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x267=IKcos(j3);
IkReal x268=IKsin(j3);
IkReal x269=(r10*sj5);
IkReal x270=((0.499980319762597)*sj4);
IkReal x271=(cj5*r01);
IkReal x272=(r21*sj5);
IkReal x273=((0.249980320149909)*cj4);
IkReal x274=(cj5*r11);
IkReal x275=(cj5*r21);
IkReal x276=((0.433001339129174)*r22);
IkReal x277=(r00*sj5);
IkReal x278=((0.433001339129174)*r12);
IkReal x279=((0.866036765876652)*sj4);
IkReal x280=(cj5*r00);
IkReal x281=((1.0)*cj4);
IkReal x282=(r11*sj5);
IkReal x283=(cj5*r20);
IkReal x284=(r20*sj5);
IkReal x285=(cj5*r10);
IkReal x286=(r01*sj5);
IkReal x287=((0.433001339129174)*r02);
evalcond[0]=(((x268*((((cj4*x272))+((r22*x279))+(((-1.0)*x281*x283))+((x270*x275))+((x270*x284))))))+((x267*(((((-1.0)*x270*x283))+(((-1.0)*x273*x275))+(((-1.0)*cj4*x276))+(((-0.750019679850091)*x284))+(((-0.750019679850091)*x275))+((x270*x272))+x276+(((-1.0)*x273*x284)))))));
evalcond[1]=(((x267*(((((-1.0)*x270*x285))+(((-1.0)*x273*x274))+(((-1.0)*cj4*x278))+(((-0.750019679850091)*x269))+(((-0.750019679850091)*x274))+(((-1.0)*x269*x273))+x278+((x270*x282))))))+((x268*(((((-1.0)*x281*x285))+((x270*x274))+((r12*x279))+((x269*x270))+((cj4*x282))))))+cj0);
evalcond[2]=((((-1.0)*sj0))+((x267*(((((-1.0)*x270*x280))+(((-1.0)*x273*x277))+(((-0.750019679850091)*x277))+(((-0.750019679850091)*x271))+(((-1.0)*x271*x273))+x287+(((-1.0)*cj4*x287))+((x270*x286))))))+((x268*((((r02*x279))+(((-1.0)*x280*x281))+((x270*x277))+((x270*x271))+((cj4*x286)))))));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x288=((0.502238137091374)*cj5);
IkReal x289=((0.502238137091374)*sj5);
IkReal x290=((0.428388381324785)*cj4);
IkReal x291=((0.247317167488307)*cj4);
IkReal x292=((0.494653804785234)*sj4);
if( IKabs((((r10*x289))+(((-3.44827586206897)*py))+(((-0.216439204882112)*r12))+(((-1.0)*r10*sj5*x291))+((r11*x288))+(((-1.0)*cj5*r11*x291))+(((-1.0)*cj5*r10*x292))+((r11*sj5*x292))+(((-1.0)*r12*x290)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*sj5*x292))+((cj5*r20*x292))+(((-1.0)*r21*x288))+((r20*sj5*x291))+(((-1.0)*r20*x289))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((cj5*r21*x291))+((r22*x290)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r10*x289))+(((-3.44827586206897)*py))+(((-0.216439204882112)*r12))+(((-1.0)*r10*sj5*x291))+((r11*x288))+(((-1.0)*cj5*r11*x291))+(((-1.0)*cj5*r10*x292))+((r11*sj5*x292))+(((-1.0)*r12*x290))))+IKsqr(((((-1.0)*r21*sj5*x292))+((cj5*r20*x292))+(((-1.0)*r21*x288))+((r20*sj5*x291))+(((-1.0)*r20*x289))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((cj5*r21*x291))+((r22*x290))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r10*x289))+(((-3.44827586206897)*py))+(((-0.216439204882112)*r12))+(((-1.0)*r10*sj5*x291))+((r11*x288))+(((-1.0)*cj5*r11*x291))+(((-1.0)*cj5*r10*x292))+((r11*sj5*x292))+(((-1.0)*r12*x290))), ((((-1.0)*r21*sj5*x292))+((cj5*r20*x292))+(((-1.0)*r21*x288))+((r20*sj5*x291))+(((-1.0)*r20*x289))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((cj5*r21*x291))+((r22*x290))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x293=((1.0)*py);
IkReal x294=((0.064677809339343)*cj5);
IkReal x295=(cj3*cj5);
IkReal x296=(cj4*r10);
IkReal x297=(r20*sj5);
IkReal x298=(cj5*sj3);
IkReal x299=((0.0934963197956057)*sj4);
IkReal x300=((0.145649059756499)*cj5);
IkReal x301=((0.140253680131967)*sj3);
IkReal x302=(cj4*r11);
IkReal x303=(r11*sj5);
IkReal x304=(cj4*r12);
IkReal x305=((0.0160210495477794)*r22);
IkReal x306=(r10*sj5);
IkReal x307=((0.0184992718312161)*sj4);
IkReal x308=(r21*sj5);
IkReal x309=((0.143449603387718)*sj4);
IkReal x310=((0.0809712504171555)*sj3);
IkReal x311=((0.187)*cj3);
IkReal x312=(cj5*r10);
IkReal x313=(cj5*r20);
IkReal x314=((0.29)*(IKsin(j1)));
IkReal x315=((0.29)*(IKcos(j1)));
IkReal x316=(r22*x310);
IkReal x317=((0.161948875218934)*cj3*sj4);
IkReal x318=(cj4*cj5*r21);
IkReal x319=((0.046746319868033)*cj4*sj3*sj5);
IkReal x320=(x314+x293);
evalcond[0]=((((0.124232630584188)*cj4*r22))+(((-1.0)*r21*x300))+(((0.0717219785716089)*x318))+(((-1.0)*x308*x309))+(((0.0627673694158124)*r22))+((x309*x313))+(((-1.0)*x315))+pz+(((-0.145649059756499)*x297))+(((0.0717219785716089)*cj4*x297)));
evalcond[1]=((((-0.0627673694158124)*r12))+(((-0.0717219785716089)*sj5*x296))+((r11*x300))+(((-0.0717219785716089)*cj5*x302))+((x303*x309))+(((-1.0)*x320))+(((0.145649059756499)*x306))+(((-0.124232630584188)*x304))+(((-1.0)*x309*x312)));
evalcond[2]=(((sj3*x299*x308))+(((-0.0160210495477794)*r12))+(((-1.0)*cj4*x308*x311))+(((-1.0)*r21*x295*x299))+(((0.064677809339343)*x306))+(((0.0160210495477794)*x304))+(((-0.140253680131967)*r21*x298))+(((-0.046746319868033)*cj4*r21*x298))+(((-1.0)*cj3*x297*x299))+(((-1.0)*x303*x307))+(((-1.0)*x297*x301))+(((-0.046746319868033)*cj4*sj3*x297))+(((-1.0)*x320))+(((0.187)*cj4*r20*x295))+(((-1.0)*cj4*x316))+(((-1.0)*r20*x298*x299))+x316+((x307*x312))+(((0.00924927184554663)*cj5*x302))+(((-1.0)*r22*x317))+(((0.00924927184554663)*sj5*x296))+((r11*x294)));
evalcond[3]=(((x301*x306))+(((-1.0)*sj3*x299*x303))+((x304*x310))+(((-0.187)*x295*x296))+(((0.064677809339343)*x297))+((sj5*x302*x311))+(((0.00924927184554663)*x318))+(((-1.0)*r12*x310))+(((0.00924927184554663)*cj4*x297))+x315+(((-1.0)*pz))+((x307*x313))+((cj3*x299*x306))+(((0.140253680131967)*r11*x298))+(((-1.0)*x307*x308))+(((0.046746319868033)*sj3*sj5*x296))+((r12*x317))+((cj4*x305))+((r21*x294))+(((-1.0)*x305))+(((0.046746319868033)*x298*x302))+((r11*x295*x299))+((r10*x298*x299)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x321=((0.433001339129174)*sj1);
IkReal x322=(cj5*r21);
IkReal x323=(r10*sj5);
IkReal x324=((0.433001339129174)*cj1);
IkReal x325=(r20*sj5);
IkReal x326=(cj5*r11);
IkReal x327=((0.866036765876652)*sj4);
IkReal x328=(cj1*sj5);
IkReal x329=(cj5*r20);
IkReal x330=((0.249980320149909)*r22);
IkReal x331=(sj1*sj5);
IkReal x332=((0.249980320149909)*r12);
IkReal x333=(cj5*r10);
IkReal x334=((0.750019679850091)*cj4*r12);
IkReal x335=((0.750019679850091)*cj4*r22);
if( IKabs((((cj4*x323*x324))+((cj1*x327*x333))+((cj4*x321*x325))+((cj4*x321*x322))+(((-1.0)*x321*x325))+(((-1.0)*x321*x322))+((cj1*x334))+((cj1*x332))+(((-1.0)*r21*x327*x331))+((cj4*x324*x326))+(((-1.0)*x323*x324))+(((-1.0)*x324*x326))+(((-1.0)*r11*x327*x328))+((sj1*x335))+((sj1*x330))+((sj1*x327*x329)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x327*x329))+(((-1.0)*cj4*x321*x326))+(((-1.0)*cj4*x321*x323))+((cj1*x335))+((cj1*x330))+(((-1.0)*sj1*x327*x333))+(((-1.0)*x322*x324))+((cj4*x324*x325))+(((-1.0)*r21*x327*x328))+((r11*x327*x331))+(((-1.0)*x324*x325))+((x321*x326))+((x321*x323))+(((-1.0)*sj1*x334))+(((-1.0)*sj1*x332))+((cj4*x322*x324)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x323*x324))+((cj1*x327*x333))+((cj4*x321*x325))+((cj4*x321*x322))+(((-1.0)*x321*x325))+(((-1.0)*x321*x322))+((cj1*x334))+((cj1*x332))+(((-1.0)*r21*x327*x331))+((cj4*x324*x326))+(((-1.0)*x323*x324))+(((-1.0)*x324*x326))+(((-1.0)*r11*x327*x328))+((sj1*x335))+((sj1*x330))+((sj1*x327*x329))))+IKsqr((((cj1*x327*x329))+(((-1.0)*cj4*x321*x326))+(((-1.0)*cj4*x321*x323))+((cj1*x335))+((cj1*x330))+(((-1.0)*sj1*x327*x333))+(((-1.0)*x322*x324))+((cj4*x324*x325))+(((-1.0)*r21*x327*x328))+((r11*x327*x331))+(((-1.0)*x324*x325))+((x321*x326))+((x321*x323))+(((-1.0)*sj1*x334))+(((-1.0)*sj1*x332))+((cj4*x322*x324))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x323*x324))+((cj1*x327*x333))+((cj4*x321*x325))+((cj4*x321*x322))+(((-1.0)*x321*x325))+(((-1.0)*x321*x322))+((cj1*x334))+((cj1*x332))+(((-1.0)*r21*x327*x331))+((cj4*x324*x326))+(((-1.0)*x323*x324))+(((-1.0)*x324*x326))+(((-1.0)*r11*x327*x328))+((sj1*x335))+((sj1*x330))+((sj1*x327*x329))), (((cj1*x327*x329))+(((-1.0)*cj4*x321*x326))+(((-1.0)*cj4*x321*x323))+((cj1*x335))+((cj1*x330))+(((-1.0)*sj1*x327*x333))+(((-1.0)*x322*x324))+((cj4*x324*x325))+(((-1.0)*r21*x327*x328))+((r11*x327*x331))+(((-1.0)*x324*x325))+((x321*x326))+((x321*x323))+(((-1.0)*sj1*x334))+(((-1.0)*sj1*x332))+((cj4*x322*x324))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x336=IKsin(j2);
IkReal x337=IKcos(j2);
IkReal x338=(cj4*sj5);
IkReal x339=((0.433001339129174)*r20);
IkReal x340=((0.064677809339343)*cj5);
IkReal x341=(r10*sj3);
IkReal x342=(cj3*r21);
IkReal x343=(r20*sj5);
IkReal x344=((0.750019679850091)*sj3);
IkReal x345=(r10*sj5);
IkReal x346=((0.0160210495477794)*r22);
IkReal x347=((0.499980319762597)*sj4);
IkReal x348=(sj3*sj5);
IkReal x349=(cj5*r21);
IkReal x350=(cj4*r12);
IkReal x351=((0.433001339129174)*sj3);
IkReal x352=((0.866036765876652)*sj4);
IkReal x353=(cj5*r10);
IkReal x354=(cj5*r11);
IkReal x355=(cj5*r20);
IkReal x356=((0.433001339129174)*cj4);
IkReal x357=(cj4*r22);
IkReal x358=((0.00924927184554663)*cj4);
IkReal x359=((0.0184992718312161)*sj4);
IkReal x360=(cj1*x337);
IkReal x361=(sj1*x336);
IkReal x362=(cj1*x336);
IkReal x363=(sj1*x337);
IkReal x364=((0.249980320149909)*cj4*sj3);
IkReal x365=(sj5*x359);
IkReal x366=((1.0)*cj3*cj4*cj5);
IkReal x367=(x360+x361);
evalcond[0]=((((0.433001339129174)*x349))+((r21*sj5*x352))+(((-0.750019679850091)*x357))+(((-0.249980320149909)*r22))+((sj5*x339))+(((-1.0)*x338*x339))+(((-1.0)*x349*x356))+x367+(((-1.0)*x352*x355)));
evalcond[1]=((((0.433001339129174)*x345))+(((-1.0)*x363))+(((-0.750019679850091)*x350))+(((-0.249980320149909)*r12))+(((0.433001339129174)*x354))+((r11*sj5*x352))+x362+(((-0.433001339129174)*r10*x338))+(((-1.0)*x354*x356))+(((-1.0)*x352*x353)));
evalcond[2]=(((r21*x340))+(((-1.0)*r21*x365))+((x355*x359))+(((0.00924927184554663)*r20*x338))+(((-1.0)*pz))+((cj4*x346))+(((0.29)*cj1))+((x349*x358))+(((-1.0)*x346))+(((0.064677809339343)*x343))+(((-0.187)*x361))+(((-0.187)*x360)));
evalcond[3]=((((-0.0160210495477794)*r12))+(((-0.29)*sj1))+((x353*x359))+(((-1.0)*r11*x365))+((x354*x358))+(((-1.0)*py))+(((0.0160210495477794)*x350))+(((0.187)*x363))+(((0.064677809339343)*x345))+((r11*x340))+(((0.00924927184554663)*r10*x338))+(((-0.187)*x362)));
evalcond[4]=((((-1.0)*cj3*cj4*x353))+((cj3*x347*x354))+(((0.750019679850091)*sj5*x341))+(((-1.0)*r12*x351))+(((-1.0)*r11*x347*x348))+((x344*x354))+x367+((x354*x364))+(((0.249980320149909)*x338*x341))+((cj3*r12*x352))+((cj5*x341*x347))+((x350*x351))+((cj3*x345*x347))+((cj3*r11*x338)));
evalcond[5]=((((-1.0)*cj3*cj4*x355))+(((0.249980320149909)*r20*sj3*x338))+(((-1.0)*x362))+(((-1.0)*r22*x351))+((cj5*x342*x347))+((cj3*x343*x347))+((x351*x357))+x363+((x344*x349))+((cj3*r22*x352))+((sj3*x347*x355))+(((-1.0)*r21*x347*x348))+((x349*x364))+((x338*x342))+((x343*x344)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x368=((0.502238137091374)*cj5);
IkReal x369=(r20*sj5);
IkReal x370=((0.494653804785234)*sj4);
IkReal x371=((0.428388381324785)*cj4);
IkReal x372=((0.247317167488307)*cj4);
IkReal x373=(r10*sj5);
if( IKabs(((((-1.0)*r11*sj5*x370))+(((0.216439204882112)*r12))+((cj5*r10*x370))+(((-0.502238137091374)*x373))+((x372*x373))+((cj5*r11*x372))+(((-1.0)*r11*x368))+(((3.44827586206897)*py))+((r12*x371)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x370))+(((-1.0)*r21*x368))+((x369*x372))+(((-0.502238137091374)*x369))+((cj5*r21*x372))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x370))+((r22*x371)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*sj5*x370))+(((0.216439204882112)*r12))+((cj5*r10*x370))+(((-0.502238137091374)*x373))+((x372*x373))+((cj5*r11*x372))+(((-1.0)*r11*x368))+(((3.44827586206897)*py))+((r12*x371))))+IKsqr((((cj5*r20*x370))+(((-1.0)*r21*x368))+((x369*x372))+(((-0.502238137091374)*x369))+((cj5*r21*x372))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x370))+((r22*x371))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r11*sj5*x370))+(((0.216439204882112)*r12))+((cj5*r10*x370))+(((-0.502238137091374)*x373))+((x372*x373))+((cj5*r11*x372))+(((-1.0)*r11*x368))+(((3.44827586206897)*py))+((r12*x371))), (((cj5*r20*x370))+(((-1.0)*r21*x368))+((x369*x372))+(((-0.502238137091374)*x369))+((cj5*r21*x372))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x370))+((r22*x371))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x374=((0.064677809339343)*cj5);
IkReal x375=(cj5*r10);
IkReal x376=(r20*sj5);
IkReal x377=((0.0160210495477794)*r22);
IkReal x378=((0.140253680131967)*sj3);
IkReal x379=(cj5*r21);
IkReal x380=(cj5*r11);
IkReal x381=(r21*sj5);
IkReal x382=((0.00924927184554663)*cj4);
IkReal x383=((0.0717219785716089)*cj4);
IkReal x384=((0.0934963197956057)*sj4);
IkReal x385=(cj5*r20);
IkReal x386=(cj4*r12);
IkReal x387=(r11*sj5);
IkReal x388=((0.0184992718312161)*sj4);
IkReal x389=(r10*sj5);
IkReal x390=((0.0809712504171555)*sj3);
IkReal x391=(cj4*r22);
IkReal x392=((0.143449603387718)*sj4);
IkReal x393=((0.29)*(IKcos(j1)));
IkReal x394=((0.29)*(IKsin(j1)));
IkReal x395=((0.187)*cj3*cj4);
IkReal x396=(cj4*x389);
IkReal x397=((0.161948875218934)*cj3*sj4);
IkReal x398=((0.046746319868033)*cj4*sj3);
IkReal x399=(sj5*x398);
evalcond[0]=((((-1.0)*x387*x392))+(((-1.0)*x394))+(((0.0627673694158124)*r12))+((x375*x392))+((x383*x389))+py+(((0.124232630584188)*x386))+((x380*x383))+(((-0.145649059756499)*x380))+(((-0.145649059756499)*x389)));
evalcond[1]=(((x376*x383))+((x385*x392))+(((-1.0)*x393))+(((0.124232630584188)*x391))+(((0.0627673694158124)*r22))+((x379*x383))+pz+(((-0.145649059756499)*x376))+(((-0.145649059756499)*x379))+(((-1.0)*x381*x392)));
evalcond[2]=(((x378*x380))+((x378*x389))+(((0.046746319868033)*sj3*x396))+(((-1.0)*x393))+(((-1.0)*r21*x374))+(((-1.0)*cj4*x377))+(((-1.0)*x376*x382))+((x380*x398))+(((-1.0)*x379*x382))+(((-1.0)*r12*x390))+x377+((cj3*x380*x384))+((sj3*x375*x384))+pz+(((-0.064677809339343)*x376))+((x387*x395))+((r12*x397))+((cj3*x384*x389))+(((-1.0)*sj3*x384*x387))+(((-1.0)*x385*x388))+((x381*x388))+((x386*x390))+(((-1.0)*x375*x395)));
evalcond[3]=((((0.0160210495477794)*x386))+(((-0.0160210495477794)*r12))+(((0.064677809339343)*x389))+((x379*x398))+((cj3*x376*x384))+(((-1.0)*x385*x395))+((x381*x395))+(((-1.0)*x387*x388))+x394+(((-1.0)*py))+((x376*x398))+((x382*x389))+((x378*x379))+((r22*x397))+((x376*x378))+((r11*x374))+(((-1.0)*sj3*x381*x384))+((cj3*x379*x384))+((x390*x391))+(((-1.0)*r22*x390))+((x380*x382))+((sj3*x384*x385))+((x375*x388)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x400=((0.433001339129174)*sj1);
IkReal x401=(cj5*r21);
IkReal x402=(r10*sj5);
IkReal x403=((0.433001339129174)*cj1);
IkReal x404=(r20*sj5);
IkReal x405=(cj5*r11);
IkReal x406=((0.866036765876652)*sj4);
IkReal x407=(cj1*sj5);
IkReal x408=(cj5*r20);
IkReal x409=((0.249980320149909)*r22);
IkReal x410=(sj1*sj5);
IkReal x411=((0.249980320149909)*r12);
IkReal x412=(cj5*r10);
IkReal x413=((0.750019679850091)*cj4*r12);
IkReal x414=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*r21*x406*x410))+((sj1*x409))+(((-1.0)*cj4*x402*x403))+(((-1.0)*cj1*x413))+(((-1.0)*cj1*x411))+((sj1*x414))+(((-1.0)*cj4*x403*x405))+(((-1.0)*cj1*x406*x412))+(((-1.0)*x400*x404))+(((-1.0)*x400*x401))+((cj4*x400*x401))+((cj4*x400*x404))+((x403*x405))+((x402*x403))+((sj1*x406*x408))+((r11*x406*x407)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x403*x404))+(((-1.0)*r21*x406*x407))+((sj1*x411))+((sj1*x413))+(((-1.0)*x403*x404))+(((-1.0)*x401*x403))+(((-1.0)*x400*x405))+(((-1.0)*x400*x402))+((cj4*x401*x403))+((cj4*x400*x402))+((cj4*x400*x405))+(((-1.0)*r11*x406*x410))+((cj1*x409))+((cj1*x414))+((cj1*x406*x408))+((sj1*x406*x412)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r21*x406*x410))+((sj1*x409))+(((-1.0)*cj4*x402*x403))+(((-1.0)*cj1*x413))+(((-1.0)*cj1*x411))+((sj1*x414))+(((-1.0)*cj4*x403*x405))+(((-1.0)*cj1*x406*x412))+(((-1.0)*x400*x404))+(((-1.0)*x400*x401))+((cj4*x400*x401))+((cj4*x400*x404))+((x403*x405))+((x402*x403))+((sj1*x406*x408))+((r11*x406*x407))))+IKsqr((((cj4*x403*x404))+(((-1.0)*r21*x406*x407))+((sj1*x411))+((sj1*x413))+(((-1.0)*x403*x404))+(((-1.0)*x401*x403))+(((-1.0)*x400*x405))+(((-1.0)*x400*x402))+((cj4*x401*x403))+((cj4*x400*x402))+((cj4*x400*x405))+(((-1.0)*r11*x406*x410))+((cj1*x409))+((cj1*x414))+((cj1*x406*x408))+((sj1*x406*x412))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r21*x406*x410))+((sj1*x409))+(((-1.0)*cj4*x402*x403))+(((-1.0)*cj1*x413))+(((-1.0)*cj1*x411))+((sj1*x414))+(((-1.0)*cj4*x403*x405))+(((-1.0)*cj1*x406*x412))+(((-1.0)*x400*x404))+(((-1.0)*x400*x401))+((cj4*x400*x401))+((cj4*x400*x404))+((x403*x405))+((x402*x403))+((sj1*x406*x408))+((r11*x406*x407))), (((cj4*x403*x404))+(((-1.0)*r21*x406*x407))+((sj1*x411))+((sj1*x413))+(((-1.0)*x403*x404))+(((-1.0)*x401*x403))+(((-1.0)*x400*x405))+(((-1.0)*x400*x402))+((cj4*x401*x403))+((cj4*x400*x402))+((cj4*x400*x405))+(((-1.0)*r11*x406*x410))+((cj1*x409))+((cj1*x414))+((cj1*x406*x408))+((sj1*x406*x412))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x415=IKcos(j2);
IkReal x416=IKsin(j2);
IkReal x417=(cj4*sj5);
IkReal x418=((0.433001339129174)*r20);
IkReal x419=((0.064677809339343)*cj5);
IkReal x420=(r10*sj3);
IkReal x421=(cj3*sj4);
IkReal x422=((0.433001339129174)*r10);
IkReal x423=((0.0160210495477794)*r22);
IkReal x424=(r20*sj5);
IkReal x425=(r11*sj5);
IkReal x426=(cj5*r20);
IkReal x427=(cj5*r21);
IkReal x428=((0.866036765876652)*sj4);
IkReal x429=(cj5*r10);
IkReal x430=(cj5*r11);
IkReal x431=((0.750019679850091)*sj3);
IkReal x432=(cj4*sj3);
IkReal x433=((0.750019679850091)*cj4);
IkReal x434=((0.433001339129174)*cj4);
IkReal x435=((0.433001339129174)*r22);
IkReal x436=((0.0160210495477794)*r12);
IkReal x437=((0.0184992718312161)*sj4);
IkReal x438=(r21*sj5);
IkReal x439=(r10*sj5);
IkReal x440=((0.00924927184554663)*cj4);
IkReal x441=(sj1*x415);
IkReal x442=(cj1*x415);
IkReal x443=((0.433001339129174)*r12*sj3);
IkReal x444=((0.499980319762597)*sj3*sj4);
IkReal x445=(sj1*x416);
IkReal x446=(cj1*x416);
IkReal x447=((1.0)*x446);
IkReal x448=((1.0)*cj3*cj4*cj5);
evalcond[0]=((((-1.0)*x417*x418))+(((-1.0)*x427*x434))+(((-0.249980320149909)*r22))+((x428*x438))+((sj5*x418))+(((0.433001339129174)*x427))+(((-1.0)*x426*x428))+x445+x442+(((-1.0)*r22*x433)));
evalcond[1]=((((-1.0)*x430*x434))+(((-1.0)*x447))+((x425*x428))+(((-1.0)*r12*x433))+(((-0.249980320149909)*r12))+(((0.433001339129174)*x430))+x441+(((-1.0)*x428*x429))+((sj5*x422))+(((-1.0)*x417*x422)));
evalcond[2]=((((-1.0)*x437*x438))+((x426*x437))+(((-1.0)*x423))+((cj4*x423))+(((-1.0)*pz))+(((0.29)*cj1))+((r21*x419))+(((-0.187)*x442))+(((-0.187)*x445))+(((0.00924927184554663)*r20*x417))+(((0.064677809339343)*x424))+((x427*x440)));
evalcond[3]=(((x429*x437))+(((0.187)*x446))+(((-1.0)*x436))+((r11*x419))+(((0.29)*sj1))+((cj4*x436))+(((0.00924927184554663)*r10*x417))+(((-1.0)*py))+(((-0.187)*x441))+((x430*x440))+(((-1.0)*x425*x437))+(((0.064677809339343)*x439)));
evalcond[4]=((((-1.0)*sj3*x435))+(((-1.0)*x447))+((x424*x431))+(((0.499980319762597)*x421*x424))+(((0.499980319762597)*x421*x427))+(((-1.0)*x438*x444))+(((0.249980320149909)*r20*sj3*x417))+((x426*x444))+(((0.249980320149909)*x427*x432))+x441+(((0.866036765876652)*r22*x421))+(((-1.0)*cj3*cj4*x426))+((cj3*r21*x417))+((x432*x435))+((x427*x431)));
evalcond[5]=((((-1.0)*x443))+(((0.249980320149909)*x430*x432))+(((0.499980319762597)*x421*x430))+(((0.499980319762597)*x421*x439))+(((0.499980319762597)*cj5*sj4*x420))+(((-1.0)*x442))+(((-1.0)*x445))+(((0.866036765876652)*r12*x421))+(((0.249980320149909)*x417*x420))+((x430*x431))+(((-1.0)*cj3*cj4*x429))+(((-1.0)*x425*x444))+(((0.433001339129174)*r12*x432))+(((0.750019679850091)*sj5*x420))+((cj3*r11*x417)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x449=((0.502238137091374)*cj5);
IkReal x450=((0.428388381324785)*cj4);
IkReal x451=((0.494653804785234)*sj4);
IkReal x452=(r00*sj5);
IkReal x453=((0.247317167488307)*cj4);
IkReal x454=(r20*sj5);
if( IKabs(((((-3.44827586206897)*px))+((r01*sj5*x451))+(((-0.216439204882112)*r02))+(((-1.0)*cj5*r01*x453))+(((-1.0)*cj5*r00*x451))+(((0.502238137091374)*x452))+(((-1.0)*x452*x453))+((r01*x449))+(((-1.0)*r02*x450)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x453*x454))+((cj5*r20*x451))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+(((-0.502238137091374)*x454))+(((-1.0)*r21*x449))+((cj5*r21*x453))+((r22*x450))+(((-1.0)*r21*sj5*x451)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-3.44827586206897)*px))+((r01*sj5*x451))+(((-0.216439204882112)*r02))+(((-1.0)*cj5*r01*x453))+(((-1.0)*cj5*r00*x451))+(((0.502238137091374)*x452))+(((-1.0)*x452*x453))+((r01*x449))+(((-1.0)*r02*x450))))+IKsqr((((x453*x454))+((cj5*r20*x451))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+(((-0.502238137091374)*x454))+(((-1.0)*r21*x449))+((cj5*r21*x453))+((r22*x450))+(((-1.0)*r21*sj5*x451))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-3.44827586206897)*px))+((r01*sj5*x451))+(((-0.216439204882112)*r02))+(((-1.0)*cj5*r01*x453))+(((-1.0)*cj5*r00*x451))+(((0.502238137091374)*x452))+(((-1.0)*x452*x453))+((r01*x449))+(((-1.0)*r02*x450))), (((x453*x454))+((cj5*r20*x451))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+(((-0.502238137091374)*x454))+(((-1.0)*r21*x449))+((cj5*r21*x453))+((r22*x450))+(((-1.0)*r21*sj5*x451))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x455=((1.0)*px);
IkReal x456=((0.0809712504171555)*sj3);
IkReal x457=(r20*sj5);
IkReal x458=(cj5*sj3);
IkReal x459=((0.0934963197956057)*sj4);
IkReal x460=(cj5*r21);
IkReal x461=((0.140253680131967)*sj3);
IkReal x462=(r00*sj5);
IkReal x463=(r21*sj5);
IkReal x464=((0.00924927184554663)*cj4);
IkReal x465=((0.0717219785716089)*cj4);
IkReal x466=(cj5*r20);
IkReal x467=((0.0184992718312161)*sj4);
IkReal x468=(cj4*r02);
IkReal x469=(cj5*r01);
IkReal x470=(cj4*r22);
IkReal x471=((0.143449603387718)*sj4);
IkReal x472=(r01*sj5);
IkReal x473=((0.29)*(IKsin(j1)));
IkReal x474=((0.29)*(IKcos(j1)));
IkReal x475=(cj5*r00*sj4);
IkReal x476=((0.046746319868033)*cj4*sj3);
IkReal x477=((0.187)*cj3*cj4);
IkReal x478=((0.161948875218934)*cj3*sj4);
IkReal x479=(sj4*x472);
IkReal x480=(x455+x473);
evalcond[0]=((((0.124232630584188)*x470))+((x466*x471))+(((-1.0)*x474))+(((0.0627673694158124)*r22))+(((-0.145649059756499)*x460))+pz+((x460*x465))+(((-0.145649059756499)*x457))+((x457*x465))+(((-1.0)*x463*x471)));
evalcond[1]=((((-1.0)*x465*x469))+((x471*x472))+(((0.145649059756499)*x462))+(((0.145649059756499)*x469))+(((-1.0)*x462*x465))+(((-1.0)*x480))+(((-1.0)*cj5*r00*x471))+(((-0.124232630584188)*x468))+(((-0.0627673694158124)*r02)));
evalcond[2]=(((cj5*r00*x467))+(((-0.0160210495477794)*r02))+(((-1.0)*x467*x472))+(((-1.0)*x456*x470))+(((-1.0)*x480))+(((-1.0)*cj3*x457*x459))+((x466*x477))+(((-1.0)*cj3*x459*x460))+(((0.0160210495477794)*x468))+(((-1.0)*r22*x478))+(((0.064677809339343)*x462))+(((0.064677809339343)*x469))+(((-0.140253680131967)*r21*x458))+((sj3*x459*x463))+(((-0.046746319868033)*cj4*r21*x458))+((x464*x469))+((x462*x464))+(((-1.0)*x457*x461))+((r22*x456))+(((-1.0)*x463*x477))+(((-1.0)*r20*x458*x459))+(((-1.0)*x457*x476)));
evalcond[3]=(((x456*x468))+((x461*x462))+((x462*x476))+((x472*x477))+(((-1.0)*sj3*x459*x472))+(((-1.0)*x463*x467))+((x466*x467))+(((0.0160210495477794)*x470))+(((-1.0)*pz))+(((0.064677809339343)*x457))+((r02*x478))+(((0.046746319868033)*cj4*r01*x458))+((cj3*x459*x462))+((cj3*x459*x469))+x474+(((0.064677809339343)*x460))+(((-1.0)*cj5*r00*x477))+((x460*x464))+(((-1.0)*r02*x456))+(((0.140253680131967)*r01*x458))+((r00*x458*x459))+((x457*x464))+(((-0.0160210495477794)*r22)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x481=((0.249980320149909)*cj1);
IkReal x482=((0.433001339129174)*sj1);
IkReal x483=(cj5*r21);
IkReal x484=(r20*sj5);
IkReal x485=((0.433001339129174)*cj1);
IkReal x486=(r00*sj5);
IkReal x487=((0.249980320149909)*sj1);
IkReal x488=(cj5*r01);
IkReal x489=((0.866036765876652)*cj5*sj4);
IkReal x490=(cj4*x488);
IkReal x491=((0.866036765876652)*sj4*sj5);
IkReal x492=((0.750019679850091)*cj4*r02);
IkReal x493=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*cj1*r01*x491))+((cj1*r00*x489))+(((-1.0)*r21*sj1*x491))+((r02*x481))+((r20*sj1*x489))+((sj1*x493))+((r22*x487))+((cj4*x485*x486))+((cj4*x482*x484))+((cj4*x482*x483))+((cj1*x492))+(((-1.0)*x482*x484))+(((-1.0)*x482*x483))+((x485*x490))+(((-1.0)*x485*x486))+(((-1.0)*x485*x488)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x484*x485))+(((-1.0)*x482*x490))+(((-1.0)*x483*x485))+(((-1.0)*r00*sj1*x489))+(((-1.0)*cj1*r21*x491))+(((-1.0)*sj1*x492))+(((-1.0)*cj4*x482*x486))+((r01*sj1*x491))+((r22*x481))+((cj1*x493))+((x482*x486))+((x482*x488))+((cj1*r20*x489))+((cj4*x483*x485))+((cj4*x484*x485))+(((-1.0)*r02*x487)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*r01*x491))+((cj1*r00*x489))+(((-1.0)*r21*sj1*x491))+((r02*x481))+((r20*sj1*x489))+((sj1*x493))+((r22*x487))+((cj4*x485*x486))+((cj4*x482*x484))+((cj4*x482*x483))+((cj1*x492))+(((-1.0)*x482*x484))+(((-1.0)*x482*x483))+((x485*x490))+(((-1.0)*x485*x486))+(((-1.0)*x485*x488))))+IKsqr(((((-1.0)*x484*x485))+(((-1.0)*x482*x490))+(((-1.0)*x483*x485))+(((-1.0)*r00*sj1*x489))+(((-1.0)*cj1*r21*x491))+(((-1.0)*sj1*x492))+(((-1.0)*cj4*x482*x486))+((r01*sj1*x491))+((r22*x481))+((cj1*x493))+((x482*x486))+((x482*x488))+((cj1*r20*x489))+((cj4*x483*x485))+((cj4*x484*x485))+(((-1.0)*r02*x487))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*r01*x491))+((cj1*r00*x489))+(((-1.0)*r21*sj1*x491))+((r02*x481))+((r20*sj1*x489))+((sj1*x493))+((r22*x487))+((cj4*x485*x486))+((cj4*x482*x484))+((cj4*x482*x483))+((cj1*x492))+(((-1.0)*x482*x484))+(((-1.0)*x482*x483))+((x485*x490))+(((-1.0)*x485*x486))+(((-1.0)*x485*x488))), ((((-1.0)*x484*x485))+(((-1.0)*x482*x490))+(((-1.0)*x483*x485))+(((-1.0)*r00*sj1*x489))+(((-1.0)*cj1*r21*x491))+(((-1.0)*sj1*x492))+(((-1.0)*cj4*x482*x486))+((r01*sj1*x491))+((r22*x481))+((cj1*x493))+((x482*x486))+((x482*x488))+((cj1*r20*x489))+((cj4*x483*x485))+((cj4*x484*x485))+(((-1.0)*r02*x487))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x494=IKsin(j2);
IkReal x495=IKcos(j2);
IkReal x496=(cj4*r02);
IkReal x497=(cj4*sj5);
IkReal x498=((0.433001339129174)*r20);
IkReal x499=(cj5*r21);
IkReal x500=(cj4*cj5);
IkReal x501=((0.249980320149909)*sj3);
IkReal x502=((1.0)*cj3);
IkReal x503=(r00*sj5);
IkReal x504=((0.750019679850091)*sj3);
IkReal x505=((0.0160210495477794)*r22);
IkReal x506=(cj5*r01);
IkReal x507=((0.499980319762597)*sj4);
IkReal x508=((0.866036765876652)*sj4);
IkReal x509=(cj5*r20);
IkReal x510=(r01*sj5);
IkReal x511=((0.433001339129174)*sj3);
IkReal x512=((0.0184992718312161)*sj4);
IkReal x513=(r21*sj5);
IkReal x514=(r20*sj5);
IkReal x515=(cj4*r22);
IkReal x516=(cj1*x495);
IkReal x517=(sj1*x494);
IkReal x518=(cj5*r00*sj4);
IkReal x519=(cj1*x494);
IkReal x520=(r20*x507);
IkReal x521=(sj1*x495);
IkReal x522=(x517+x516);
evalcond[0]=((((0.433001339129174)*x499))+(((-0.249980320149909)*r22))+(((-1.0)*x508*x509))+(((-1.0)*x497*x498))+(((-0.750019679850091)*x515))+x522+(((-0.433001339129174)*cj4*x499))+((x508*x513))+((sj5*x498)));
evalcond[1]=((((0.433001339129174)*x503))+(((0.433001339129174)*x506))+(((-0.433001339129174)*r01*x500))+(((-0.249980320149909)*r02))+(((-1.0)*x521))+x519+(((-0.433001339129174)*r00*x497))+(((-0.750019679850091)*x496))+(((-1.0)*cj5*r00*x508))+((x508*x510)));
evalcond[2]=((((-1.0)*x505))+(((-0.187)*x516))+(((-0.187)*x517))+(((0.064677809339343)*x499))+(((-1.0)*x512*x513))+(((-1.0)*pz))+((cj4*x505))+(((0.29)*cj1))+(((0.00924927184554663)*cj4*x499))+(((0.00924927184554663)*r20*x497))+(((0.064677809339343)*x514))+((x509*x512)));
evalcond[3]=((((-0.0160210495477794)*r02))+(((0.0160210495477794)*x496))+(((-0.29)*sj1))+((cj5*r00*x512))+(((-0.187)*x519))+(((0.00924927184554663)*r00*x497))+(((-1.0)*px))+(((0.064677809339343)*x506))+(((0.064677809339343)*x503))+(((0.00924927184554663)*r01*x500))+(((0.187)*x521))+(((-1.0)*x510*x512)));
evalcond[4]=(((x496*x511))+(((-1.0)*r00*x500*x502))+(((-1.0)*sj3*x507*x510))+((cj3*x503*x507))+((cj3*r01*x497))+((cj3*r02*x508))+((cj3*x506*x507))+((r01*x500*x501))+x522+((x503*x504))+(((-1.0)*r02*x511))+((r00*x497*x501))+((cj5*r00*sj3*x507))+((x504*x506)));
evalcond[5]=(((x511*x515))+(((-1.0)*r22*x511))+(((-1.0)*sj3*x507*x513))+((cj3*x507*x514))+(((-1.0)*r20*x500*x502))+(((-1.0)*x519))+((x504*x514))+((sj3*x507*x509))+((cj3*r22*x508))+x521+((cj3*r21*x497))+((r20*x497*x501))+((cj3*x499*x507))+((cj4*x499*x501))+((x499*x504)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x523=((0.502238137091374)*cj5);
IkReal x524=((0.428388381324785)*cj4);
IkReal x525=((0.247317167488307)*cj4);
IkReal x526=(r20*sj5);
IkReal x527=(r00*sj5);
IkReal x528=((0.494653804785234)*cj5*sj4);
IkReal x529=((0.494653804785234)*sj4*sj5);
if( IKabs(((((-0.502238137091374)*x527))+((r02*x524))+(((-1.0)*r01*x523))+(((-1.0)*r01*x529))+(((0.216439204882112)*r02))+(((3.44827586206897)*px))+((x525*x527))+((cj5*r01*x525))+((r00*x528)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.502238137091374)*x526))+((r20*x528))+(((-1.0)*r21*x523))+(((-1.0)*r21*x529))+((cj5*r21*x525))+(((0.216439204882112)*r22))+((r22*x524))+(((3.44827586206897)*pz))+((x525*x526)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.502238137091374)*x527))+((r02*x524))+(((-1.0)*r01*x523))+(((-1.0)*r01*x529))+(((0.216439204882112)*r02))+(((3.44827586206897)*px))+((x525*x527))+((cj5*r01*x525))+((r00*x528))))+IKsqr(((((-0.502238137091374)*x526))+((r20*x528))+(((-1.0)*r21*x523))+(((-1.0)*r21*x529))+((cj5*r21*x525))+(((0.216439204882112)*r22))+((r22*x524))+(((3.44827586206897)*pz))+((x525*x526))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-0.502238137091374)*x527))+((r02*x524))+(((-1.0)*r01*x523))+(((-1.0)*r01*x529))+(((0.216439204882112)*r02))+(((3.44827586206897)*px))+((x525*x527))+((cj5*r01*x525))+((r00*x528))), ((((-0.502238137091374)*x526))+((r20*x528))+(((-1.0)*r21*x523))+(((-1.0)*r21*x529))+((cj5*r21*x525))+(((0.216439204882112)*r22))+((r22*x524))+(((3.44827586206897)*pz))+((x525*x526))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x530=(cj5*r21);
IkReal x531=((0.0809712504171555)*sj3);
IkReal x532=((0.0160210495477794)*r02);
IkReal x533=(r20*sj5);
IkReal x534=((0.0160210495477794)*r22);
IkReal x535=((0.140253680131967)*sj3);
IkReal x536=(r00*sj5);
IkReal x537=(cj3*sj4);
IkReal x538=((0.00924927184554663)*cj4);
IkReal x539=((0.0717219785716089)*cj4);
IkReal x540=((0.124232630584188)*cj4);
IkReal x541=((0.0934963197956057)*sj3);
IkReal x542=(cj5*r01);
IkReal x543=(sj4*sj5);
IkReal x544=((0.29)*(IKcos(j1)));
IkReal x545=((0.29)*(IKsin(j1)));
IkReal x546=(cj5*r00*sj4);
IkReal x547=((0.046746319868033)*cj4*sj3);
IkReal x548=((0.143449603387718)*x543);
IkReal x549=(cj5*r20*sj4);
IkReal x550=((0.187)*cj3*cj4*sj5);
IkReal x551=((0.187)*cj3*cj4*cj5);
evalcond[0]=(((x539*x542))+((r02*x540))+(((0.0627673694158124)*r02))+(((0.143449603387718)*x546))+(((-1.0)*x545))+(((-1.0)*r01*x548))+((x536*x539))+px+(((-0.145649059756499)*x536))+(((-0.145649059756499)*x542)));
evalcond[1]=((((0.143449603387718)*x549))+(((-1.0)*x544))+(((-1.0)*r21*x548))+((r22*x540))+(((0.0627673694158124)*r22))+pz+((x530*x539))+((x533*x539))+(((-0.145649059756499)*x530))+(((-0.145649059756499)*x533)));
evalcond[2]=((((-1.0)*r01*x541*x543))+((x541*x546))+(((-1.0)*x533*x538))+((cj4*r02*x531))+((x542*x547))+(((-1.0)*x530*x538))+(((-1.0)*r00*x551))+(((-0.064677809339343)*x530))+(((-0.064677809339343)*x533))+(((-1.0)*x544))+(((0.0934963197956057)*x536*x537))+(((-1.0)*r02*x531))+((x536*x547))+(((0.0184992718312161)*r21*x543))+(((0.0934963197956057)*x537*x542))+pz+x534+((x535*x542))+((x535*x536))+((r01*x550))+(((-1.0)*cj4*x534))+(((0.161948875218934)*r02*x537))+(((-0.0184992718312161)*x549)));
evalcond[3]=((((-1.0)*r22*x531))+(((-0.0184992718312161)*r01*x543))+((cj4*x532))+((x541*x549))+(((0.161948875218934)*r22*x537))+(((0.064677809339343)*x542))+(((-1.0)*r20*x551))+((cj4*r22*x531))+(((0.064677809339343)*x536))+(((0.0934963197956057)*x533*x537))+(((-1.0)*r21*x541*x543))+(((-1.0)*x532))+(((0.0934963197956057)*x530*x537))+(((-1.0)*px))+((x536*x538))+x545+(((0.0184992718312161)*x546))+((x538*x542))+((x533*x547))+((r21*x550))+((x530*x535))+((x533*x535))+((x530*x547)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x552=((0.249980320149909)*cj1);
IkReal x553=((0.433001339129174)*sj1);
IkReal x554=(cj5*r21);
IkReal x555=(r20*sj5);
IkReal x556=((0.433001339129174)*cj1);
IkReal x557=(r00*sj5);
IkReal x558=((0.249980320149909)*sj1);
IkReal x559=(cj5*r01);
IkReal x560=((0.866036765876652)*cj5*sj4);
IkReal x561=(cj4*x559);
IkReal x562=((0.866036765876652)*sj4*sj5);
IkReal x563=((0.750019679850091)*cj4*r02);
IkReal x564=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*r21*sj1*x562))+(((-1.0)*cj4*x556*x557))+(((-1.0)*r02*x552))+(((-1.0)*cj1*r00*x560))+(((-1.0)*x553*x554))+(((-1.0)*x553*x555))+(((-1.0)*x556*x561))+((cj1*r01*x562))+((r20*sj1*x560))+(((-1.0)*cj1*x563))+((sj1*x564))+((r22*x558))+((cj4*x553*x555))+((cj4*x553*x554))+((x556*x559))+((x556*x557)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x564))+(((-1.0)*x555*x556))+(((-1.0)*x554*x556))+((r02*x558))+(((-1.0)*x553*x559))+(((-1.0)*x553*x557))+((cj4*x555*x556))+(((-1.0)*cj1*r21*x562))+((x553*x561))+(((-1.0)*r01*sj1*x562))+((sj1*x563))+((r22*x552))+((cj4*x553*x557))+((cj4*x554*x556))+((cj1*r20*x560))+((r00*sj1*x560)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r21*sj1*x562))+(((-1.0)*cj4*x556*x557))+(((-1.0)*r02*x552))+(((-1.0)*cj1*r00*x560))+(((-1.0)*x553*x554))+(((-1.0)*x553*x555))+(((-1.0)*x556*x561))+((cj1*r01*x562))+((r20*sj1*x560))+(((-1.0)*cj1*x563))+((sj1*x564))+((r22*x558))+((cj4*x553*x555))+((cj4*x553*x554))+((x556*x559))+((x556*x557))))+IKsqr((((cj1*x564))+(((-1.0)*x555*x556))+(((-1.0)*x554*x556))+((r02*x558))+(((-1.0)*x553*x559))+(((-1.0)*x553*x557))+((cj4*x555*x556))+(((-1.0)*cj1*r21*x562))+((x553*x561))+(((-1.0)*r01*sj1*x562))+((sj1*x563))+((r22*x552))+((cj4*x553*x557))+((cj4*x554*x556))+((cj1*r20*x560))+((r00*sj1*x560))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r21*sj1*x562))+(((-1.0)*cj4*x556*x557))+(((-1.0)*r02*x552))+(((-1.0)*cj1*r00*x560))+(((-1.0)*x553*x554))+(((-1.0)*x553*x555))+(((-1.0)*x556*x561))+((cj1*r01*x562))+((r20*sj1*x560))+(((-1.0)*cj1*x563))+((sj1*x564))+((r22*x558))+((cj4*x553*x555))+((cj4*x553*x554))+((x556*x559))+((x556*x557))), (((cj1*x564))+(((-1.0)*x555*x556))+(((-1.0)*x554*x556))+((r02*x558))+(((-1.0)*x553*x559))+(((-1.0)*x553*x557))+((cj4*x555*x556))+(((-1.0)*cj1*r21*x562))+((x553*x561))+(((-1.0)*r01*sj1*x562))+((sj1*x563))+((r22*x552))+((cj4*x553*x557))+((cj4*x554*x556))+((cj1*r20*x560))+((r00*sj1*x560))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x565=IKcos(j2);
IkReal x566=IKsin(j2);
IkReal x567=(cj4*r02);
IkReal x568=(cj4*sj5);
IkReal x569=((0.433001339129174)*r20);
IkReal x570=(cj5*r21);
IkReal x571=(cj4*cj5);
IkReal x572=(r01*sj3);
IkReal x573=((1.0)*cj3);
IkReal x574=(r00*sj5);
IkReal x575=((0.750019679850091)*sj3);
IkReal x576=((0.0160210495477794)*r22);
IkReal x577=(r20*sj5);
IkReal x578=((0.433001339129174)*sj3);
IkReal x579=(cj4*r22);
IkReal x580=(cj5*r01);
IkReal x581=((0.866036765876652)*sj4);
IkReal x582=(cj5*r20);
IkReal x583=(sj4*sj5);
IkReal x584=((0.499980319762597)*sj3);
IkReal x585=((0.249980320149909)*sj3);
IkReal x586=(sj1*x565);
IkReal x587=(cj1*x565);
IkReal x588=(cj5*r00*sj4);
IkReal x589=((0.499980319762597)*cj3*sj4);
IkReal x590=(sj1*x566);
IkReal x591=(cj1*x566);
IkReal x592=((1.0)*x591);
evalcond[0]=((((-0.249980320149909)*r22))+(((-0.433001339129174)*cj4*x570))+((r21*sj5*x581))+(((0.433001339129174)*x570))+x587+x590+(((-1.0)*x568*x569))+(((-0.750019679850091)*x579))+((sj5*x569))+(((-1.0)*x581*x582)));
evalcond[1]=((((0.433001339129174)*x580))+(((-0.249980320149909)*r02))+(((-1.0)*cj5*r00*x581))+(((-0.433001339129174)*r01*x571))+(((-0.750019679850091)*x567))+(((-1.0)*x592))+(((0.433001339129174)*x574))+x586+(((-0.433001339129174)*r00*x568))+((r01*sj5*x581)));
evalcond[2]=((((0.064677809339343)*x570))+(((0.064677809339343)*x577))+(((-0.187)*x587))+(((0.0184992718312161)*sj4*x582))+(((-0.0184992718312161)*r21*x583))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*x576))+(((0.00924927184554663)*r20*x568))+(((-0.187)*x590))+(((0.00924927184554663)*cj4*x570))+((cj4*x576)));
evalcond[3]=((((0.064677809339343)*x574))+(((0.00924927184554663)*r00*x568))+(((-0.0160210495477794)*r02))+(((0.187)*x591))+(((-0.187)*x586))+(((-0.0184992718312161)*r01*x583))+(((0.00924927184554663)*r01*x571))+(((0.29)*sj1))+(((-1.0)*px))+(((0.0184992718312161)*x588))+(((0.0160210495477794)*x567))+(((0.064677809339343)*x580)));
evalcond[4]=((((-1.0)*r21*x583*x584))+((x577*x589))+((cj4*x570*x585))+((x578*x579))+((r20*x568*x585))+((x575*x577))+(((-1.0)*x592))+((cj3*r22*x581))+x586+((x570*x589))+((cj3*r21*x568))+(((-1.0)*r20*x571*x573))+(((-1.0)*r22*x578))+((sj4*x582*x584))+((x570*x575)));
evalcond[5]=(((x584*x588))+((cj3*r02*x581))+(((0.750019679850091)*cj5*x572))+(((-1.0)*x587))+((x580*x589))+((x567*x578))+((x574*x575))+(((-1.0)*x590))+(((-0.499980319762597)*x572*x583))+((r00*x568*x585))+((x574*x589))+(((-1.0)*r00*x571*x573))+(((-1.0)*r02*x578))+((cj3*r01*x568))+(((0.249980320149909)*x571*x572)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x593=(cj5*r21);
IkReal x594=(cj0*r01);
IkReal x595=((0.143449603387718)*sj4);
IkReal x596=(r20*sj5);
IkReal x597=(cj0*r02);
IkReal x598=((0.494653804785234)*sj4);
IkReal x599=(cj0*r00);
IkReal x600=((0.247317167488307)*cj4);
IkReal x601=((0.0717219785716089)*cj4);
CheckValue<IkReal> x602=IKPowWithIntegerCheck(cj0,-2);
if(!x602.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x602.value)*(((((-0.124232630584188)*cj4*x597))+(((-0.0627673694158124)*x597))+(((-1.0)*cj5*x595*x599))+(((0.145649059756499)*sj5*x599))+((sj5*x594*x595))+(((-1.0)*sj5*x599*x601))+(((0.145649059756499)*cj5*x594))+(((-1.0)*cj5*x594*x601))+(((0.007)*cj0*sj0))+(((-1.0)*cj0*px)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.428388381324785)*cj4*r22))+((x593*x600))+(((-1.0)*r21*sj5*x598))+(((0.216439204882112)*r22))+((cj5*r20*x598))+(((3.44827586206897)*pz))+(((-0.502238137091374)*x596))+(((-0.502238137091374)*x593))+((x596*x600)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x602.value)*(((((-0.124232630584188)*cj4*x597))+(((-0.0627673694158124)*x597))+(((-1.0)*cj5*x595*x599))+(((0.145649059756499)*sj5*x599))+((sj5*x594*x595))+(((-1.0)*sj5*x599*x601))+(((0.145649059756499)*cj5*x594))+(((-1.0)*cj5*x594*x601))+(((0.007)*cj0*sj0))+(((-1.0)*cj0*px))))))+IKsqr(((((0.428388381324785)*cj4*r22))+((x593*x600))+(((-1.0)*r21*sj5*x598))+(((0.216439204882112)*r22))+((cj5*r20*x598))+(((3.44827586206897)*pz))+(((-0.502238137091374)*x596))+(((-0.502238137091374)*x593))+((x596*x600))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x602.value)*(((((-0.124232630584188)*cj4*x597))+(((-0.0627673694158124)*x597))+(((-1.0)*cj5*x595*x599))+(((0.145649059756499)*sj5*x599))+((sj5*x594*x595))+(((-1.0)*sj5*x599*x601))+(((0.145649059756499)*cj5*x594))+(((-1.0)*cj5*x594*x601))+(((0.007)*cj0*sj0))+(((-1.0)*cj0*px))))), ((((0.428388381324785)*cj4*r22))+((x593*x600))+(((-1.0)*r21*sj5*x598))+(((0.216439204882112)*r22))+((cj5*r20*x598))+(((3.44827586206897)*pz))+(((-0.502238137091374)*x596))+(((-0.502238137091374)*x593))+((x596*x600))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x603=IKsin(j1);
IkReal x604=IKcos(j1);
IkReal x605=sj0*sj0;
IkReal x606=cj0*cj0;
IkReal x607=(cj0*sj5);
IkReal x608=((0.0184992718312161)*sj4);
IkReal x609=((0.0809712504171555)*sj3);
IkReal x610=(cj5*r11);
IkReal x611=(cj5*r10);
IkReal x612=((0.145649059756499)*sj5);
IkReal x613=((0.140253680131967)*sj3);
IkReal x614=(r00*sj5);
IkReal x615=((1.0)*sj0);
IkReal x616=(r10*sj5);
IkReal x617=((0.00924927184554663)*cj4);
IkReal x618=((0.0717219785716089)*cj4);
IkReal x619=(cj5*r21);
IkReal x620=(cj4*r02);
IkReal x621=(cj5*r01);
IkReal x622=(cj4*r12);
IkReal x623=((0.0809712504171555)*cj4);
IkReal x624=(cj0*r22);
IkReal x625=((0.0934963197956057)*cj3);
IkReal x626=(sj0*sj4);
IkReal x627=(cj5*r00);
IkReal x628=((0.007)*cj0);
IkReal x629=(sj0*sj5);
IkReal x630=((0.0809712504171555)*sj0);
IkReal x631=((0.064677809339343)*r20);
IkReal x632=((1.0)*cj0);
IkReal x633=((0.0160210495477794)*r02);
IkReal x634=((0.0160210495477794)*r12);
IkReal x635=((0.064677809339343)*sj0);
IkReal x636=((0.0934963197956057)*sj3);
IkReal x637=(r22*sj0);
IkReal x638=(r01*sj5);
IkReal x639=((0.064677809339343)*cj0);
IkReal x640=((0.161948875218934)*sj4);
IkReal x641=(r20*sj4);
IkReal x642=((0.143449603387718)*sj4);
IkReal x643=(r11*sj5);
IkReal x644=(sj0*x628);
IkReal x645=((0.187)*cj3*cj4);
IkReal x646=((0.046746319868033)*cj4*sj3);
IkReal x647=((0.29)*x604);
IkReal x648=(cj3*x640);
IkReal x649=(sj5*x626);
IkReal x650=((0.29)*x603);
IkReal x651=(sj4*x636);
IkReal x652=(cj0*cj5*r20);
IkReal x653=(cj4*x637);
IkReal x654=(cj5*r20*sj0);
IkReal x655=(cj0*sj0*x650);
evalcond[0]=((((0.124232630584188)*cj4*r22))+(((-1.0)*r20*x612))+(((0.0627673694158124)*r22))+(((-1.0)*x647))+(((-0.145649059756499)*x619))+(((-1.0)*r21*sj5*x642))+((r20*sj5*x618))+pz+(((0.143449603387718)*cj5*x641))+((x618*x619)));
evalcond[1]=((((0.145649059756499)*sj0*x610))+(((0.143449603387718)*x626*x643))+(((-0.124232630584188)*sj0*x622))+(((-0.0627673694158124)*r12*sj0))+(((-1.0)*sj0*x616*x618))+(((-1.0)*x644))+((r10*sj0*x612))+(((-1.0)*sj0*x610*x618))+(((-1.0)*py*x615))+(((-1.0)*x605*x650))+(((-0.143449603387718)*x611*x626)));
evalcond[2]=((((-0.124232630584188)*cj0*x620))+(((-1.0)*cj0*x627*x642))+(((0.145649059756499)*r00*x607))+(((-1.0)*x606*x650))+((r01*x607*x642))+(((-0.0627673694158124)*cj0*r02))+x644+(((-1.0)*px*x632))+(((-1.0)*cj0*x618*x621))+(((-1.0)*r00*x607*x618))+(((0.145649059756499)*cj0*x621)));
evalcond[3]=(((sj4*x616*x625))+(((0.0160210495477794)*x653))+((x611*x651))+((sj0*x617*x619))+((sj0*x647))+((x643*x645))+(((-1.0)*r21*x608*x629))+((x629*x631))+((x619*x635))+((x608*x654))+(((-1.0)*x611*x645))+((x610*x646))+((x616*x646))+((sj4*x610*x625))+(((-0.0160210495477794)*x637))+((x609*x622))+((x613*x616))+(((-1.0)*r12*x609))+(((-1.0)*x643*x651))+(((-1.0)*pz*x615))+((r12*x648))+((r20*x617*x629))+((x610*x613)));
evalcond[4]=((((-1.0)*pz*x632))+((x638*x645))+((r20*x607*x617))+(((-1.0)*x627*x645))+((x614*x646))+((x619*x639))+((x608*x652))+((x621*x646))+(((-1.0)*r21*x607*x608))+(((-0.0160210495477794)*x624))+((x613*x621))+((r02*x648))+((x609*x620))+((sj4*x621*x625))+((cj0*x617*x619))+((x613*x614))+(((0.0160210495477794)*cj4*x624))+((cj0*x647))+(((-1.0)*r02*x609))+(((-1.0)*x638*x651))+((x627*x651))+((x607*x631))+((sj4*x614*x625)));
evalcond[5]=((((-1.0)*sj0*x650))+(((-1.0)*x609*x653))+(((-1.0)*x608*x643))+((x608*x611))+(((-1.0)*sj0*x613*x619))+(((-1.0)*cj5*r20*x626*x636))+((x645*x654))+(((-1.0)*x628))+(((-0.161948875218934)*cj3*r22*x626))+(((-1.0)*x634))+(((-1.0)*r20*x613*x629))+(((-1.0)*r20*x625*x649))+(((-1.0)*sj0*x619*x646))+((x609*x637))+((x616*x617))+(((-1.0)*py))+((r21*x636*x649))+(((0.0160210495477794)*x622))+((x610*x617))+(((-1.0)*r21*x629*x645))+(((0.064677809339343)*x616))+(((0.064677809339343)*x610))+(((-1.0)*r20*x629*x646))+(((-1.0)*x619*x625*x626)));
evalcond[6]=((((-1.0)*r20*x607*x646))+(((0.007)*sj0))+((x617*x621))+(((-1.0)*cj0*x613*x619))+(((-1.0)*cj0*cj5*x636*x641))+(((-1.0)*x607*x625*x641))+((x645*x652))+(((-1.0)*x633))+(((-1.0)*r21*x607*x645))+(((-1.0)*cj4*x609*x624))+(((-1.0)*cj0*sj4*x619*x625))+(((0.064677809339343)*x621))+(((-1.0)*px))+((x609*x624))+(((-1.0)*x624*x648))+((x608*x627))+((r21*x607*x651))+((x614*x617))+(((0.0160210495477794)*x620))+(((-1.0)*cj0*x650))+(((0.064677809339343)*x614))+(((-1.0)*r20*x607*x613))+(((-1.0)*x608*x638))+(((-1.0)*cj0*x619*x646)));
evalcond[7]=((((-1.0)*r10*x607*x623))+((x614*x635))+((sj0*x608*x627))+(((0.0809712504171555)*cj0*x610))+(((-1.0)*r01*x608*x629))+(((-1.0)*x655))+(((0.0160210495477794)*sj0*x620))+(((-1.0)*cj0*x611*x640))+(((-0.046746319868033)*cj0*r12))+(((0.007)*x605))+((sj0*x617*x621))+((r11*x607*x640))+(((-1.0)*cj0*x610*x623))+((x621*x635))+(((-0.140253680131967)*cj0*x622))+(((-1.0)*px*x615))+((sj0*x614*x617))+(((-1.0)*sj0*x633))+(((0.0809712504171555)*r10*x607)));
evalcond[8]=((((-1.0)*sj0*x614*x623))+((x614*x630))+(((0.0160210495477794)*cj0*x622))+(((0.064677809339343)*r10*x607))+((cj0*x608*x611))+(((-1.0)*sj0*x621*x623))+(((-0.007)*x606))+(((-1.0)*cj0*x634))+(((-1.0)*x655))+(((-0.161948875218934)*x626*x627))+(((0.161948875218934)*x626*x638))+(((-1.0)*r11*x607*x608))+((cj0*x610*x617))+((x610*x639))+((r10*x607*x617))+((x621*x630))+(((-0.140253680131967)*sj0*x620))+(((-0.046746319868033)*r02*sj0))+(((-1.0)*py*x632)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x656=((0.249980320149909)*cj1);
IkReal x657=((0.433001339129174)*sj1);
IkReal x658=(cj5*r21);
IkReal x659=(r20*sj5);
IkReal x660=((0.433001339129174)*cj1);
IkReal x661=(r00*sj5);
IkReal x662=((0.249980320149909)*sj1);
IkReal x663=(cj5*r01);
IkReal x664=((0.866036765876652)*cj5*sj4);
IkReal x665=(cj4*x663);
IkReal x666=((0.866036765876652)*sj4*sj5);
IkReal x667=((0.750019679850091)*cj4*r02);
IkReal x668=((0.750019679850091)*cj4*r22);
if( IKabs((((r20*sj1*x664))+(((-1.0)*x657*x659))+(((-1.0)*x657*x658))+(((-1.0)*r21*sj1*x666))+((sj1*x668))+(((-1.0)*x660*x663))+(((-1.0)*x660*x661))+((r02*x656))+(((-1.0)*cj1*r01*x666))+((cj4*x660*x661))+((x660*x665))+((cj1*r00*x664))+((cj1*x667))+((r22*x662))+((cj4*x657*x658))+((cj4*x657*x659)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x667))+(((-1.0)*x659*x660))+(((-1.0)*cj4*x657*x661))+((x657*x663))+((x657*x661))+((r01*sj1*x666))+((r22*x656))+(((-1.0)*x658*x660))+(((-1.0)*x657*x665))+((cj1*r20*x664))+(((-1.0)*cj1*r21*x666))+((cj1*x668))+(((-1.0)*r02*x662))+((cj4*x659*x660))+(((-1.0)*r00*sj1*x664))+((cj4*x658*x660)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r20*sj1*x664))+(((-1.0)*x657*x659))+(((-1.0)*x657*x658))+(((-1.0)*r21*sj1*x666))+((sj1*x668))+(((-1.0)*x660*x663))+(((-1.0)*x660*x661))+((r02*x656))+(((-1.0)*cj1*r01*x666))+((cj4*x660*x661))+((x660*x665))+((cj1*r00*x664))+((cj1*x667))+((r22*x662))+((cj4*x657*x658))+((cj4*x657*x659))))+IKsqr(((((-1.0)*sj1*x667))+(((-1.0)*x659*x660))+(((-1.0)*cj4*x657*x661))+((x657*x663))+((x657*x661))+((r01*sj1*x666))+((r22*x656))+(((-1.0)*x658*x660))+(((-1.0)*x657*x665))+((cj1*r20*x664))+(((-1.0)*cj1*r21*x666))+((cj1*x668))+(((-1.0)*r02*x662))+((cj4*x659*x660))+(((-1.0)*r00*sj1*x664))+((cj4*x658*x660))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r20*sj1*x664))+(((-1.0)*x657*x659))+(((-1.0)*x657*x658))+(((-1.0)*r21*sj1*x666))+((sj1*x668))+(((-1.0)*x660*x663))+(((-1.0)*x660*x661))+((r02*x656))+(((-1.0)*cj1*r01*x666))+((cj4*x660*x661))+((x660*x665))+((cj1*r00*x664))+((cj1*x667))+((r22*x662))+((cj4*x657*x658))+((cj4*x657*x659))), ((((-1.0)*sj1*x667))+(((-1.0)*x659*x660))+(((-1.0)*cj4*x657*x661))+((x657*x663))+((x657*x661))+((r01*sj1*x666))+((r22*x656))+(((-1.0)*x658*x660))+(((-1.0)*x657*x665))+((cj1*r20*x664))+(((-1.0)*cj1*r21*x666))+((cj1*x668))+(((-1.0)*r02*x662))+((cj4*x659*x660))+(((-1.0)*r00*sj1*x664))+((cj4*x658*x660))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x669=IKsin(j2);
IkReal x670=IKcos(j2);
IkReal x671=(cj4*r02);
IkReal x672=(cj4*sj5);
IkReal x673=((0.433001339129174)*r20);
IkReal x674=(cj5*r21);
IkReal x675=(cj4*cj5);
IkReal x676=((0.249980320149909)*sj3);
IkReal x677=((1.0)*cj3);
IkReal x678=(r00*sj5);
IkReal x679=((0.750019679850091)*sj3);
IkReal x680=((0.0160210495477794)*r22);
IkReal x681=(cj5*r01);
IkReal x682=((0.499980319762597)*sj4);
IkReal x683=((0.866036765876652)*sj4);
IkReal x684=(cj5*r20);
IkReal x685=(r01*sj5);
IkReal x686=((0.433001339129174)*sj3);
IkReal x687=((0.0184992718312161)*sj4);
IkReal x688=(r21*sj5);
IkReal x689=(r20*sj5);
IkReal x690=(cj4*r22);
IkReal x691=(cj1*x670);
IkReal x692=(sj1*x669);
IkReal x693=(cj5*r00*sj4);
IkReal x694=(cj1*x669);
IkReal x695=(r20*x682);
IkReal x696=(sj1*x670);
IkReal x697=(x691+x692);
evalcond[0]=(((sj5*x673))+(((-0.249980320149909)*r22))+(((-0.433001339129174)*cj4*x674))+((x683*x688))+(((-0.750019679850091)*x690))+x697+(((-1.0)*x672*x673))+(((-1.0)*x683*x684))+(((0.433001339129174)*x674)));
evalcond[1]=((((-0.249980320149909)*r02))+(((-1.0)*cj5*r00*x683))+((x683*x685))+(((-0.433001339129174)*r00*x672))+(((-0.433001339129174)*r01*x675))+x694+(((0.433001339129174)*x681))+(((-0.750019679850091)*x671))+(((0.433001339129174)*x678))+(((-1.0)*x696)));
evalcond[2]=((((-1.0)*x687*x688))+((cj4*x680))+(((-1.0)*x680))+(((0.00924927184554663)*r20*x672))+(((-0.187)*x692))+(((-0.187)*x691))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.064677809339343)*x674))+(((0.064677809339343)*x689))+((x684*x687))+(((0.00924927184554663)*cj4*x674)));
evalcond[3]=((((-1.0)*x685*x687))+(((-0.0160210495477794)*r02))+(((-0.29)*sj1))+(((0.187)*x696))+(((-0.187)*x694))+((cj5*r00*x687))+(((-1.0)*px))+(((0.064677809339343)*x678))+(((0.064677809339343)*x681))+(((0.0160210495477794)*x671))+(((0.00924927184554663)*r01*x675))+(((0.00924927184554663)*r00*x672)));
evalcond[4]=(((cj3*x678*x682))+((r01*x675*x676))+((r00*x672*x676))+((cj5*r00*sj3*x682))+(((-1.0)*sj3*x682*x685))+((cj3*r02*x683))+(((-1.0)*r02*x686))+((x671*x686))+((x679*x681))+((cj3*r01*x672))+((x678*x679))+x697+(((-1.0)*r00*x675*x677))+((cj3*x681*x682)));
evalcond[5]=(((r20*x672*x676))+((cj4*x674*x676))+((cj3*x674*x682))+((x686*x690))+((x674*x679))+(((-1.0)*sj3*x682*x688))+((cj3*x682*x689))+((sj3*x682*x684))+((x679*x689))+x696+(((-1.0)*r20*x675*x677))+((cj3*r22*x683))+(((-1.0)*r22*x686))+((cj3*r21*x672))+(((-1.0)*x694)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x698=((0.249980320149909)*cj1);
IkReal x699=((0.433001339129174)*sj1);
IkReal x700=(cj5*r21);
IkReal x701=(r20*sj5);
IkReal x702=((0.433001339129174)*cj1);
IkReal x703=(r00*sj5);
IkReal x704=((0.249980320149909)*sj1);
IkReal x705=(cj5*r01);
IkReal x706=((0.866036765876652)*cj5*sj4);
IkReal x707=(cj4*x705);
IkReal x708=((0.866036765876652)*sj4*sj5);
IkReal x709=((0.750019679850091)*cj4*r02);
IkReal x710=((0.750019679850091)*cj4*r22);
if( IKabs((((r22*x704))+((cj1*r01*x708))+((x702*x703))+((x702*x705))+(((-1.0)*cj4*x702*x703))+(((-1.0)*x702*x707))+(((-1.0)*r21*sj1*x708))+(((-1.0)*cj1*x709))+(((-1.0)*x699*x700))+(((-1.0)*x699*x701))+((sj1*x710))+(((-1.0)*r02*x698))+(((-1.0)*cj1*r00*x706))+((r20*sj1*x706))+((cj4*x699*x700))+((cj4*x699*x701)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r01*sj1*x708))+((cj4*x700*x702))+((r00*sj1*x706))+(((-1.0)*cj1*r21*x708))+((r22*x698))+(((-1.0)*x699*x703))+(((-1.0)*x699*x705))+((sj1*x709))+((cj4*x699*x703))+((r02*x704))+(((-1.0)*x701*x702))+((cj1*x710))+((cj4*x701*x702))+((x699*x707))+(((-1.0)*x700*x702))+((cj1*r20*x706)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r22*x704))+((cj1*r01*x708))+((x702*x703))+((x702*x705))+(((-1.0)*cj4*x702*x703))+(((-1.0)*x702*x707))+(((-1.0)*r21*sj1*x708))+(((-1.0)*cj1*x709))+(((-1.0)*x699*x700))+(((-1.0)*x699*x701))+((sj1*x710))+(((-1.0)*r02*x698))+(((-1.0)*cj1*r00*x706))+((r20*sj1*x706))+((cj4*x699*x700))+((cj4*x699*x701))))+IKsqr(((((-1.0)*r01*sj1*x708))+((cj4*x700*x702))+((r00*sj1*x706))+(((-1.0)*cj1*r21*x708))+((r22*x698))+(((-1.0)*x699*x703))+(((-1.0)*x699*x705))+((sj1*x709))+((cj4*x699*x703))+((r02*x704))+(((-1.0)*x701*x702))+((cj1*x710))+((cj4*x701*x702))+((x699*x707))+(((-1.0)*x700*x702))+((cj1*r20*x706))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r22*x704))+((cj1*r01*x708))+((x702*x703))+((x702*x705))+(((-1.0)*cj4*x702*x703))+(((-1.0)*x702*x707))+(((-1.0)*r21*sj1*x708))+(((-1.0)*cj1*x709))+(((-1.0)*x699*x700))+(((-1.0)*x699*x701))+((sj1*x710))+(((-1.0)*r02*x698))+(((-1.0)*cj1*r00*x706))+((r20*sj1*x706))+((cj4*x699*x700))+((cj4*x699*x701))), ((((-1.0)*r01*sj1*x708))+((cj4*x700*x702))+((r00*sj1*x706))+(((-1.0)*cj1*r21*x708))+((r22*x698))+(((-1.0)*x699*x703))+(((-1.0)*x699*x705))+((sj1*x709))+((cj4*x699*x703))+((r02*x704))+(((-1.0)*x701*x702))+((cj1*x710))+((cj4*x701*x702))+((x699*x707))+(((-1.0)*x700*x702))+((cj1*r20*x706))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x711=IKcos(j2);
IkReal x712=IKsin(j2);
IkReal x713=(cj4*r02);
IkReal x714=(cj4*sj5);
IkReal x715=((0.433001339129174)*r20);
IkReal x716=(cj5*r21);
IkReal x717=(cj4*cj5);
IkReal x718=(r01*sj3);
IkReal x719=((1.0)*cj3);
IkReal x720=(r00*sj5);
IkReal x721=((0.750019679850091)*sj3);
IkReal x722=((0.0160210495477794)*r22);
IkReal x723=(r20*sj5);
IkReal x724=((0.433001339129174)*sj3);
IkReal x725=(cj4*r22);
IkReal x726=(cj5*r01);
IkReal x727=((0.866036765876652)*sj4);
IkReal x728=(cj5*r20);
IkReal x729=(sj4*sj5);
IkReal x730=((0.499980319762597)*sj3);
IkReal x731=((0.249980320149909)*sj3);
IkReal x732=(sj1*x711);
IkReal x733=(cj1*x711);
IkReal x734=(cj5*r00*sj4);
IkReal x735=((0.499980319762597)*cj3*sj4);
IkReal x736=(sj1*x712);
IkReal x737=(cj1*x712);
IkReal x738=((1.0)*x737);
evalcond[0]=((((-1.0)*x714*x715))+(((-1.0)*x727*x728))+(((-0.249980320149909)*r22))+((r21*sj5*x727))+((sj5*x715))+(((0.433001339129174)*x716))+x736+x733+(((-0.433001339129174)*cj4*x716))+(((-0.750019679850091)*x725)));
evalcond[1]=((((-0.249980320149909)*r02))+((r01*sj5*x727))+(((0.433001339129174)*x720))+(((0.433001339129174)*x726))+(((-1.0)*x738))+x732+(((-0.433001339129174)*r00*x714))+(((-0.433001339129174)*r01*x717))+(((-0.750019679850091)*x713))+(((-1.0)*cj5*r00*x727)));
evalcond[2]=((((0.00924927184554663)*cj4*x716))+((cj4*x722))+(((0.00924927184554663)*r20*x714))+(((0.064677809339343)*x716))+(((0.064677809339343)*x723))+(((-0.0184992718312161)*r21*x729))+(((-1.0)*x722))+(((-1.0)*pz))+(((0.29)*cj1))+(((-0.187)*x733))+(((-0.187)*x736))+(((0.0184992718312161)*sj4*x728)));
evalcond[3]=((((-0.0184992718312161)*r01*x729))+(((-0.0160210495477794)*r02))+(((0.187)*x737))+(((0.00924927184554663)*r01*x717))+(((0.0184992718312161)*x734))+(((0.00924927184554663)*r00*x714))+(((0.064677809339343)*x726))+(((0.064677809339343)*x720))+(((0.29)*sj1))+(((0.0160210495477794)*x713))+(((-1.0)*px))+(((-0.187)*x732)));
evalcond[4]=(((x721*x723))+(((-1.0)*r21*x729*x730))+((x723*x735))+((cj3*r22*x727))+((r20*x714*x731))+(((-1.0)*x738))+(((-1.0)*r20*x717*x719))+x732+((x724*x725))+(((-1.0)*r22*x724))+((cj4*x716*x731))+((x716*x735))+((cj3*r21*x714))+((sj4*x728*x730))+((x716*x721)));
evalcond[5]=(((x720*x735))+((x720*x721))+((x713*x724))+(((-1.0)*r02*x724))+(((-0.499980319762597)*x718*x729))+((x726*x735))+((r00*x714*x731))+(((0.249980320149909)*x717*x718))+(((-1.0)*x736))+(((-1.0)*x733))+((cj3*r02*x727))+((cj3*r01*x714))+(((0.750019679850091)*cj5*x718))+(((-1.0)*r00*x717*x719))+((x730*x734)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x739=((0.433001339129174)*sj1);
IkReal x740=(cj5*r21);
IkReal x741=(r10*sj5);
IkReal x742=((0.433001339129174)*cj1);
IkReal x743=(r20*sj5);
IkReal x744=(cj5*r11);
IkReal x745=((0.866036765876652)*sj4);
IkReal x746=(cj1*sj5);
IkReal x747=(cj5*r20);
IkReal x748=((0.249980320149909)*r22);
IkReal x749=(sj1*sj5);
IkReal x750=((0.249980320149909)*r12);
IkReal x751=(cj5*r10);
IkReal x752=((0.750019679850091)*cj4*r12);
IkReal x753=((0.750019679850091)*cj4*r22);
if( IKabs((((sj1*x745*x747))+((cj1*x750))+((cj1*x752))+((cj4*x741*x742))+(((-1.0)*r11*x745*x746))+(((-1.0)*x742*x744))+((sj1*x753))+((sj1*x748))+((cj4*x739*x740))+((cj4*x739*x743))+((cj4*x742*x744))+(((-1.0)*r21*x745*x749))+(((-1.0)*x741*x742))+((cj1*x745*x751))+(((-1.0)*x739*x740))+(((-1.0)*x739*x743)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj4*x739*x744))+(((-1.0)*cj4*x739*x741))+(((-1.0)*sj1*x752))+(((-1.0)*sj1*x750))+((cj1*x753))+(((-1.0)*sj1*x745*x751))+((cj1*x748))+(((-1.0)*x742*x743))+((x739*x744))+((x739*x741))+((r11*x745*x749))+((cj4*x742*x743))+((cj1*x745*x747))+(((-1.0)*x740*x742))+(((-1.0)*r21*x745*x746))+((cj4*x740*x742)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x745*x747))+((cj1*x750))+((cj1*x752))+((cj4*x741*x742))+(((-1.0)*r11*x745*x746))+(((-1.0)*x742*x744))+((sj1*x753))+((sj1*x748))+((cj4*x739*x740))+((cj4*x739*x743))+((cj4*x742*x744))+(((-1.0)*r21*x745*x749))+(((-1.0)*x741*x742))+((cj1*x745*x751))+(((-1.0)*x739*x740))+(((-1.0)*x739*x743))))+IKsqr(((((-1.0)*cj4*x739*x744))+(((-1.0)*cj4*x739*x741))+(((-1.0)*sj1*x752))+(((-1.0)*sj1*x750))+((cj1*x753))+(((-1.0)*sj1*x745*x751))+((cj1*x748))+(((-1.0)*x742*x743))+((x739*x744))+((x739*x741))+((r11*x745*x749))+((cj4*x742*x743))+((cj1*x745*x747))+(((-1.0)*x740*x742))+(((-1.0)*r21*x745*x746))+((cj4*x740*x742))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((sj1*x745*x747))+((cj1*x750))+((cj1*x752))+((cj4*x741*x742))+(((-1.0)*r11*x745*x746))+(((-1.0)*x742*x744))+((sj1*x753))+((sj1*x748))+((cj4*x739*x740))+((cj4*x739*x743))+((cj4*x742*x744))+(((-1.0)*r21*x745*x749))+(((-1.0)*x741*x742))+((cj1*x745*x751))+(((-1.0)*x739*x740))+(((-1.0)*x739*x743))), ((((-1.0)*cj4*x739*x744))+(((-1.0)*cj4*x739*x741))+(((-1.0)*sj1*x752))+(((-1.0)*sj1*x750))+((cj1*x753))+(((-1.0)*sj1*x745*x751))+((cj1*x748))+(((-1.0)*x742*x743))+((x739*x744))+((x739*x741))+((r11*x745*x749))+((cj4*x742*x743))+((cj1*x745*x747))+(((-1.0)*x740*x742))+(((-1.0)*r21*x745*x746))+((cj4*x740*x742))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x754=IKsin(j2);
IkReal x755=IKcos(j2);
IkReal x756=(cj4*sj5);
IkReal x757=((0.433001339129174)*r20);
IkReal x758=((0.064677809339343)*cj5);
IkReal x759=(r10*sj3);
IkReal x760=(cj3*r21);
IkReal x761=(r20*sj5);
IkReal x762=((0.750019679850091)*sj3);
IkReal x763=(r10*sj5);
IkReal x764=((0.0160210495477794)*r22);
IkReal x765=((0.499980319762597)*sj4);
IkReal x766=(sj3*sj5);
IkReal x767=(cj5*r21);
IkReal x768=(cj4*r12);
IkReal x769=((0.433001339129174)*sj3);
IkReal x770=((0.866036765876652)*sj4);
IkReal x771=(cj5*r10);
IkReal x772=(cj5*r11);
IkReal x773=(cj5*r20);
IkReal x774=((0.433001339129174)*cj4);
IkReal x775=(cj4*r22);
IkReal x776=((0.00924927184554663)*cj4);
IkReal x777=((0.0184992718312161)*sj4);
IkReal x778=(cj1*x755);
IkReal x779=(sj1*x754);
IkReal x780=(cj1*x754);
IkReal x781=(sj1*x755);
IkReal x782=((0.249980320149909)*cj4*sj3);
IkReal x783=(sj5*x777);
IkReal x784=((1.0)*cj3*cj4*cj5);
IkReal x785=(x779+x778);
evalcond[0]=((((-0.249980320149909)*r22))+(((-1.0)*x767*x774))+(((0.433001339129174)*x767))+((r21*sj5*x770))+((sj5*x757))+(((-0.750019679850091)*x775))+(((-1.0)*x756*x757))+x785+(((-1.0)*x770*x773)));
evalcond[1]=((((-0.433001339129174)*r10*x756))+(((-0.249980320149909)*r12))+(((0.433001339129174)*x763))+(((-1.0)*x772*x774))+x780+(((0.433001339129174)*x772))+(((-1.0)*x781))+(((-1.0)*x770*x771))+((r11*sj5*x770))+(((-0.750019679850091)*x768)));
evalcond[2]=(((x773*x777))+(((-1.0)*x764))+((x767*x776))+((r21*x758))+(((0.00924927184554663)*r20*x756))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*r21*x783))+((cj4*x764))+(((0.064677809339343)*x761))+(((-0.187)*x778))+(((-0.187)*x779)));
evalcond[3]=((((-0.0160210495477794)*r12))+(((-0.29)*sj1))+(((-0.187)*x780))+(((0.00924927184554663)*r10*x756))+((x771*x777))+((x772*x776))+(((0.0160210495477794)*x768))+(((-1.0)*py))+(((-1.0)*r11*x783))+(((0.187)*x781))+((r11*x758))+(((0.064677809339343)*x763)));
evalcond[4]=((((-1.0)*cj3*cj4*x771))+((cj3*x765*x772))+((cj3*r12*x770))+((x768*x769))+(((0.750019679850091)*sj5*x759))+((cj3*r11*x756))+(((-1.0)*r12*x769))+((cj3*x763*x765))+((x762*x772))+x785+(((-1.0)*r11*x765*x766))+((x772*x782))+(((0.249980320149909)*x756*x759))+((cj5*x759*x765)));
evalcond[5]=((((-1.0)*cj3*cj4*x773))+((sj3*x765*x773))+(((0.249980320149909)*r20*sj3*x756))+(((-1.0)*r21*x765*x766))+((x761*x762))+((cj3*x761*x765))+((x769*x775))+((x762*x767))+((x756*x760))+((cj5*x760*x765))+x781+(((-1.0)*x780))+(((-1.0)*r22*x769))+((cj3*r22*x770))+((x767*x782)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x786=((0.433001339129174)*sj1);
IkReal x787=(cj5*r21);
IkReal x788=(r10*sj5);
IkReal x789=((0.433001339129174)*cj1);
IkReal x790=(r20*sj5);
IkReal x791=(cj5*r11);
IkReal x792=((0.866036765876652)*sj4);
IkReal x793=(cj1*sj5);
IkReal x794=(cj5*r20);
IkReal x795=((0.249980320149909)*r22);
IkReal x796=(sj1*sj5);
IkReal x797=((0.249980320149909)*r12);
IkReal x798=(cj5*r10);
IkReal x799=((0.750019679850091)*cj4*r12);
IkReal x800=((0.750019679850091)*cj4*r22);
if( IKabs((((cj4*x786*x790))+((cj4*x786*x787))+((sj1*x795))+((r11*x792*x793))+(((-1.0)*cj4*x789*x791))+((x788*x789))+(((-1.0)*cj4*x788*x789))+(((-1.0)*cj1*x797))+(((-1.0)*cj1*x799))+(((-1.0)*r21*x792*x796))+((sj1*x792*x794))+((sj1*x800))+(((-1.0)*x786*x787))+(((-1.0)*cj1*x792*x798))+(((-1.0)*x786*x790))+((x789*x791)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x786*x791))+(((-1.0)*r11*x792*x796))+((cj4*x786*x788))+((cj1*x795))+((sj1*x799))+((sj1*x797))+((cj4*x787*x789))+((cj1*x800))+((cj4*x789*x790))+(((-1.0)*x787*x789))+(((-1.0)*r21*x792*x793))+((sj1*x792*x798))+(((-1.0)*x786*x788))+(((-1.0)*x786*x791))+(((-1.0)*x789*x790))+((cj1*x792*x794)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x786*x790))+((cj4*x786*x787))+((sj1*x795))+((r11*x792*x793))+(((-1.0)*cj4*x789*x791))+((x788*x789))+(((-1.0)*cj4*x788*x789))+(((-1.0)*cj1*x797))+(((-1.0)*cj1*x799))+(((-1.0)*r21*x792*x796))+((sj1*x792*x794))+((sj1*x800))+(((-1.0)*x786*x787))+(((-1.0)*cj1*x792*x798))+(((-1.0)*x786*x790))+((x789*x791))))+IKsqr((((cj4*x786*x791))+(((-1.0)*r11*x792*x796))+((cj4*x786*x788))+((cj1*x795))+((sj1*x799))+((sj1*x797))+((cj4*x787*x789))+((cj1*x800))+((cj4*x789*x790))+(((-1.0)*x787*x789))+(((-1.0)*r21*x792*x793))+((sj1*x792*x798))+(((-1.0)*x786*x788))+(((-1.0)*x786*x791))+(((-1.0)*x789*x790))+((cj1*x792*x794))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x786*x790))+((cj4*x786*x787))+((sj1*x795))+((r11*x792*x793))+(((-1.0)*cj4*x789*x791))+((x788*x789))+(((-1.0)*cj4*x788*x789))+(((-1.0)*cj1*x797))+(((-1.0)*cj1*x799))+(((-1.0)*r21*x792*x796))+((sj1*x792*x794))+((sj1*x800))+(((-1.0)*x786*x787))+(((-1.0)*cj1*x792*x798))+(((-1.0)*x786*x790))+((x789*x791))), (((cj4*x786*x791))+(((-1.0)*r11*x792*x796))+((cj4*x786*x788))+((cj1*x795))+((sj1*x799))+((sj1*x797))+((cj4*x787*x789))+((cj1*x800))+((cj4*x789*x790))+(((-1.0)*x787*x789))+(((-1.0)*r21*x792*x793))+((sj1*x792*x798))+(((-1.0)*x786*x788))+(((-1.0)*x786*x791))+(((-1.0)*x789*x790))+((cj1*x792*x794))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x801=IKcos(j2);
IkReal x802=IKsin(j2);
IkReal x803=(cj4*sj5);
IkReal x804=((0.433001339129174)*r20);
IkReal x805=((0.064677809339343)*cj5);
IkReal x806=(r10*sj3);
IkReal x807=(cj3*sj4);
IkReal x808=((0.433001339129174)*r10);
IkReal x809=((0.0160210495477794)*r22);
IkReal x810=(r20*sj5);
IkReal x811=(r11*sj5);
IkReal x812=(cj5*r20);
IkReal x813=(cj5*r21);
IkReal x814=((0.866036765876652)*sj4);
IkReal x815=(cj5*r10);
IkReal x816=(cj5*r11);
IkReal x817=((0.750019679850091)*sj3);
IkReal x818=(cj4*sj3);
IkReal x819=((0.750019679850091)*cj4);
IkReal x820=((0.433001339129174)*cj4);
IkReal x821=((0.433001339129174)*r22);
IkReal x822=((0.0160210495477794)*r12);
IkReal x823=((0.0184992718312161)*sj4);
IkReal x824=(r21*sj5);
IkReal x825=(r10*sj5);
IkReal x826=((0.00924927184554663)*cj4);
IkReal x827=(sj1*x801);
IkReal x828=(cj1*x801);
IkReal x829=((0.433001339129174)*r12*sj3);
IkReal x830=((0.499980319762597)*sj3*sj4);
IkReal x831=(sj1*x802);
IkReal x832=(cj1*x802);
IkReal x833=((1.0)*x832);
IkReal x834=((1.0)*cj3*cj4*cj5);
evalcond[0]=((((-1.0)*x812*x814))+(((-0.249980320149909)*r22))+(((-1.0)*x813*x820))+((x814*x824))+(((-1.0)*x803*x804))+(((-1.0)*r22*x819))+x828+x831+(((0.433001339129174)*x813))+((sj5*x804)));
evalcond[1]=((((-1.0)*x816*x820))+(((-0.249980320149909)*r12))+(((-1.0)*r12*x819))+(((-1.0)*x814*x815))+((x811*x814))+(((-1.0)*x833))+(((-1.0)*x803*x808))+x827+(((0.433001339129174)*x816))+((sj5*x808)));
evalcond[2]=(((x812*x823))+((cj4*x809))+(((-0.187)*x831))+((r21*x805))+(((0.00924927184554663)*r20*x803))+(((-1.0)*x823*x824))+((x813*x826))+(((-1.0)*pz))+(((0.29)*cj1))+(((-0.187)*x828))+(((-1.0)*x809))+(((0.064677809339343)*x810)));
evalcond[3]=((((0.064677809339343)*x825))+(((0.29)*sj1))+((x815*x823))+(((-1.0)*x822))+(((-1.0)*x811*x823))+((cj4*x822))+((x816*x826))+(((0.187)*x832))+(((-1.0)*py))+((r11*x805))+(((-0.187)*x827))+(((0.00924927184554663)*r10*x803)));
evalcond[4]=(((x812*x830))+((cj3*r21*x803))+(((0.249980320149909)*r20*sj3*x803))+(((-1.0)*cj3*cj4*x812))+((x810*x817))+((x813*x817))+(((0.866036765876652)*r22*x807))+(((-1.0)*x824*x830))+(((0.249980320149909)*x813*x818))+(((-1.0)*x833))+(((-1.0)*sj3*x821))+((x818*x821))+x827+(((0.499980319762597)*x807*x813))+(((0.499980319762597)*x807*x810)));
evalcond[5]=((((0.866036765876652)*r12*x807))+(((0.249980320149909)*x816*x818))+(((0.249980320149909)*x803*x806))+(((-1.0)*cj3*cj4*x815))+(((0.499980319762597)*cj5*sj4*x806))+((x816*x817))+(((0.433001339129174)*r12*x818))+(((-1.0)*x829))+((cj3*r11*x803))+(((-1.0)*x811*x830))+(((-1.0)*x828))+(((0.499980319762597)*x807*x825))+(((-1.0)*x831))+(((0.499980319762597)*x807*x816))+(((0.750019679850091)*sj5*x806)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x835=(sj0*sj5);
IkReal x836=((0.866036765876652)*sj4);
IkReal x837=(cj1*r21);
IkReal x838=((0.433001339129174)*sj1);
IkReal x839=(cj4*r20);
IkReal x840=(r10*sj5);
IkReal x841=(cj4*cj5);
IkReal x842=(cj1*r11);
IkReal x843=(cj5*sj0);
IkReal x844=(r22*sj0);
IkReal x845=((0.249980320149909)*cj1);
IkReal x846=(cj5*r10);
IkReal x847=((0.750019679850091)*cj4);
IkReal x848=((0.433001339129174)*cj1);
IkReal x849=((0.249980320149909)*sj1);
IkReal x850=(r12*x847);
CheckValue<IkReal> x851=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x851.valid){
continue;
}
CheckValue<IkReal> x852 = IKatan2WithCheck(IkReal(((((-1.0)*r21*x838*x843))+(((-1.0)*x840*x848))+((r21*sj0*x838*x841))+(((0.433001339129174)*x841*x842))+((cj1*x850))+(((-0.433001339129174)*cj5*x842))+(((-1.0)*r21*sj1*x835*x836))+((x835*x838*x839))+((cj4*x840*x848))+((r20*sj1*x836*x843))+((r12*x845))+(((-1.0)*r20*x835*x838))+((cj1*x836*x846))+((x844*x849))+((sj1*x844*x847))+(((-1.0)*sj5*x836*x842)))),IkReal((((x838*x840))+(((-1.0)*sj1*x836*x846))+(((0.433001339129174)*sj0*x837*x841))+((r11*sj1*sj5*x836))+((cj5*r11*x838))+(((-1.0)*r11*x838*x841))+(((-1.0)*sj1*x850))+(((-1.0)*cj4*x838*x840))+((cj1*x844*x847))+((x835*x839*x848))+(((-1.0)*r12*x849))+(((-0.433001339129174)*x837*x843))+((cj1*r20*x836*x843))+(((-1.0)*x835*x836*x837))+(((-1.0)*r20*x835*x848))+((x844*x845)))),IKFAST_ATAN2_MAGTHRESH);
if(!x852.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x851.value)))+(x852.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x853=IKsin(j2);
IkReal x854=IKcos(j2);
IkReal x855=(cj4*r02);
IkReal x856=(cj5*r11);
IkReal x857=(cj3*cj4);
IkReal x858=(r21*sj5);
IkReal x859=(r10*sj5);
IkReal x860=((1.0)*cj5);
IkReal x861=((0.00924927184554663)*cj4);
IkReal x862=((0.866036765876652)*sj4);
IkReal x863=(cj5*r10);
IkReal x864=(cj5*sj3);
IkReal x865=(r00*sj5);
IkReal x866=(cj0*sj1);
IkReal x867=((0.433001339129174)*cj4);
IkReal x868=((0.0184992718312161)*sj4);
IkReal x869=(r20*sj5);
IkReal x870=((0.249980320149909)*cj4);
IkReal x871=(r11*sj5);
IkReal x872=(cj5*r21);
IkReal x873=(cj5*r00);
IkReal x874=((0.0160210495477794)*r22);
IkReal x875=(sj0*sj1);
IkReal x876=(cj5*r01);
IkReal x877=((0.750019679850091)*sj3);
IkReal x878=(cj5*r20);
IkReal x879=((0.750019679850091)*cj4);
IkReal x880=(r22*sj3);
IkReal x881=(r12*sj3);
IkReal x882=((0.499980319762597)*sj4);
IkReal x883=(r01*sj5);
IkReal x884=((0.0160210495477794)*r12);
IkReal x885=((0.433001339129174)*sj3);
IkReal x886=(cj3*x882);
IkReal x887=((0.187)*x854);
IkReal x888=((1.0)*x854);
IkReal x889=(sj3*x870);
IkReal x890=(cj1*x853);
IkReal x891=(sj1*x853);
IkReal x892=(cj1*x854);
IkReal x893=(sj0*x890);
evalcond[0]=((((-0.249980320149909)*r22))+(((0.433001339129174)*x872))+(((-1.0)*x862*x878))+(((0.433001339129174)*x869))+((x858*x862))+(((-1.0)*x867*x872))+x892+x891+(((-1.0)*x867*x869))+(((-1.0)*r22*x879)));
evalcond[1]=((((-1.0)*x865*x867))+((cj0*x890))+(((-0.249980320149909)*r02))+(((0.433001339129174)*x876))+(((-1.0)*x862*x873))+(((-0.750019679850091)*x855))+(((0.433001339129174)*x865))+((x862*x883))+(((-1.0)*x867*x876))+(((-1.0)*x866*x888)));
evalcond[2]=((((-1.0)*r12*x879))+(((-0.249980320149909)*r12))+(((-1.0)*x862*x863))+(((0.433001339129174)*x859))+(((0.433001339129174)*x856))+(((-1.0)*x856*x867))+((x862*x871))+(((-1.0)*x859*x867))+x893+(((-1.0)*x875*x888)));
evalcond[3]=(((x868*x878))+(((0.064677809339343)*x869))+(((0.064677809339343)*x872))+(((-1.0)*pz))+(((0.29)*cj1))+((x861*x869))+((cj4*x874))+(((-1.0)*x858*x868))+((x861*x872))+(((-1.0)*cj1*x887))+(((-0.187)*x891))+(((-1.0)*x874)));
evalcond[4]=((((-0.0160210495477794)*r02))+(((0.007)*sj0))+(((-0.29)*x866))+((x868*x873))+(((0.0160210495477794)*x855))+(((0.064677809339343)*x865))+(((0.064677809339343)*x876))+(((-1.0)*px))+((x861*x865))+((x861*x876))+(((-0.187)*cj0*x890))+((x866*x887))+(((-1.0)*x868*x883)));
evalcond[5]=((((-0.29)*x875))+(((0.064677809339343)*x856))+(((0.064677809339343)*x859))+((x863*x868))+(((-1.0)*x868*x871))+(((-1.0)*x884))+((x856*x861))+(((-0.007)*cj0))+(((-1.0)*py))+((x859*x861))+((cj4*x884))+((x875*x887))+(((-0.187)*x893)));
evalcond[6]=((((-1.0)*r20*x857*x860))+((r21*x864*x870))+(((-1.0)*sj3*x858*x882))+((x867*x880))+((sj1*x854))+((r20*x864*x882))+(((-1.0)*x890))+((x869*x889))+((x869*x886))+(((-0.433001339129174)*x880))+((x869*x877))+((cj3*r22*x862))+((x857*x858))+((x872*x886))+(((0.750019679850091)*r21*x864)));
evalcond[7]=(((x855*x885))+((cj3*r02*x862))+((r01*x864*x870))+((cj0*x892))+((x876*x886))+((x865*x886))+((x865*x889))+((x857*x883))+(((-1.0)*sj3*x882*x883))+(((0.750019679850091)*r01*x864))+(((-1.0)*r00*x857*x860))+((x853*x866))+((r00*x864*x882))+(((-1.0)*r02*x885))+((x865*x877)));
evalcond[8]=(((sj0*x892))+((x867*x881))+((x856*x877))+((sj3*x863*x882))+(((-0.433001339129174)*x881))+((x859*x877))+((x853*x875))+((cj3*r12*x862))+((x859*x886))+((x859*x889))+(((-1.0)*r10*x857*x860))+(((-1.0)*sj3*x871*x882))+((x856*x886))+((x856*x889))+((x857*x871)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x894=((0.249980320149909)*cj1);
IkReal x895=(cj0*cj1);
IkReal x896=((0.750019679850091)*cj4);
IkReal x897=(cj0*r20);
IkReal x898=(cj1*r00);
IkReal x899=(cj0*r22);
IkReal x900=(r01*sj1);
IkReal x901=((0.433001339129174)*sj1);
IkReal x902=(cj5*r21);
IkReal x903=((0.249980320149909)*sj1);
IkReal x904=(cj1*r01);
IkReal x905=((0.433001339129174)*cj5);
IkReal x906=((0.433001339129174)*cj4);
IkReal x907=((0.433001339129174)*sj5);
IkReal x908=((0.866036765876652)*cj5*sj4);
IkReal x909=((0.866036765876652)*sj4*sj5);
IkReal x910=(cj4*x905);
IkReal x911=(cj4*sj5*x901);
CheckValue<IkReal> x912 = IKatan2WithCheck(IkReal((((r02*x894))+(((-1.0)*cj0*x901*x902))+(((-1.0)*sj5*x897*x901))+((cj0*cj4*x901*x902))+(((-1.0)*x898*x907))+((x897*x911))+((sj5*x898*x906))+((x899*x903))+((sj1*x896*x899))+((sj1*x897*x908))+(((-1.0)*x904*x905))+(((-1.0)*x904*x909))+((x898*x908))+(((-1.0)*cj0*r21*sj1*x909))+((x904*x910))+((cj1*r02*x896)))),IkReal((((x895*x902*x906))+((x894*x899))+(((-0.433001339129174)*x895*x902))+(((-1.0)*r00*sj1*x908))+((r22*x895*x896))+(((-1.0)*r00*x911))+((x900*x905))+((x900*x909))+(((-1.0)*r02*x903))+(((-1.0)*r20*x895*x907))+(((-1.0)*x900*x910))+((r20*sj5*x895*x906))+((r20*x895*x908))+(((-1.0)*r21*x895*x909))+(((-1.0)*r02*sj1*x896))+((r00*sj5*x901)))),IKFAST_ATAN2_MAGTHRESH);
if(!x912.valid){
continue;
}
CheckValue<IkReal> x913=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x913.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x912.value)+(((1.5707963267949)*(x913.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x914=IKsin(j2);
IkReal x915=IKcos(j2);
IkReal x916=(cj4*r02);
IkReal x917=(cj5*r11);
IkReal x918=(cj3*cj4);
IkReal x919=(r21*sj5);
IkReal x920=(r10*sj5);
IkReal x921=((1.0)*cj5);
IkReal x922=((0.00924927184554663)*cj4);
IkReal x923=((0.866036765876652)*sj4);
IkReal x924=(cj5*r10);
IkReal x925=(cj5*sj3);
IkReal x926=(r00*sj5);
IkReal x927=(cj0*sj1);
IkReal x928=((0.433001339129174)*cj4);
IkReal x929=((0.0184992718312161)*sj4);
IkReal x930=(r20*sj5);
IkReal x931=((0.249980320149909)*cj4);
IkReal x932=(r11*sj5);
IkReal x933=(cj5*r21);
IkReal x934=(cj5*r00);
IkReal x935=((0.0160210495477794)*r22);
IkReal x936=(sj0*sj1);
IkReal x937=(cj5*r01);
IkReal x938=((0.750019679850091)*sj3);
IkReal x939=(cj5*r20);
IkReal x940=((0.750019679850091)*cj4);
IkReal x941=(r22*sj3);
IkReal x942=(r12*sj3);
IkReal x943=((0.499980319762597)*sj4);
IkReal x944=(r01*sj5);
IkReal x945=((0.0160210495477794)*r12);
IkReal x946=((0.433001339129174)*sj3);
IkReal x947=(cj3*x943);
IkReal x948=((0.187)*x915);
IkReal x949=((1.0)*x915);
IkReal x950=(sj3*x931);
IkReal x951=(cj1*x914);
IkReal x952=(sj1*x914);
IkReal x953=(cj1*x915);
IkReal x954=(sj0*x951);
evalcond[0]=(((x919*x923))+(((-0.249980320149909)*r22))+(((-1.0)*x928*x930))+(((-1.0)*x928*x933))+(((0.433001339129174)*x930))+(((0.433001339129174)*x933))+(((-1.0)*r22*x940))+x953+x952+(((-1.0)*x923*x939)));
evalcond[1]=((((-0.249980320149909)*r02))+(((-1.0)*x928*x937))+(((-1.0)*x927*x949))+(((0.433001339129174)*x937))+(((0.433001339129174)*x926))+(((-1.0)*x926*x928))+((x923*x944))+(((-0.750019679850091)*x916))+(((-1.0)*x923*x934))+((cj0*x951)));
evalcond[2]=((((-1.0)*r12*x940))+(((-0.249980320149909)*r12))+(((0.433001339129174)*x920))+(((-1.0)*x920*x928))+((x923*x932))+(((0.433001339129174)*x917))+(((-1.0)*x936*x949))+x954+(((-1.0)*x917*x928))+(((-1.0)*x923*x924)));
evalcond[3]=((((-1.0)*cj1*x948))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.064677809339343)*x933))+(((0.064677809339343)*x930))+(((-1.0)*x919*x929))+((x922*x930))+((x922*x933))+(((-0.187)*x952))+((cj4*x935))+((x929*x939))+(((-1.0)*x935)));
evalcond[4]=((((-0.0160210495477794)*r02))+(((-0.187)*cj0*x951))+(((-1.0)*x929*x944))+(((0.007)*sj0))+(((0.0160210495477794)*x916))+(((-1.0)*px))+(((0.064677809339343)*x926))+(((0.064677809339343)*x937))+(((-0.29)*x927))+((x922*x937))+((x922*x926))+((x929*x934))+((x927*x948)));
evalcond[5]=((((-1.0)*x945))+((x920*x922))+(((0.064677809339343)*x917))+((x924*x929))+((x936*x948))+(((-0.007)*cj0))+(((-1.0)*py))+(((0.064677809339343)*x920))+(((-1.0)*x929*x932))+((x917*x922))+(((-0.29)*x936))+(((-0.187)*x954))+((cj4*x945)));
evalcond[6]=(((x928*x941))+(((-1.0)*sj3*x919*x943))+((x933*x947))+((r20*x925*x943))+(((-1.0)*x951))+((x918*x919))+((x930*x947))+((x930*x938))+(((-0.433001339129174)*x941))+(((-1.0)*r20*x918*x921))+((cj3*r22*x923))+((x930*x950))+(((0.750019679850091)*r21*x925))+((r21*x925*x931))+((sj1*x915)));
evalcond[7]=((((-1.0)*r02*x946))+((r01*x925*x931))+((cj3*r02*x923))+((x916*x946))+(((0.750019679850091)*r01*x925))+((x918*x944))+((x937*x947))+(((-1.0)*r00*x918*x921))+((x926*x950))+(((-1.0)*sj3*x943*x944))+((x914*x927))+((x926*x947))+((x926*x938))+((r00*x925*x943))+((cj0*x953)));
evalcond[8]=(((x928*x942))+((sj3*x924*x943))+((x920*x938))+(((-1.0)*sj3*x932*x943))+(((-1.0)*r10*x918*x921))+((cj3*r12*x923))+((x917*x950))+((x914*x936))+((sj0*x953))+((x917*x938))+(((-0.433001339129174)*x942))+((x920*x947))+((x920*x950))+((x917*x947))+((x918*x932)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x955=(sj0*sj5);
IkReal x956=((0.143449603387718)*sj4);
IkReal x957=(cj4*sj0);
IkReal x958=(cj5*r11);
IkReal x959=((0.247317167488307)*cj4);
IkReal x960=(cj5*r21);
IkReal x961=(r20*sj5);
IkReal x962=((0.494653804785234)*sj4);
CheckValue<IkReal> x963=IKPowWithIntegerCheck(sj0,-2);
if(!x963.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x963.value)*(((((-1.0)*cj5*r10*sj0*x956))+(((-0.0717219785716089)*x957*x958))+((r11*x955*x956))+(((-0.0717219785716089)*cj4*r10*x955))+(((-0.124232630584188)*r12*x957))+(((0.145649059756499)*r10*x955))+(((-0.0627673694158124)*r12*sj0))+(((0.145649059756499)*sj0*x958))+(((-0.007)*cj0*sj0))+(((-1.0)*py*sj0)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*sj5*x962))+((cj5*r20*x962))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((x959*x960))+((x959*x961))+(((-0.502238137091374)*x960))+(((-0.502238137091374)*x961)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x963.value)*(((((-1.0)*cj5*r10*sj0*x956))+(((-0.0717219785716089)*x957*x958))+((r11*x955*x956))+(((-0.0717219785716089)*cj4*r10*x955))+(((-0.124232630584188)*r12*x957))+(((0.145649059756499)*r10*x955))+(((-0.0627673694158124)*r12*sj0))+(((0.145649059756499)*sj0*x958))+(((-0.007)*cj0*sj0))+(((-1.0)*py*sj0))))))+IKsqr(((((-1.0)*r21*sj5*x962))+((cj5*r20*x962))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((x959*x960))+((x959*x961))+(((-0.502238137091374)*x960))+(((-0.502238137091374)*x961))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x963.value)*(((((-1.0)*cj5*r10*sj0*x956))+(((-0.0717219785716089)*x957*x958))+((r11*x955*x956))+(((-0.0717219785716089)*cj4*r10*x955))+(((-0.124232630584188)*r12*x957))+(((0.145649059756499)*r10*x955))+(((-0.0627673694158124)*r12*sj0))+(((0.145649059756499)*sj0*x958))+(((-0.007)*cj0*sj0))+(((-1.0)*py*sj0))))), ((((-1.0)*r21*sj5*x962))+((cj5*r20*x962))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((x959*x960))+((x959*x961))+(((-0.502238137091374)*x960))+(((-0.502238137091374)*x961))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x964=IKsin(j1);
IkReal x965=IKcos(j1);
IkReal x966=sj0*sj0;
IkReal x967=cj0*cj0;
IkReal x968=(cj0*sj5);
IkReal x969=((0.0184992718312161)*sj4);
IkReal x970=((0.0809712504171555)*sj3);
IkReal x971=(cj5*r11);
IkReal x972=(cj5*r10);
IkReal x973=((0.145649059756499)*sj5);
IkReal x974=((0.140253680131967)*sj3);
IkReal x975=(r00*sj5);
IkReal x976=((1.0)*sj0);
IkReal x977=(r10*sj5);
IkReal x978=((0.00924927184554663)*cj4);
IkReal x979=((0.0717219785716089)*cj4);
IkReal x980=(cj5*r21);
IkReal x981=(cj4*r02);
IkReal x982=(cj5*r01);
IkReal x983=(cj4*r12);
IkReal x984=((0.0809712504171555)*cj4);
IkReal x985=(cj0*r22);
IkReal x986=((0.0934963197956057)*cj3);
IkReal x987=(sj0*sj4);
IkReal x988=(cj5*r00);
IkReal x989=((0.007)*cj0);
IkReal x990=(sj0*sj5);
IkReal x991=((0.0809712504171555)*sj0);
IkReal x992=((0.064677809339343)*r20);
IkReal x993=((1.0)*cj0);
IkReal x994=((0.0160210495477794)*r02);
IkReal x995=((0.0160210495477794)*r12);
IkReal x996=((0.064677809339343)*sj0);
IkReal x997=((0.0934963197956057)*sj3);
IkReal x998=(r22*sj0);
IkReal x999=(r01*sj5);
IkReal x1000=((0.064677809339343)*cj0);
IkReal x1001=((0.161948875218934)*sj4);
IkReal x1002=(r20*sj4);
IkReal x1003=((0.143449603387718)*sj4);
IkReal x1004=(r11*sj5);
IkReal x1005=(sj0*x989);
IkReal x1006=((0.187)*cj3*cj4);
IkReal x1007=((0.046746319868033)*cj4*sj3);
IkReal x1008=((0.29)*x965);
IkReal x1009=(cj3*x1001);
IkReal x1010=(sj5*x987);
IkReal x1011=((0.29)*x964);
IkReal x1012=(sj4*x997);
IkReal x1013=(cj0*cj5*r20);
IkReal x1014=(cj4*x998);
IkReal x1015=(cj5*r20*sj0);
IkReal x1016=(cj0*sj0*x1011);
evalcond[0]=((((0.124232630584188)*cj4*r22))+(((-1.0)*r20*x973))+(((0.143449603387718)*cj5*x1002))+(((-1.0)*x1008))+(((-1.0)*r21*sj5*x1003))+(((-0.145649059756499)*x980))+((x979*x980))+(((0.0627673694158124)*r22))+((r20*sj5*x979))+pz);
evalcond[1]=((((0.145649059756499)*sj0*x971))+(((-1.0)*py*x976))+(((-1.0)*x1005))+(((0.143449603387718)*x1004*x987))+(((-1.0)*x1011*x966))+(((-0.143449603387718)*x972*x987))+(((-0.124232630584188)*sj0*x983))+(((-0.0627673694158124)*r12*sj0))+(((-1.0)*sj0*x971*x979))+(((-1.0)*sj0*x977*x979))+((r10*sj0*x973)));
evalcond[2]=((((0.145649059756499)*cj0*x982))+x1005+(((-1.0)*px*x993))+(((-1.0)*x1011*x967))+(((-1.0)*cj0*x979*x982))+(((-1.0)*cj0*x1003*x988))+(((-0.124232630584188)*cj0*x981))+(((-0.0627673694158124)*cj0*r02))+((r01*x1003*x968))+(((0.145649059756499)*r00*x968))+(((-1.0)*r00*x968*x979)));
evalcond[3]=(((x1015*x969))+((sj0*x978*x980))+(((-1.0)*x1004*x1012))+((x990*x992))+(((-1.0)*pz*x976))+((x1007*x971))+((x1007*x977))+((sj0*x1008))+(((-1.0)*x1006*x972))+(((-0.0160210495477794)*x998))+(((-1.0)*r21*x969*x990))+((x1004*x1006))+(((0.0160210495477794)*x1014))+((r20*x978*x990))+((x980*x996))+((x971*x974))+((x974*x977))+((sj4*x977*x986))+((r12*x1009))+(((-1.0)*r12*x970))+((x970*x983))+((x1012*x972))+((sj4*x971*x986)));
evalcond[4]=(((cj0*x978*x980))+((x1013*x969))+(((-1.0)*x1012*x999))+((r02*x1009))+((x968*x992))+((x1007*x975))+((x1007*x982))+(((-1.0)*x1006*x988))+(((-0.0160210495477794)*x985))+(((-1.0)*pz*x993))+(((-1.0)*r21*x968*x969))+((cj0*x1008))+((r20*x968*x978))+((sj4*x975*x986))+(((0.0160210495477794)*cj4*x985))+((x974*x982))+((x974*x975))+(((-1.0)*r02*x970))+((sj4*x982*x986))+((x1012*x988))+((x970*x981))+((x1000*x980))+((x1006*x999)));
evalcond[5]=((((-1.0)*x989))+((x969*x972))+(((-1.0)*r20*x974*x990))+(((-1.0)*x1014*x970))+(((-1.0)*r20*x1007*x990))+((r21*x1010*x997))+((x977*x978))+(((-1.0)*x980*x986*x987))+(((-1.0)*sj0*x1011))+((x970*x998))+(((-1.0)*sj0*x974*x980))+(((-0.161948875218934)*cj3*r22*x987))+(((-1.0)*py))+(((-1.0)*x995))+((x1006*x1015))+(((-1.0)*x1004*x969))+(((-1.0)*cj5*r20*x987*x997))+((x971*x978))+(((-1.0)*r20*x1010*x986))+(((0.064677809339343)*x977))+(((0.064677809339343)*x971))+(((-1.0)*r21*x1006*x990))+(((-1.0)*sj0*x1007*x980))+(((0.0160210495477794)*x983)));
evalcond[6]=(((x975*x978))+(((0.007)*sj0))+(((-1.0)*cj0*cj5*x1002*x997))+(((-1.0)*cj0*x974*x980))+(((-1.0)*cj4*x970*x985))+(((-1.0)*x1009*x985))+(((-1.0)*x969*x999))+((r21*x1012*x968))+(((-1.0)*px))+(((-1.0)*x994))+((x1006*x1013))+(((-1.0)*r21*x1006*x968))+(((0.064677809339343)*x982))+(((0.064677809339343)*x975))+(((-1.0)*cj0*x1011))+(((-1.0)*cj0*sj4*x980*x986))+(((-1.0)*r20*x1007*x968))+((x970*x985))+(((-1.0)*cj0*x1007*x980))+(((-1.0)*r20*x968*x974))+(((-1.0)*x1002*x968*x986))+(((0.0160210495477794)*x981))+((x978*x982))+((x969*x988)));
evalcond[7]=((((-1.0)*px*x976))+(((-0.140253680131967)*cj0*x983))+((sj0*x978*x982))+((x975*x996))+((sj0*x975*x978))+(((0.0809712504171555)*r10*x968))+(((-1.0)*x1016))+(((0.007)*x966))+((sj0*x969*x988))+(((-1.0)*cj0*x971*x984))+(((-1.0)*r10*x968*x984))+((r11*x1001*x968))+(((0.0160210495477794)*sj0*x981))+(((-0.046746319868033)*cj0*r12))+(((0.0809712504171555)*cj0*x971))+(((-1.0)*sj0*x994))+(((-1.0)*r01*x969*x990))+((x982*x996))+(((-1.0)*cj0*x1001*x972)));
evalcond[8]=((((0.161948875218934)*x987*x999))+((x975*x991))+(((-1.0)*x1016))+(((-1.0)*cj0*x995))+(((-1.0)*py*x993))+(((0.064677809339343)*r10*x968))+(((-1.0)*sj0*x975*x984))+(((-0.140253680131967)*sj0*x981))+((r10*x968*x978))+((cj0*x969*x972))+(((-1.0)*sj0*x982*x984))+(((-1.0)*r11*x968*x969))+((cj0*x971*x978))+(((-0.161948875218934)*x987*x988))+((x1000*x971))+(((-0.046746319868033)*r02*sj0))+(((0.0160210495477794)*cj0*x983))+(((-0.007)*x967))+((x982*x991)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1017=((0.249980320149909)*cj1);
IkReal x1018=((0.433001339129174)*sj1);
IkReal x1019=(cj5*r21);
IkReal x1020=(r20*sj5);
IkReal x1021=((0.433001339129174)*cj1);
IkReal x1022=(r00*sj5);
IkReal x1023=((0.249980320149909)*sj1);
IkReal x1024=(cj5*r01);
IkReal x1025=((0.866036765876652)*cj5*sj4);
IkReal x1026=(cj4*x1024);
IkReal x1027=((0.866036765876652)*sj4*sj5);
IkReal x1028=((0.750019679850091)*cj4*r02);
IkReal x1029=((0.750019679850091)*cj4*r22);
if( IKabs((((sj1*x1029))+((r20*sj1*x1025))+(((-1.0)*x1018*x1019))+(((-1.0)*x1018*x1020))+((r02*x1017))+((cj1*r00*x1025))+(((-1.0)*x1021*x1024))+(((-1.0)*x1021*x1022))+((r22*x1023))+(((-1.0)*cj1*r01*x1027))+((x1021*x1026))+((cj4*x1018*x1020))+((cj4*x1018*x1019))+((cj4*x1021*x1022))+(((-1.0)*r21*sj1*x1027))+((cj1*x1028)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x1028))+((r22*x1017))+(((-1.0)*x1018*x1026))+(((-1.0)*x1019*x1021))+((cj4*x1019*x1021))+(((-1.0)*x1020*x1021))+(((-1.0)*cj1*r21*x1027))+((x1018*x1024))+((x1018*x1022))+((cj4*x1020*x1021))+(((-1.0)*r02*x1023))+((r01*sj1*x1027))+(((-1.0)*cj4*x1018*x1022))+(((-1.0)*r00*sj1*x1025))+((cj1*r20*x1025))+((cj1*x1029)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x1029))+((r20*sj1*x1025))+(((-1.0)*x1018*x1019))+(((-1.0)*x1018*x1020))+((r02*x1017))+((cj1*r00*x1025))+(((-1.0)*x1021*x1024))+(((-1.0)*x1021*x1022))+((r22*x1023))+(((-1.0)*cj1*r01*x1027))+((x1021*x1026))+((cj4*x1018*x1020))+((cj4*x1018*x1019))+((cj4*x1021*x1022))+(((-1.0)*r21*sj1*x1027))+((cj1*x1028))))+IKsqr(((((-1.0)*sj1*x1028))+((r22*x1017))+(((-1.0)*x1018*x1026))+(((-1.0)*x1019*x1021))+((cj4*x1019*x1021))+(((-1.0)*x1020*x1021))+(((-1.0)*cj1*r21*x1027))+((x1018*x1024))+((x1018*x1022))+((cj4*x1020*x1021))+(((-1.0)*r02*x1023))+((r01*sj1*x1027))+(((-1.0)*cj4*x1018*x1022))+(((-1.0)*r00*sj1*x1025))+((cj1*r20*x1025))+((cj1*x1029))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((sj1*x1029))+((r20*sj1*x1025))+(((-1.0)*x1018*x1019))+(((-1.0)*x1018*x1020))+((r02*x1017))+((cj1*r00*x1025))+(((-1.0)*x1021*x1024))+(((-1.0)*x1021*x1022))+((r22*x1023))+(((-1.0)*cj1*r01*x1027))+((x1021*x1026))+((cj4*x1018*x1020))+((cj4*x1018*x1019))+((cj4*x1021*x1022))+(((-1.0)*r21*sj1*x1027))+((cj1*x1028))), ((((-1.0)*sj1*x1028))+((r22*x1017))+(((-1.0)*x1018*x1026))+(((-1.0)*x1019*x1021))+((cj4*x1019*x1021))+(((-1.0)*x1020*x1021))+(((-1.0)*cj1*r21*x1027))+((x1018*x1024))+((x1018*x1022))+((cj4*x1020*x1021))+(((-1.0)*r02*x1023))+((r01*sj1*x1027))+(((-1.0)*cj4*x1018*x1022))+(((-1.0)*r00*sj1*x1025))+((cj1*r20*x1025))+((cj1*x1029))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1030=IKsin(j2);
IkReal x1031=IKcos(j2);
IkReal x1032=(cj4*r02);
IkReal x1033=(cj4*sj5);
IkReal x1034=((0.433001339129174)*r20);
IkReal x1035=(cj5*r21);
IkReal x1036=(cj4*cj5);
IkReal x1037=((0.249980320149909)*sj3);
IkReal x1038=((1.0)*cj3);
IkReal x1039=(r00*sj5);
IkReal x1040=((0.750019679850091)*sj3);
IkReal x1041=((0.0160210495477794)*r22);
IkReal x1042=(cj5*r01);
IkReal x1043=((0.499980319762597)*sj4);
IkReal x1044=((0.866036765876652)*sj4);
IkReal x1045=(cj5*r20);
IkReal x1046=(r01*sj5);
IkReal x1047=((0.433001339129174)*sj3);
IkReal x1048=((0.0184992718312161)*sj4);
IkReal x1049=(r21*sj5);
IkReal x1050=(r20*sj5);
IkReal x1051=(cj4*r22);
IkReal x1052=(cj1*x1031);
IkReal x1053=(sj1*x1030);
IkReal x1054=(cj5*r00*sj4);
IkReal x1055=(cj1*x1030);
IkReal x1056=(r20*x1043);
IkReal x1057=(sj1*x1031);
IkReal x1058=(x1052+x1053);
evalcond[0]=((((-1.0)*x1033*x1034))+(((-0.750019679850091)*x1051))+x1058+(((-0.249980320149909)*r22))+(((-1.0)*x1044*x1045))+(((-0.433001339129174)*cj4*x1035))+((sj5*x1034))+((x1044*x1049))+(((0.433001339129174)*x1035)));
evalcond[1]=(x1055+(((-0.249980320149909)*r02))+(((-1.0)*cj5*r00*x1044))+(((-1.0)*x1057))+(((0.433001339129174)*x1042))+(((-0.433001339129174)*r01*x1036))+(((-0.433001339129174)*r00*x1033))+(((-0.750019679850091)*x1032))+((x1044*x1046))+(((0.433001339129174)*x1039)));
evalcond[2]=((((0.00924927184554663)*r20*x1033))+(((0.00924927184554663)*cj4*x1035))+(((0.064677809339343)*x1035))+(((0.064677809339343)*x1050))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*x1048*x1049))+((cj4*x1041))+((x1045*x1048))+(((-0.187)*x1053))+(((-0.187)*x1052))+(((-1.0)*x1041)));
evalcond[3]=((((-1.0)*x1046*x1048))+(((-0.0160210495477794)*r02))+(((-0.29)*sj1))+(((0.00924927184554663)*r01*x1036))+(((0.00924927184554663)*r00*x1033))+(((0.064677809339343)*x1039))+(((0.0160210495477794)*x1032))+(((0.187)*x1057))+(((-1.0)*px))+(((0.064677809339343)*x1042))+((cj5*r00*x1048))+(((-0.187)*x1055)));
evalcond[4]=((((-1.0)*r02*x1047))+((cj3*r02*x1044))+((r00*x1033*x1037))+((cj3*r01*x1033))+x1058+((cj3*x1042*x1043))+((x1040*x1042))+((x1039*x1040))+(((-1.0)*sj3*x1043*x1046))+((cj3*x1039*x1043))+((r01*x1036*x1037))+(((-1.0)*r00*x1036*x1038))+((x1032*x1047))+((cj5*r00*sj3*x1043)));
evalcond[5]=(((cj3*x1043*x1050))+x1057+((x1035*x1040))+((x1040*x1050))+(((-1.0)*r20*x1036*x1038))+(((-1.0)*r22*x1047))+((cj3*x1035*x1043))+((r20*x1033*x1037))+(((-1.0)*sj3*x1043*x1049))+((cj4*x1035*x1037))+(((-1.0)*x1055))+((sj3*x1043*x1045))+((x1047*x1051))+((cj3*r21*x1033))+((cj3*r22*x1044)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1059=((0.249980320149909)*cj1);
IkReal x1060=((0.433001339129174)*sj1);
IkReal x1061=(cj5*r21);
IkReal x1062=(r20*sj5);
IkReal x1063=((0.433001339129174)*cj1);
IkReal x1064=(r00*sj5);
IkReal x1065=((0.249980320149909)*sj1);
IkReal x1066=(cj5*r01);
IkReal x1067=((0.866036765876652)*cj5*sj4);
IkReal x1068=(cj4*x1066);
IkReal x1069=((0.866036765876652)*sj4*sj5);
IkReal x1070=((0.750019679850091)*cj4*r02);
IkReal x1071=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*x1063*x1068))+(((-1.0)*x1060*x1062))+(((-1.0)*x1060*x1061))+(((-1.0)*r02*x1059))+(((-1.0)*cj4*x1063*x1064))+(((-1.0)*cj1*x1070))+((r20*sj1*x1067))+((sj1*x1071))+((cj4*x1060*x1062))+((cj4*x1060*x1061))+((x1063*x1066))+((x1063*x1064))+(((-1.0)*r21*sj1*x1069))+((cj1*r01*x1069))+((r22*x1065))+(((-1.0)*cj1*r00*x1067)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1060*x1064))+(((-1.0)*x1060*x1066))+((cj1*r20*x1067))+((x1060*x1068))+((r00*sj1*x1067))+(((-1.0)*x1062*x1063))+(((-1.0)*x1061*x1063))+((cj4*x1062*x1063))+((cj1*x1071))+((sj1*x1070))+((cj4*x1060*x1064))+(((-1.0)*r01*sj1*x1069))+((cj4*x1061*x1063))+((r22*x1059))+(((-1.0)*cj1*r21*x1069))+((r02*x1065)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x1063*x1068))+(((-1.0)*x1060*x1062))+(((-1.0)*x1060*x1061))+(((-1.0)*r02*x1059))+(((-1.0)*cj4*x1063*x1064))+(((-1.0)*cj1*x1070))+((r20*sj1*x1067))+((sj1*x1071))+((cj4*x1060*x1062))+((cj4*x1060*x1061))+((x1063*x1066))+((x1063*x1064))+(((-1.0)*r21*sj1*x1069))+((cj1*r01*x1069))+((r22*x1065))+(((-1.0)*cj1*r00*x1067))))+IKsqr(((((-1.0)*x1060*x1064))+(((-1.0)*x1060*x1066))+((cj1*r20*x1067))+((x1060*x1068))+((r00*sj1*x1067))+(((-1.0)*x1062*x1063))+(((-1.0)*x1061*x1063))+((cj4*x1062*x1063))+((cj1*x1071))+((sj1*x1070))+((cj4*x1060*x1064))+(((-1.0)*r01*sj1*x1069))+((cj4*x1061*x1063))+((r22*x1059))+(((-1.0)*cj1*r21*x1069))+((r02*x1065))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x1063*x1068))+(((-1.0)*x1060*x1062))+(((-1.0)*x1060*x1061))+(((-1.0)*r02*x1059))+(((-1.0)*cj4*x1063*x1064))+(((-1.0)*cj1*x1070))+((r20*sj1*x1067))+((sj1*x1071))+((cj4*x1060*x1062))+((cj4*x1060*x1061))+((x1063*x1066))+((x1063*x1064))+(((-1.0)*r21*sj1*x1069))+((cj1*r01*x1069))+((r22*x1065))+(((-1.0)*cj1*r00*x1067))), ((((-1.0)*x1060*x1064))+(((-1.0)*x1060*x1066))+((cj1*r20*x1067))+((x1060*x1068))+((r00*sj1*x1067))+(((-1.0)*x1062*x1063))+(((-1.0)*x1061*x1063))+((cj4*x1062*x1063))+((cj1*x1071))+((sj1*x1070))+((cj4*x1060*x1064))+(((-1.0)*r01*sj1*x1069))+((cj4*x1061*x1063))+((r22*x1059))+(((-1.0)*cj1*r21*x1069))+((r02*x1065))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1072=IKcos(j2);
IkReal x1073=IKsin(j2);
IkReal x1074=(cj4*r02);
IkReal x1075=(cj4*sj5);
IkReal x1076=((0.433001339129174)*r20);
IkReal x1077=(cj5*r21);
IkReal x1078=(cj4*cj5);
IkReal x1079=(r01*sj3);
IkReal x1080=((1.0)*cj3);
IkReal x1081=(r00*sj5);
IkReal x1082=((0.750019679850091)*sj3);
IkReal x1083=((0.0160210495477794)*r22);
IkReal x1084=(r20*sj5);
IkReal x1085=((0.433001339129174)*sj3);
IkReal x1086=(cj4*r22);
IkReal x1087=(cj5*r01);
IkReal x1088=((0.866036765876652)*sj4);
IkReal x1089=(cj5*r20);
IkReal x1090=(sj4*sj5);
IkReal x1091=((0.499980319762597)*sj3);
IkReal x1092=((0.249980320149909)*sj3);
IkReal x1093=(sj1*x1072);
IkReal x1094=(cj1*x1072);
IkReal x1095=(cj5*r00*sj4);
IkReal x1096=((0.499980319762597)*cj3*sj4);
IkReal x1097=(sj1*x1073);
IkReal x1098=(cj1*x1073);
IkReal x1099=((1.0)*x1098);
evalcond[0]=((((-1.0)*x1075*x1076))+(((-0.433001339129174)*cj4*x1077))+x1094+x1097+(((-0.249980320149909)*r22))+(((-0.750019679850091)*x1086))+((sj5*x1076))+(((-1.0)*x1088*x1089))+(((0.433001339129174)*x1077))+((r21*sj5*x1088)));
evalcond[1]=(x1093+(((-0.750019679850091)*x1074))+(((-0.249980320149909)*r02))+(((-1.0)*x1099))+(((-0.433001339129174)*r00*x1075))+(((-0.433001339129174)*r01*x1078))+(((0.433001339129174)*x1087))+(((0.433001339129174)*x1081))+((r01*sj5*x1088))+(((-1.0)*cj5*r00*x1088)));
evalcond[2]=((((-0.0184992718312161)*r21*x1090))+(((-0.187)*x1094))+(((-0.187)*x1097))+((cj4*x1083))+(((-1.0)*pz))+(((0.0184992718312161)*sj4*x1089))+(((0.29)*cj1))+(((0.064677809339343)*x1077))+(((0.064677809339343)*x1084))+(((0.00924927184554663)*cj4*x1077))+(((0.00924927184554663)*r20*x1075))+(((-1.0)*x1083)));
evalcond[3]=((((-0.0160210495477794)*r02))+(((0.187)*x1098))+(((0.0184992718312161)*x1095))+(((-0.187)*x1093))+(((0.0160210495477794)*x1074))+(((0.29)*sj1))+(((-0.0184992718312161)*r01*x1090))+(((0.00924927184554663)*r00*x1075))+(((-1.0)*px))+(((0.00924927184554663)*r01*x1078))+(((0.064677809339343)*x1081))+(((0.064677809339343)*x1087)));
evalcond[4]=(((x1082*x1084))+((cj4*x1077*x1092))+x1093+((x1084*x1096))+(((-1.0)*x1099))+((r20*x1075*x1092))+(((-1.0)*r21*x1090*x1091))+((cj3*r21*x1075))+((sj4*x1089*x1091))+((x1077*x1096))+(((-1.0)*r20*x1078*x1080))+((x1077*x1082))+((cj3*r22*x1088))+((x1085*x1086))+(((-1.0)*r22*x1085)));
evalcond[5]=(((x1087*x1096))+((x1081*x1082))+((r00*x1075*x1092))+(((0.249980320149909)*x1078*x1079))+((cj3*r01*x1075))+(((-1.0)*x1097))+(((-1.0)*x1094))+(((0.750019679850091)*cj5*x1079))+(((-1.0)*r00*x1078*x1080))+(((-0.499980319762597)*x1079*x1090))+(((-1.0)*r02*x1085))+((x1081*x1096))+((x1074*x1085))+((x1091*x1095))+((cj3*r02*x1088)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1100=((0.433001339129174)*sj1);
IkReal x1101=(cj5*r21);
IkReal x1102=(r10*sj5);
IkReal x1103=((0.433001339129174)*cj1);
IkReal x1104=(r20*sj5);
IkReal x1105=(cj5*r11);
IkReal x1106=((0.866036765876652)*sj4);
IkReal x1107=(cj1*sj5);
IkReal x1108=(cj5*r20);
IkReal x1109=((0.249980320149909)*r22);
IkReal x1110=(sj1*sj5);
IkReal x1111=((0.249980320149909)*r12);
IkReal x1112=(cj5*r10);
IkReal x1113=((0.750019679850091)*cj4*r12);
IkReal x1114=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*x1103*x1105))+(((-1.0)*r21*x1106*x1110))+((sj1*x1106*x1108))+((cj1*x1111))+((cj1*x1113))+((cj1*x1106*x1112))+((cj4*x1102*x1103))+(((-1.0)*x1100*x1101))+(((-1.0)*x1100*x1104))+((sj1*x1109))+(((-1.0)*r11*x1106*x1107))+((sj1*x1114))+((cj4*x1100*x1101))+((cj4*x1100*x1104))+(((-1.0)*x1102*x1103))+((cj4*x1103*x1105)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1103*x1104))+(((-1.0)*sj1*x1106*x1112))+(((-1.0)*r21*x1106*x1107))+(((-1.0)*cj4*x1100*x1102))+(((-1.0)*cj4*x1100*x1105))+((cj1*x1106*x1108))+(((-1.0)*sj1*x1113))+(((-1.0)*sj1*x1111))+((cj1*x1114))+((cj1*x1109))+((r11*x1106*x1110))+((x1100*x1105))+((x1100*x1102))+(((-1.0)*x1101*x1103))+((cj4*x1103*x1104))+((cj4*x1101*x1103)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x1103*x1105))+(((-1.0)*r21*x1106*x1110))+((sj1*x1106*x1108))+((cj1*x1111))+((cj1*x1113))+((cj1*x1106*x1112))+((cj4*x1102*x1103))+(((-1.0)*x1100*x1101))+(((-1.0)*x1100*x1104))+((sj1*x1109))+(((-1.0)*r11*x1106*x1107))+((sj1*x1114))+((cj4*x1100*x1101))+((cj4*x1100*x1104))+(((-1.0)*x1102*x1103))+((cj4*x1103*x1105))))+IKsqr(((((-1.0)*x1103*x1104))+(((-1.0)*sj1*x1106*x1112))+(((-1.0)*r21*x1106*x1107))+(((-1.0)*cj4*x1100*x1102))+(((-1.0)*cj4*x1100*x1105))+((cj1*x1106*x1108))+(((-1.0)*sj1*x1113))+(((-1.0)*sj1*x1111))+((cj1*x1114))+((cj1*x1109))+((r11*x1106*x1110))+((x1100*x1105))+((x1100*x1102))+(((-1.0)*x1101*x1103))+((cj4*x1103*x1104))+((cj4*x1101*x1103))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x1103*x1105))+(((-1.0)*r21*x1106*x1110))+((sj1*x1106*x1108))+((cj1*x1111))+((cj1*x1113))+((cj1*x1106*x1112))+((cj4*x1102*x1103))+(((-1.0)*x1100*x1101))+(((-1.0)*x1100*x1104))+((sj1*x1109))+(((-1.0)*r11*x1106*x1107))+((sj1*x1114))+((cj4*x1100*x1101))+((cj4*x1100*x1104))+(((-1.0)*x1102*x1103))+((cj4*x1103*x1105))), ((((-1.0)*x1103*x1104))+(((-1.0)*sj1*x1106*x1112))+(((-1.0)*r21*x1106*x1107))+(((-1.0)*cj4*x1100*x1102))+(((-1.0)*cj4*x1100*x1105))+((cj1*x1106*x1108))+(((-1.0)*sj1*x1113))+(((-1.0)*sj1*x1111))+((cj1*x1114))+((cj1*x1109))+((r11*x1106*x1110))+((x1100*x1105))+((x1100*x1102))+(((-1.0)*x1101*x1103))+((cj4*x1103*x1104))+((cj4*x1101*x1103))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1115=IKsin(j2);
IkReal x1116=IKcos(j2);
IkReal x1117=(cj4*sj5);
IkReal x1118=((0.433001339129174)*r20);
IkReal x1119=((0.064677809339343)*cj5);
IkReal x1120=(r10*sj3);
IkReal x1121=(cj3*r21);
IkReal x1122=(r20*sj5);
IkReal x1123=((0.750019679850091)*sj3);
IkReal x1124=(r10*sj5);
IkReal x1125=((0.0160210495477794)*r22);
IkReal x1126=((0.499980319762597)*sj4);
IkReal x1127=(sj3*sj5);
IkReal x1128=(cj5*r21);
IkReal x1129=(cj4*r12);
IkReal x1130=((0.433001339129174)*sj3);
IkReal x1131=((0.866036765876652)*sj4);
IkReal x1132=(cj5*r10);
IkReal x1133=(cj5*r11);
IkReal x1134=(cj5*r20);
IkReal x1135=((0.433001339129174)*cj4);
IkReal x1136=(cj4*r22);
IkReal x1137=((0.00924927184554663)*cj4);
IkReal x1138=((0.0184992718312161)*sj4);
IkReal x1139=(cj1*x1116);
IkReal x1140=(sj1*x1115);
IkReal x1141=(cj1*x1115);
IkReal x1142=(sj1*x1116);
IkReal x1143=((0.249980320149909)*cj4*sj3);
IkReal x1144=(sj5*x1138);
IkReal x1145=((1.0)*cj3*cj4*cj5);
IkReal x1146=(x1140+x1139);
evalcond[0]=(x1146+(((-0.249980320149909)*r22))+(((-1.0)*x1131*x1134))+(((-0.750019679850091)*x1136))+(((-1.0)*x1128*x1135))+((r21*sj5*x1131))+(((0.433001339129174)*x1128))+((sj5*x1118))+(((-1.0)*x1117*x1118)));
evalcond[1]=(x1141+(((-0.249980320149909)*r12))+(((-1.0)*x1131*x1132))+((r11*sj5*x1131))+(((-0.750019679850091)*x1129))+(((-1.0)*x1142))+(((-0.433001339129174)*r10*x1117))+(((0.433001339129174)*x1133))+(((0.433001339129174)*x1124))+(((-1.0)*x1133*x1135)));
evalcond[2]=((((-0.187)*x1140))+(((0.064677809339343)*x1122))+((x1134*x1138))+(((-1.0)*r21*x1144))+(((0.00924927184554663)*r20*x1117))+(((-1.0)*pz))+(((0.29)*cj1))+(((-0.187)*x1139))+((cj4*x1125))+(((-1.0)*x1125))+((x1128*x1137))+((r21*x1119)));
evalcond[3]=((((-0.0160210495477794)*r12))+(((-0.29)*sj1))+(((0.0160210495477794)*x1129))+(((-0.187)*x1141))+(((0.064677809339343)*x1124))+(((-1.0)*py))+(((0.187)*x1142))+(((0.00924927184554663)*r10*x1117))+(((-1.0)*r11*x1144))+((x1133*x1137))+((r11*x1119))+((x1132*x1138)));
evalcond[4]=((((0.750019679850091)*sj5*x1120))+x1146+(((-1.0)*r12*x1130))+((cj3*x1124*x1126))+((x1129*x1130))+((cj3*x1126*x1133))+(((0.249980320149909)*x1117*x1120))+(((-1.0)*r11*x1126*x1127))+((x1133*x1143))+((cj3*r12*x1131))+((cj5*x1120*x1126))+(((-1.0)*cj3*cj4*x1132))+((x1123*x1133))+((cj3*r11*x1117)));
evalcond[5]=(((cj3*r22*x1131))+((cj3*x1122*x1126))+((x1128*x1143))+x1142+((x1130*x1136))+(((-1.0)*r21*x1126*x1127))+(((0.249980320149909)*r20*sj3*x1117))+(((-1.0)*x1141))+((cj5*x1121*x1126))+((sj3*x1126*x1134))+(((-1.0)*r22*x1130))+((x1117*x1121))+(((-1.0)*cj3*cj4*x1134))+((x1122*x1123))+((x1123*x1128)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1147=((0.433001339129174)*sj1);
IkReal x1148=(cj5*r21);
IkReal x1149=(r10*sj5);
IkReal x1150=((0.433001339129174)*cj1);
IkReal x1151=(r20*sj5);
IkReal x1152=(cj5*r11);
IkReal x1153=((0.866036765876652)*sj4);
IkReal x1154=(cj1*sj5);
IkReal x1155=(cj5*r20);
IkReal x1156=((0.249980320149909)*r22);
IkReal x1157=(sj1*sj5);
IkReal x1158=((0.249980320149909)*r12);
IkReal x1159=(cj5*r10);
IkReal x1160=((0.750019679850091)*cj4*r12);
IkReal x1161=((0.750019679850091)*cj4*r22);
if( IKabs((((x1149*x1150))+((sj1*x1161))+(((-1.0)*cj1*x1158))+((sj1*x1153*x1155))+(((-1.0)*x1147*x1151))+(((-1.0)*cj1*x1160))+((x1150*x1152))+(((-1.0)*x1147*x1148))+(((-1.0)*cj4*x1149*x1150))+(((-1.0)*cj4*x1150*x1152))+((sj1*x1156))+((r11*x1153*x1154))+((cj4*x1147*x1151))+(((-1.0)*cj1*x1153*x1159))+(((-1.0)*r21*x1153*x1157))+((cj4*x1147*x1148)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x1161))+((cj4*x1150*x1151))+((sj1*x1160))+(((-1.0)*r11*x1153*x1157))+((sj1*x1153*x1159))+(((-1.0)*x1147*x1152))+((cj1*x1153*x1155))+(((-1.0)*x1147*x1149))+((cj1*x1156))+(((-1.0)*x1148*x1150))+((cj4*x1148*x1150))+((sj1*x1158))+((cj4*x1147*x1152))+(((-1.0)*r21*x1153*x1154))+(((-1.0)*x1150*x1151))+((cj4*x1147*x1149)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x1149*x1150))+((sj1*x1161))+(((-1.0)*cj1*x1158))+((sj1*x1153*x1155))+(((-1.0)*x1147*x1151))+(((-1.0)*cj1*x1160))+((x1150*x1152))+(((-1.0)*x1147*x1148))+(((-1.0)*cj4*x1149*x1150))+(((-1.0)*cj4*x1150*x1152))+((sj1*x1156))+((r11*x1153*x1154))+((cj4*x1147*x1151))+(((-1.0)*cj1*x1153*x1159))+(((-1.0)*r21*x1153*x1157))+((cj4*x1147*x1148))))+IKsqr((((cj1*x1161))+((cj4*x1150*x1151))+((sj1*x1160))+(((-1.0)*r11*x1153*x1157))+((sj1*x1153*x1159))+(((-1.0)*x1147*x1152))+((cj1*x1153*x1155))+(((-1.0)*x1147*x1149))+((cj1*x1156))+(((-1.0)*x1148*x1150))+((cj4*x1148*x1150))+((sj1*x1158))+((cj4*x1147*x1152))+(((-1.0)*r21*x1153*x1154))+(((-1.0)*x1150*x1151))+((cj4*x1147*x1149))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x1149*x1150))+((sj1*x1161))+(((-1.0)*cj1*x1158))+((sj1*x1153*x1155))+(((-1.0)*x1147*x1151))+(((-1.0)*cj1*x1160))+((x1150*x1152))+(((-1.0)*x1147*x1148))+(((-1.0)*cj4*x1149*x1150))+(((-1.0)*cj4*x1150*x1152))+((sj1*x1156))+((r11*x1153*x1154))+((cj4*x1147*x1151))+(((-1.0)*cj1*x1153*x1159))+(((-1.0)*r21*x1153*x1157))+((cj4*x1147*x1148))), (((cj1*x1161))+((cj4*x1150*x1151))+((sj1*x1160))+(((-1.0)*r11*x1153*x1157))+((sj1*x1153*x1159))+(((-1.0)*x1147*x1152))+((cj1*x1153*x1155))+(((-1.0)*x1147*x1149))+((cj1*x1156))+(((-1.0)*x1148*x1150))+((cj4*x1148*x1150))+((sj1*x1158))+((cj4*x1147*x1152))+(((-1.0)*r21*x1153*x1154))+(((-1.0)*x1150*x1151))+((cj4*x1147*x1149))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1162=IKcos(j2);
IkReal x1163=IKsin(j2);
IkReal x1164=(cj4*sj5);
IkReal x1165=((0.433001339129174)*r20);
IkReal x1166=((0.064677809339343)*cj5);
IkReal x1167=(r10*sj3);
IkReal x1168=(cj3*sj4);
IkReal x1169=((0.433001339129174)*r10);
IkReal x1170=((0.0160210495477794)*r22);
IkReal x1171=(r20*sj5);
IkReal x1172=(r11*sj5);
IkReal x1173=(cj5*r20);
IkReal x1174=(cj5*r21);
IkReal x1175=((0.866036765876652)*sj4);
IkReal x1176=(cj5*r10);
IkReal x1177=(cj5*r11);
IkReal x1178=((0.750019679850091)*sj3);
IkReal x1179=(cj4*sj3);
IkReal x1180=((0.750019679850091)*cj4);
IkReal x1181=((0.433001339129174)*cj4);
IkReal x1182=((0.433001339129174)*r22);
IkReal x1183=((0.0160210495477794)*r12);
IkReal x1184=((0.0184992718312161)*sj4);
IkReal x1185=(r21*sj5);
IkReal x1186=(r10*sj5);
IkReal x1187=((0.00924927184554663)*cj4);
IkReal x1188=(sj1*x1162);
IkReal x1189=(cj1*x1162);
IkReal x1190=((0.433001339129174)*r12*sj3);
IkReal x1191=((0.499980319762597)*sj3*sj4);
IkReal x1192=(sj1*x1163);
IkReal x1193=(cj1*x1163);
IkReal x1194=((1.0)*x1193);
IkReal x1195=((1.0)*cj3*cj4*cj5);
evalcond[0]=(x1189+x1192+(((-1.0)*x1173*x1175))+(((0.433001339129174)*x1174))+(((-0.249980320149909)*r22))+((x1175*x1185))+(((-1.0)*r22*x1180))+(((-1.0)*x1164*x1165))+(((-1.0)*x1174*x1181))+((sj5*x1165)));
evalcond[1]=(x1188+(((0.433001339129174)*x1177))+(((-0.249980320149909)*r12))+(((-1.0)*x1194))+((x1172*x1175))+(((-1.0)*x1175*x1176))+(((-1.0)*x1164*x1169))+(((-1.0)*r12*x1180))+((sj5*x1169))+(((-1.0)*x1177*x1181)));
evalcond[2]=((((0.064677809339343)*x1171))+((r21*x1166))+((x1174*x1187))+((x1173*x1184))+((cj4*x1170))+(((-0.187)*x1192))+(((-1.0)*pz))+(((-1.0)*x1184*x1185))+(((-0.187)*x1189))+(((0.29)*cj1))+(((0.00924927184554663)*r20*x1164))+(((-1.0)*x1170)));
evalcond[3]=((((0.187)*x1193))+(((0.29)*sj1))+((x1176*x1184))+((x1177*x1187))+((cj4*x1183))+(((-1.0)*py))+(((-1.0)*x1172*x1184))+(((0.064677809339343)*x1186))+(((-1.0)*x1183))+(((-0.187)*x1188))+((r11*x1166))+(((0.00924927184554663)*r10*x1164)));
evalcond[4]=(x1188+(((0.866036765876652)*r22*x1168))+(((0.249980320149909)*x1174*x1179))+((x1174*x1178))+((cj3*r21*x1164))+((x1179*x1182))+((x1173*x1191))+(((0.249980320149909)*r20*sj3*x1164))+(((0.499980319762597)*x1168*x1171))+(((0.499980319762597)*x1168*x1174))+(((-1.0)*x1194))+(((-1.0)*x1185*x1191))+(((-1.0)*cj3*cj4*x1173))+(((-1.0)*sj3*x1182))+((x1171*x1178)));
evalcond[5]=((((0.499980319762597)*cj5*sj4*x1167))+((cj3*r11*x1164))+(((0.750019679850091)*sj5*x1167))+(((0.499980319762597)*x1168*x1186))+(((0.499980319762597)*x1168*x1177))+(((0.249980320149909)*x1164*x1167))+(((0.249980320149909)*x1177*x1179))+(((-1.0)*x1190))+((x1177*x1178))+(((0.433001339129174)*r12*x1179))+(((-1.0)*x1172*x1191))+(((0.866036765876652)*r12*x1168))+(((-1.0)*cj3*cj4*x1176))+(((-1.0)*x1189))+(((-1.0)*x1192)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1196=(sj0*sj5);
IkReal x1197=((0.866036765876652)*sj4);
IkReal x1198=(cj1*r21);
IkReal x1199=((0.433001339129174)*sj1);
IkReal x1200=(cj4*r20);
IkReal x1201=(r10*sj5);
IkReal x1202=(cj4*cj5);
IkReal x1203=(cj1*r11);
IkReal x1204=(cj5*sj0);
IkReal x1205=(r22*sj0);
IkReal x1206=((0.249980320149909)*cj1);
IkReal x1207=(cj5*r10);
IkReal x1208=((0.750019679850091)*cj4);
IkReal x1209=((0.433001339129174)*cj1);
IkReal x1210=((0.249980320149909)*sj1);
IkReal x1211=(r12*x1208);
CheckValue<IkReal> x1212=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x1212.valid){
continue;
}
CheckValue<IkReal> x1213 = IKatan2WithCheck(IkReal(((((0.433001339129174)*x1202*x1203))+((r21*sj0*x1199*x1202))+((sj1*x1205*x1208))+(((-1.0)*r21*sj1*x1196*x1197))+(((-0.433001339129174)*cj5*x1203))+((r12*x1206))+((r20*sj1*x1197*x1204))+((x1196*x1199*x1200))+((cj1*x1197*x1207))+(((-1.0)*x1201*x1209))+((x1205*x1210))+((cj4*x1201*x1209))+(((-1.0)*sj5*x1197*x1203))+(((-1.0)*r20*x1196*x1199))+((cj1*x1211))+(((-1.0)*r21*x1199*x1204)))),IkReal(((((-1.0)*cj4*x1199*x1201))+(((-0.433001339129174)*x1198*x1204))+((cj5*r11*x1199))+((cj1*x1205*x1208))+(((-1.0)*r11*x1199*x1202))+(((-1.0)*sj1*x1197*x1207))+((x1199*x1201))+(((-1.0)*x1196*x1197*x1198))+((x1205*x1206))+(((-1.0)*r12*x1210))+((x1196*x1200*x1209))+((cj1*r20*x1197*x1204))+(((-1.0)*sj1*x1211))+((r11*sj1*sj5*x1197))+(((0.433001339129174)*sj0*x1198*x1202))+(((-1.0)*r20*x1196*x1209)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1213.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1212.value)))+(x1213.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x1214=IKsin(j2);
IkReal x1215=IKcos(j2);
IkReal x1216=(cj4*r02);
IkReal x1217=(cj5*r11);
IkReal x1218=(cj3*cj4);
IkReal x1219=(r21*sj5);
IkReal x1220=(r10*sj5);
IkReal x1221=((1.0)*cj5);
IkReal x1222=((0.00924927184554663)*cj4);
IkReal x1223=((0.866036765876652)*sj4);
IkReal x1224=(cj5*r10);
IkReal x1225=(cj5*sj3);
IkReal x1226=(r00*sj5);
IkReal x1227=(cj0*sj1);
IkReal x1228=((0.433001339129174)*cj4);
IkReal x1229=((0.0184992718312161)*sj4);
IkReal x1230=(r20*sj5);
IkReal x1231=((0.249980320149909)*cj4);
IkReal x1232=(r11*sj5);
IkReal x1233=(cj5*r21);
IkReal x1234=(cj5*r00);
IkReal x1235=((0.0160210495477794)*r22);
IkReal x1236=(sj0*sj1);
IkReal x1237=(cj5*r01);
IkReal x1238=((0.750019679850091)*sj3);
IkReal x1239=(cj5*r20);
IkReal x1240=((0.750019679850091)*cj4);
IkReal x1241=(r22*sj3);
IkReal x1242=(r12*sj3);
IkReal x1243=((0.499980319762597)*sj4);
IkReal x1244=(r01*sj5);
IkReal x1245=((0.0160210495477794)*r12);
IkReal x1246=((0.433001339129174)*sj3);
IkReal x1247=(cj3*x1243);
IkReal x1248=((0.187)*x1215);
IkReal x1249=((1.0)*x1215);
IkReal x1250=(sj3*x1231);
IkReal x1251=(cj1*x1214);
IkReal x1252=(sj1*x1214);
IkReal x1253=(cj1*x1215);
IkReal x1254=(sj0*x1251);
evalcond[0]=((((-1.0)*x1223*x1239))+x1252+x1253+(((-0.249980320149909)*r22))+((x1219*x1223))+(((-1.0)*x1228*x1230))+(((-1.0)*x1228*x1233))+(((-1.0)*r22*x1240))+(((0.433001339129174)*x1233))+(((0.433001339129174)*x1230)));
evalcond[1]=((((-1.0)*x1223*x1234))+(((-0.249980320149909)*r02))+((cj0*x1251))+(((-1.0)*x1226*x1228))+(((-1.0)*x1228*x1237))+(((-1.0)*x1227*x1249))+(((-0.750019679850091)*x1216))+(((0.433001339129174)*x1226))+(((0.433001339129174)*x1237))+((x1223*x1244)));
evalcond[2]=(x1254+(((-0.249980320149909)*r12))+((x1223*x1232))+(((-1.0)*x1220*x1228))+(((-1.0)*x1236*x1249))+(((-1.0)*r12*x1240))+(((0.433001339129174)*x1217))+(((-1.0)*x1217*x1228))+(((0.433001339129174)*x1220))+(((-1.0)*x1223*x1224)));
evalcond[3]=((((-1.0)*cj1*x1248))+(((-1.0)*x1235))+(((0.064677809339343)*x1233))+(((0.064677809339343)*x1230))+(((-1.0)*pz))+(((0.29)*cj1))+((cj4*x1235))+((x1222*x1233))+((x1222*x1230))+(((-1.0)*x1219*x1229))+(((-0.187)*x1252))+((x1229*x1239)));
evalcond[4]=((((-0.0160210495477794)*r02))+(((-0.29)*x1227))+(((0.007)*sj0))+(((0.0160210495477794)*x1216))+(((-0.187)*cj0*x1251))+(((0.064677809339343)*x1237))+(((-1.0)*x1229*x1244))+(((0.064677809339343)*x1226))+(((-1.0)*px))+((x1227*x1248))+((x1222*x1237))+((x1222*x1226))+((x1229*x1234)));
evalcond[5]=(((x1236*x1248))+((x1217*x1222))+(((-0.29)*x1236))+(((0.064677809339343)*x1217))+((cj4*x1245))+((x1224*x1229))+(((0.064677809339343)*x1220))+(((-1.0)*x1245))+(((-0.007)*cj0))+(((-1.0)*py))+((x1220*x1222))+(((-1.0)*x1229*x1232))+(((-0.187)*x1254)));
evalcond[6]=(((cj3*r22*x1223))+((r21*x1225*x1231))+((x1218*x1219))+((x1233*x1247))+((x1230*x1250))+(((-1.0)*sj3*x1219*x1243))+(((0.750019679850091)*r21*x1225))+((x1228*x1241))+((sj1*x1215))+((r20*x1225*x1243))+(((-1.0)*x1251))+(((-0.433001339129174)*x1241))+((x1230*x1238))+(((-1.0)*r20*x1218*x1221))+((x1230*x1247)));
evalcond[7]=(((r01*x1225*x1231))+((x1218*x1244))+(((-1.0)*r02*x1246))+((x1214*x1227))+(((-1.0)*sj3*x1243*x1244))+((cj0*x1253))+((cj3*r02*x1223))+((x1216*x1246))+((x1226*x1247))+((r00*x1225*x1243))+(((-1.0)*r00*x1218*x1221))+((x1226*x1238))+(((0.750019679850091)*r01*x1225))+((x1226*x1250))+((x1237*x1247)));
evalcond[8]=(((x1217*x1238))+((sj3*x1224*x1243))+(((-1.0)*r10*x1218*x1221))+((x1220*x1250))+(((-1.0)*sj3*x1232*x1243))+((cj3*r12*x1223))+((sj0*x1253))+((x1217*x1247))+((x1220*x1238))+((x1218*x1232))+((x1228*x1242))+((x1220*x1247))+((x1217*x1250))+(((-0.433001339129174)*x1242))+((x1214*x1236)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1255=((0.249980320149909)*cj1);
IkReal x1256=(cj0*cj1);
IkReal x1257=((0.750019679850091)*cj4);
IkReal x1258=(cj0*r20);
IkReal x1259=(cj1*r00);
IkReal x1260=(cj0*r22);
IkReal x1261=(r01*sj1);
IkReal x1262=((0.433001339129174)*sj1);
IkReal x1263=(cj5*r21);
IkReal x1264=((0.249980320149909)*sj1);
IkReal x1265=(cj1*r01);
IkReal x1266=((0.433001339129174)*cj5);
IkReal x1267=((0.433001339129174)*cj4);
IkReal x1268=((0.433001339129174)*sj5);
IkReal x1269=((0.866036765876652)*cj5*sj4);
IkReal x1270=((0.866036765876652)*sj4*sj5);
IkReal x1271=(cj4*x1266);
IkReal x1272=(cj4*sj5*x1262);
CheckValue<IkReal> x1273 = IKatan2WithCheck(IkReal((((x1265*x1271))+((r02*x1255))+((x1258*x1272))+(((-1.0)*sj5*x1258*x1262))+((sj1*x1258*x1269))+((x1259*x1269))+((x1260*x1264))+((sj1*x1257*x1260))+(((-1.0)*x1265*x1266))+(((-1.0)*cj0*r21*sj1*x1270))+(((-1.0)*cj0*x1262*x1263))+((cj0*cj4*x1262*x1263))+((sj5*x1259*x1267))+(((-1.0)*x1265*x1270))+(((-1.0)*x1259*x1268))+((cj1*r02*x1257)))),IkReal(((((-1.0)*r00*x1272))+((x1261*x1266))+(((-1.0)*x1261*x1271))+((x1261*x1270))+(((-1.0)*r02*sj1*x1257))+((x1255*x1260))+(((-1.0)*r00*sj1*x1269))+((r00*sj5*x1262))+((r22*x1256*x1257))+(((-1.0)*r02*x1264))+(((-1.0)*r21*x1256*x1270))+((r20*sj5*x1256*x1267))+(((-1.0)*r20*x1256*x1268))+(((-0.433001339129174)*x1256*x1263))+((x1256*x1263*x1267))+((r20*x1256*x1269)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1273.valid){
continue;
}
CheckValue<IkReal> x1274=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x1274.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x1273.value)+(((1.5707963267949)*(x1274.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x1275=IKsin(j2);
IkReal x1276=IKcos(j2);
IkReal x1277=(cj4*r02);
IkReal x1278=(cj5*r11);
IkReal x1279=(cj3*cj4);
IkReal x1280=(r21*sj5);
IkReal x1281=(r10*sj5);
IkReal x1282=((1.0)*cj5);
IkReal x1283=((0.00924927184554663)*cj4);
IkReal x1284=((0.866036765876652)*sj4);
IkReal x1285=(cj5*r10);
IkReal x1286=(cj5*sj3);
IkReal x1287=(r00*sj5);
IkReal x1288=(cj0*sj1);
IkReal x1289=((0.433001339129174)*cj4);
IkReal x1290=((0.0184992718312161)*sj4);
IkReal x1291=(r20*sj5);
IkReal x1292=((0.249980320149909)*cj4);
IkReal x1293=(r11*sj5);
IkReal x1294=(cj5*r21);
IkReal x1295=(cj5*r00);
IkReal x1296=((0.0160210495477794)*r22);
IkReal x1297=(sj0*sj1);
IkReal x1298=(cj5*r01);
IkReal x1299=((0.750019679850091)*sj3);
IkReal x1300=(cj5*r20);
IkReal x1301=((0.750019679850091)*cj4);
IkReal x1302=(r22*sj3);
IkReal x1303=(r12*sj3);
IkReal x1304=((0.499980319762597)*sj4);
IkReal x1305=(r01*sj5);
IkReal x1306=((0.0160210495477794)*r12);
IkReal x1307=((0.433001339129174)*sj3);
IkReal x1308=(cj3*x1304);
IkReal x1309=((0.187)*x1276);
IkReal x1310=((1.0)*x1276);
IkReal x1311=(sj3*x1292);
IkReal x1312=(cj1*x1275);
IkReal x1313=(sj1*x1275);
IkReal x1314=(cj1*x1276);
IkReal x1315=(sj0*x1312);
evalcond[0]=(x1314+x1313+(((0.433001339129174)*x1294))+(((0.433001339129174)*x1291))+(((-0.249980320149909)*r22))+(((-1.0)*x1284*x1300))+(((-1.0)*r22*x1301))+(((-1.0)*x1289*x1294))+(((-1.0)*x1289*x1291))+((x1280*x1284)));
evalcond[1]=((((-1.0)*x1284*x1295))+(((0.433001339129174)*x1298))+(((-0.249980320149909)*r02))+(((-1.0)*x1289*x1298))+(((-0.750019679850091)*x1277))+(((0.433001339129174)*x1287))+(((-1.0)*x1288*x1310))+(((-1.0)*x1287*x1289))+((x1284*x1305))+((cj0*x1312)));
evalcond[2]=(x1315+(((-0.249980320149909)*r12))+(((-1.0)*x1284*x1285))+(((0.433001339129174)*x1281))+(((-1.0)*x1278*x1289))+(((-1.0)*x1297*x1310))+(((-1.0)*r12*x1301))+((x1284*x1293))+(((0.433001339129174)*x1278))+(((-1.0)*x1281*x1289)));
evalcond[3]=((((-1.0)*x1296))+(((-0.187)*x1313))+(((-1.0)*x1280*x1290))+((x1290*x1300))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.064677809339343)*x1294))+(((0.064677809339343)*x1291))+((cj4*x1296))+(((-1.0)*cj1*x1309))+((x1283*x1294))+((x1283*x1291)));
evalcond[4]=(((x1288*x1309))+(((-0.0160210495477794)*r02))+(((-0.187)*cj0*x1312))+(((0.007)*sj0))+(((0.064677809339343)*x1287))+((x1290*x1295))+((x1283*x1287))+(((0.0160210495477794)*x1277))+(((-1.0)*px))+(((0.064677809339343)*x1298))+(((-1.0)*x1290*x1305))+((x1283*x1298))+(((-0.29)*x1288)));
evalcond[5]=(((x1278*x1283))+(((0.064677809339343)*x1281))+(((-0.187)*x1315))+((cj4*x1306))+(((-1.0)*x1306))+(((0.064677809339343)*x1278))+((x1285*x1290))+(((-0.007)*cj0))+(((-1.0)*py))+(((-0.29)*x1297))+(((-1.0)*x1290*x1293))+((x1297*x1309))+((x1281*x1283)));
evalcond[6]=(((x1291*x1308))+((x1279*x1280))+((sj1*x1276))+((x1291*x1311))+(((-1.0)*x1312))+((x1291*x1299))+((x1294*x1308))+((x1289*x1302))+((cj3*r22*x1284))+((r21*x1286*x1292))+(((-0.433001339129174)*x1302))+(((-1.0)*r20*x1279*x1282))+(((-1.0)*sj3*x1280*x1304))+(((0.750019679850091)*r21*x1286))+((r20*x1286*x1304)));
evalcond[7]=((((-1.0)*r00*x1279*x1282))+((x1277*x1307))+((x1287*x1299))+((r01*x1286*x1292))+(((-1.0)*sj3*x1304*x1305))+(((-1.0)*r02*x1307))+((x1275*x1288))+((x1287*x1308))+((r00*x1286*x1304))+((cj3*r02*x1284))+(((0.750019679850091)*r01*x1286))+((x1287*x1311))+((x1279*x1305))+((x1298*x1308))+((cj0*x1314)));
evalcond[8]=(((cj3*r12*x1284))+((x1281*x1299))+((x1289*x1303))+((x1281*x1311))+(((-1.0)*sj3*x1293*x1304))+((x1279*x1293))+(((-1.0)*r10*x1279*x1282))+((sj3*x1285*x1304))+((x1278*x1299))+(((-0.433001339129174)*x1303))+((x1281*x1308))+((x1278*x1308))+((x1278*x1311))+((x1275*x1297))+((sj0*x1314)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1316=((0.499980319762597)*sj4);
IkReal x1317=(cj5*r01);
IkReal x1318=(r21*sj5);
IkReal x1319=(cj5*r21);
IkReal x1320=((0.433001339129174)*r22);
IkReal x1321=(r00*sj5);
IkReal x1322=(cj5*r00);
IkReal x1323=((1.0)*cj4);
IkReal x1324=(r01*sj5);
IkReal x1325=((0.866036765876652)*sj4);
IkReal x1326=((0.249980320149909)*cj4);
IkReal x1327=(cj5*r20);
IkReal x1328=(r20*sj5);
IkReal x1329=((0.433001339129174)*r02);
IkReal x1330=(r22*x1325);
IkReal x1331=(x1316*x1319);
IkReal x1332=(x1316*x1328);
IkReal x1333=(x1323*x1327);
IkReal x1334=(x1331+x1330+x1332);
IkReal x1335=(x1320+(((-1.0)*x1319*x1326))+((x1316*x1318))+(((-1.0)*cj4*x1320))+(((-1.0)*x1326*x1328))+(((-0.750019679850091)*x1319))+(((-1.0)*x1316*x1327))+(((-0.750019679850091)*x1328)));
CheckValue<IkReal> x1336 = IKatan2WithCheck(IkReal((sj0*x1335)),IkReal(((-1.0)*sj0*((x1334+((cj4*x1318))+(((-1.0)*x1333)))))),IKFAST_ATAN2_MAGTHRESH);
if(!x1336.valid){
continue;
}
CheckValue<IkReal> x1337=IKPowWithIntegerCheck(IKsign((((x1335*((((x1316*x1321))+((x1316*x1317))+((cj4*x1324))+(((-1.0)*x1322*x1323))+((r02*x1325))))))+((((x1333+(((-1.0)*x1334))+(((-1.0)*x1318*x1323))))*((x1329+((x1316*x1324))+(((-1.0)*cj4*x1329))+(((-1.0)*x1321*x1326))+(((-0.750019679850091)*x1317))+(((-1.0)*x1316*x1322))+(((-0.750019679850091)*x1321))+(((-1.0)*x1317*x1326)))))))),-1);
if(!x1337.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1336.value)+(((1.5707963267949)*(x1337.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1338=IKcos(j3);
IkReal x1339=IKsin(j3);
IkReal x1340=(r10*sj5);
IkReal x1341=((0.499980319762597)*sj4);
IkReal x1342=(cj5*r01);
IkReal x1343=(r21*sj5);
IkReal x1344=((0.249980320149909)*cj4);
IkReal x1345=(cj5*r11);
IkReal x1346=(cj5*r21);
IkReal x1347=((0.433001339129174)*r22);
IkReal x1348=(r00*sj5);
IkReal x1349=((0.433001339129174)*r12);
IkReal x1350=((0.866036765876652)*sj4);
IkReal x1351=(cj5*r00);
IkReal x1352=((1.0)*cj4);
IkReal x1353=(r11*sj5);
IkReal x1354=(cj5*r20);
IkReal x1355=(r20*sj5);
IkReal x1356=(cj5*r10);
IkReal x1357=(r01*sj5);
IkReal x1358=((0.433001339129174)*r02);
evalcond[0]=(((x1338*((x1347+(((-0.750019679850091)*x1355))+(((-1.0)*x1341*x1354))+((x1341*x1343))+(((-1.0)*x1344*x1355))+(((-0.750019679850091)*x1346))+(((-1.0)*x1344*x1346))+(((-1.0)*cj4*x1347))))))+((x1339*(((((-1.0)*x1352*x1354))+((r22*x1350))+((x1341*x1346))+((x1341*x1355))+((cj4*x1343)))))));
evalcond[1]=(cj0+((x1339*(((((-1.0)*x1352*x1356))+((x1340*x1341))+((x1341*x1345))+((cj4*x1353))+((r12*x1350))))))+((x1338*((x1349+(((-1.0)*x1341*x1356))+(((-1.0)*x1340*x1344))+((x1341*x1353))+(((-0.750019679850091)*x1340))+(((-0.750019679850091)*x1345))+(((-1.0)*x1344*x1345))+(((-1.0)*cj4*x1349)))))));
evalcond[2]=((((-1.0)*sj0))+((x1339*((((r02*x1350))+((x1341*x1348))+((x1341*x1342))+((cj4*x1357))+(((-1.0)*x1351*x1352))))))+((x1338*((x1358+(((-1.0)*x1341*x1351))+((x1341*x1357))+(((-1.0)*x1342*x1344))+(((-1.0)*cj4*x1358))+(((-0.750019679850091)*x1348))+(((-0.750019679850091)*x1342))+(((-1.0)*x1344*x1348)))))));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1359=((0.502238137091374)*cj5);
IkReal x1360=((0.502238137091374)*sj5);
IkReal x1361=((0.428388381324785)*cj4);
IkReal x1362=((0.247317167488307)*cj4);
IkReal x1363=((0.494653804785234)*sj4);
if( IKabs(((((-1.0)*r10*sj5*x1362))+((r10*x1360))+(((-1.0)*r12*x1361))+(((-3.44827586206897)*py))+(((-0.216439204882112)*r12))+(((-1.0)*cj5*r10*x1363))+(((-1.0)*cj5*r11*x1362))+((r11*sj5*x1363))+((r11*x1359)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*sj5*x1362))+((r22*x1361))+(((-1.0)*r21*x1359))+(((-1.0)*r20*x1360))+(((-1.0)*r21*sj5*x1363))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((cj5*r21*x1362))+((cj5*r20*x1363)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r10*sj5*x1362))+((r10*x1360))+(((-1.0)*r12*x1361))+(((-3.44827586206897)*py))+(((-0.216439204882112)*r12))+(((-1.0)*cj5*r10*x1363))+(((-1.0)*cj5*r11*x1362))+((r11*sj5*x1363))+((r11*x1359))))+IKsqr((((r20*sj5*x1362))+((r22*x1361))+(((-1.0)*r21*x1359))+(((-1.0)*r20*x1360))+(((-1.0)*r21*sj5*x1363))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((cj5*r21*x1362))+((cj5*r20*x1363))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r10*sj5*x1362))+((r10*x1360))+(((-1.0)*r12*x1361))+(((-3.44827586206897)*py))+(((-0.216439204882112)*r12))+(((-1.0)*cj5*r10*x1363))+(((-1.0)*cj5*r11*x1362))+((r11*sj5*x1363))+((r11*x1359))), (((r20*sj5*x1362))+((r22*x1361))+(((-1.0)*r21*x1359))+(((-1.0)*r20*x1360))+(((-1.0)*r21*sj5*x1363))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((cj5*r21*x1362))+((cj5*r20*x1363))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1364=((1.0)*py);
IkReal x1365=((0.064677809339343)*cj5);
IkReal x1366=(cj3*cj5);
IkReal x1367=(cj4*r10);
IkReal x1368=(r20*sj5);
IkReal x1369=(cj5*sj3);
IkReal x1370=((0.0934963197956057)*sj4);
IkReal x1371=((0.145649059756499)*cj5);
IkReal x1372=((0.140253680131967)*sj3);
IkReal x1373=(cj4*r11);
IkReal x1374=(r11*sj5);
IkReal x1375=(cj4*r12);
IkReal x1376=((0.0160210495477794)*r22);
IkReal x1377=(r10*sj5);
IkReal x1378=((0.0184992718312161)*sj4);
IkReal x1379=(r21*sj5);
IkReal x1380=((0.143449603387718)*sj4);
IkReal x1381=((0.0809712504171555)*sj3);
IkReal x1382=((0.187)*cj3);
IkReal x1383=(cj5*r10);
IkReal x1384=(cj5*r20);
IkReal x1385=((0.29)*(IKsin(j1)));
IkReal x1386=((0.29)*(IKcos(j1)));
IkReal x1387=(r22*x1381);
IkReal x1388=((0.161948875218934)*cj3*sj4);
IkReal x1389=(cj4*cj5*r21);
IkReal x1390=((0.046746319868033)*cj4*sj3*sj5);
IkReal x1391=(x1364+x1385);
evalcond[0]=((((0.124232630584188)*cj4*r22))+(((-1.0)*x1386))+((x1380*x1384))+(((0.0627673694158124)*r22))+(((-1.0)*r21*x1371))+(((-0.145649059756499)*x1368))+(((0.0717219785716089)*cj4*x1368))+pz+(((0.0717219785716089)*x1389))+(((-1.0)*x1379*x1380)));
evalcond[1]=((((-0.0627673694158124)*r12))+((r11*x1371))+(((-0.124232630584188)*x1375))+(((0.145649059756499)*x1377))+(((-1.0)*x1380*x1383))+((x1374*x1380))+(((-0.0717219785716089)*cj5*x1373))+(((-0.0717219785716089)*sj5*x1367))+(((-1.0)*x1391)));
evalcond[2]=(x1387+(((-0.0160210495477794)*r12))+(((0.064677809339343)*x1377))+(((-1.0)*cj4*x1387))+(((0.00924927184554663)*sj5*x1367))+((sj3*x1370*x1379))+(((-0.046746319868033)*cj4*sj3*x1368))+(((0.00924927184554663)*cj5*x1373))+(((-1.0)*r21*x1366*x1370))+(((-1.0)*x1374*x1378))+(((0.187)*cj4*r20*x1366))+((r11*x1365))+(((-0.140253680131967)*r21*x1369))+(((-1.0)*r22*x1388))+(((-1.0)*cj3*x1368*x1370))+(((-1.0)*cj4*x1379*x1382))+(((-1.0)*r20*x1369*x1370))+(((-1.0)*x1368*x1372))+((x1378*x1383))+(((-0.046746319868033)*cj4*r21*x1369))+(((-1.0)*x1391))+(((0.0160210495477794)*x1375)));
evalcond[3]=((((-1.0)*r12*x1381))+x1386+((x1372*x1377))+((cj3*x1370*x1377))+(((-1.0)*sj3*x1370*x1374))+((r10*x1369*x1370))+((cj4*x1376))+((sj5*x1373*x1382))+(((0.046746319868033)*x1369*x1373))+(((-0.187)*x1366*x1367))+(((-1.0)*x1376))+(((-1.0)*pz))+(((0.140253680131967)*r11*x1369))+(((0.046746319868033)*sj3*sj5*x1367))+((x1375*x1381))+(((0.064677809339343)*x1368))+((r11*x1366*x1370))+(((0.00924927184554663)*x1389))+(((-1.0)*x1378*x1379))+((r21*x1365))+((r12*x1388))+(((0.00924927184554663)*cj4*x1368))+((x1378*x1384)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1392=((0.433001339129174)*sj1);
IkReal x1393=(cj5*r21);
IkReal x1394=(r10*sj5);
IkReal x1395=((0.433001339129174)*cj1);
IkReal x1396=(r20*sj5);
IkReal x1397=(cj5*r11);
IkReal x1398=((0.866036765876652)*sj4);
IkReal x1399=(cj1*sj5);
IkReal x1400=(cj5*r20);
IkReal x1401=((0.249980320149909)*r22);
IkReal x1402=(sj1*sj5);
IkReal x1403=((0.249980320149909)*r12);
IkReal x1404=(cj5*r10);
IkReal x1405=((0.750019679850091)*cj4*r12);
IkReal x1406=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*x1392*x1393))+(((-1.0)*x1392*x1396))+(((-1.0)*r11*x1398*x1399))+((cj4*x1392*x1393))+((cj4*x1392*x1396))+(((-1.0)*r21*x1398*x1402))+(((-1.0)*x1394*x1395))+((sj1*x1398*x1400))+(((-1.0)*x1395*x1397))+((sj1*x1406))+((sj1*x1401))+((cj4*x1395*x1397))+((cj4*x1394*x1395))+((cj1*x1405))+((cj1*x1403))+((cj1*x1398*x1404)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x1403))+(((-1.0)*sj1*x1405))+((cj4*x1393*x1395))+(((-1.0)*sj1*x1398*x1404))+((r11*x1398*x1402))+(((-1.0)*x1393*x1395))+(((-1.0)*x1395*x1396))+((cj4*x1395*x1396))+(((-1.0)*cj4*x1392*x1397))+(((-1.0)*cj4*x1392*x1394))+((cj1*x1406))+((cj1*x1401))+((x1392*x1394))+((x1392*x1397))+((cj1*x1398*x1400))+(((-1.0)*r21*x1398*x1399)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x1392*x1393))+(((-1.0)*x1392*x1396))+(((-1.0)*r11*x1398*x1399))+((cj4*x1392*x1393))+((cj4*x1392*x1396))+(((-1.0)*r21*x1398*x1402))+(((-1.0)*x1394*x1395))+((sj1*x1398*x1400))+(((-1.0)*x1395*x1397))+((sj1*x1406))+((sj1*x1401))+((cj4*x1395*x1397))+((cj4*x1394*x1395))+((cj1*x1405))+((cj1*x1403))+((cj1*x1398*x1404))))+IKsqr(((((-1.0)*sj1*x1403))+(((-1.0)*sj1*x1405))+((cj4*x1393*x1395))+(((-1.0)*sj1*x1398*x1404))+((r11*x1398*x1402))+(((-1.0)*x1393*x1395))+(((-1.0)*x1395*x1396))+((cj4*x1395*x1396))+(((-1.0)*cj4*x1392*x1397))+(((-1.0)*cj4*x1392*x1394))+((cj1*x1406))+((cj1*x1401))+((x1392*x1394))+((x1392*x1397))+((cj1*x1398*x1400))+(((-1.0)*r21*x1398*x1399))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x1392*x1393))+(((-1.0)*x1392*x1396))+(((-1.0)*r11*x1398*x1399))+((cj4*x1392*x1393))+((cj4*x1392*x1396))+(((-1.0)*r21*x1398*x1402))+(((-1.0)*x1394*x1395))+((sj1*x1398*x1400))+(((-1.0)*x1395*x1397))+((sj1*x1406))+((sj1*x1401))+((cj4*x1395*x1397))+((cj4*x1394*x1395))+((cj1*x1405))+((cj1*x1403))+((cj1*x1398*x1404))), ((((-1.0)*sj1*x1403))+(((-1.0)*sj1*x1405))+((cj4*x1393*x1395))+(((-1.0)*sj1*x1398*x1404))+((r11*x1398*x1402))+(((-1.0)*x1393*x1395))+(((-1.0)*x1395*x1396))+((cj4*x1395*x1396))+(((-1.0)*cj4*x1392*x1397))+(((-1.0)*cj4*x1392*x1394))+((cj1*x1406))+((cj1*x1401))+((x1392*x1394))+((x1392*x1397))+((cj1*x1398*x1400))+(((-1.0)*r21*x1398*x1399))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1407=IKsin(j2);
IkReal x1408=IKcos(j2);
IkReal x1409=(cj4*sj5);
IkReal x1410=((0.433001339129174)*r20);
IkReal x1411=((0.064677809339343)*cj5);
IkReal x1412=(r10*sj3);
IkReal x1413=(cj3*r21);
IkReal x1414=(r20*sj5);
IkReal x1415=((0.750019679850091)*sj3);
IkReal x1416=(r10*sj5);
IkReal x1417=((0.0160210495477794)*r22);
IkReal x1418=((0.499980319762597)*sj4);
IkReal x1419=(sj3*sj5);
IkReal x1420=(cj5*r21);
IkReal x1421=(cj4*r12);
IkReal x1422=((0.433001339129174)*sj3);
IkReal x1423=((0.866036765876652)*sj4);
IkReal x1424=(cj5*r10);
IkReal x1425=(cj5*r11);
IkReal x1426=(cj5*r20);
IkReal x1427=((0.433001339129174)*cj4);
IkReal x1428=(cj4*r22);
IkReal x1429=((0.00924927184554663)*cj4);
IkReal x1430=((0.0184992718312161)*sj4);
IkReal x1431=(cj1*x1408);
IkReal x1432=(sj1*x1407);
IkReal x1433=(cj1*x1407);
IkReal x1434=(sj1*x1408);
IkReal x1435=((0.249980320149909)*cj4*sj3);
IkReal x1436=(sj5*x1430);
IkReal x1437=((1.0)*cj3*cj4*cj5);
IkReal x1438=(x1432+x1431);
evalcond[0]=(((sj5*x1410))+(((-0.249980320149909)*r22))+(((-0.750019679850091)*x1428))+(((-1.0)*x1423*x1426))+(((-1.0)*x1420*x1427))+((r21*sj5*x1423))+x1438+(((0.433001339129174)*x1420))+(((-1.0)*x1409*x1410)));
evalcond[1]=((((-1.0)*x1434))+((r11*sj5*x1423))+(((-0.249980320149909)*r12))+(((-1.0)*x1425*x1427))+(((-0.750019679850091)*x1421))+(((-1.0)*x1423*x1424))+(((-0.433001339129174)*r10*x1409))+x1433+(((0.433001339129174)*x1425))+(((0.433001339129174)*x1416)));
evalcond[2]=(((r21*x1411))+(((0.064677809339343)*x1414))+((x1420*x1429))+(((-1.0)*x1417))+((cj4*x1417))+(((0.00924927184554663)*r20*x1409))+(((-1.0)*pz))+(((0.29)*cj1))+(((-0.187)*x1432))+(((-0.187)*x1431))+((x1426*x1430))+(((-1.0)*r21*x1436)));
evalcond[3]=(((x1425*x1429))+(((-0.0160210495477794)*r12))+(((0.064677809339343)*x1416))+(((-1.0)*r11*x1436))+(((-0.29)*sj1))+(((0.187)*x1434))+((x1424*x1430))+(((-1.0)*py))+((r11*x1411))+(((-0.187)*x1433))+(((0.00924927184554663)*r10*x1409))+(((0.0160210495477794)*x1421)));
evalcond[4]=(((cj3*x1418*x1425))+((x1415*x1425))+(((-1.0)*cj3*cj4*x1424))+((x1425*x1435))+(((-1.0)*r12*x1422))+((cj3*r11*x1409))+(((-1.0)*r11*x1418*x1419))+((cj3*x1416*x1418))+((cj3*r12*x1423))+x1438+((cj5*x1412*x1418))+(((0.249980320149909)*x1409*x1412))+((x1421*x1422))+(((0.750019679850091)*sj5*x1412)));
evalcond[5]=(((x1415*x1420))+(((-1.0)*x1433))+((sj3*x1418*x1426))+((x1422*x1428))+((cj3*x1414*x1418))+(((-1.0)*cj3*cj4*x1426))+(((-1.0)*r21*x1418*x1419))+(((0.249980320149909)*r20*sj3*x1409))+((x1420*x1435))+((cj3*r22*x1423))+x1434+(((-1.0)*r22*x1422))+((x1409*x1413))+((cj5*x1413*x1418))+((x1414*x1415)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1439=((0.502238137091374)*cj5);
IkReal x1440=(r20*sj5);
IkReal x1441=((0.494653804785234)*sj4);
IkReal x1442=((0.428388381324785)*cj4);
IkReal x1443=((0.247317167488307)*cj4);
IkReal x1444=(r10*sj5);
if( IKabs(((((-0.502238137091374)*x1444))+((r12*x1442))+(((-1.0)*r11*x1439))+((x1443*x1444))+(((0.216439204882112)*r12))+((cj5*r10*x1441))+((cj5*r11*x1443))+(((3.44827586206897)*py))+(((-1.0)*r11*sj5*x1441)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.502238137091374)*x1440))+((r22*x1442))+((cj5*r20*x1441))+(((-1.0)*r21*sj5*x1441))+((x1440*x1443))+(((0.216439204882112)*r22))+((cj5*r21*x1443))+(((3.44827586206897)*pz))+(((-1.0)*r21*x1439)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.502238137091374)*x1444))+((r12*x1442))+(((-1.0)*r11*x1439))+((x1443*x1444))+(((0.216439204882112)*r12))+((cj5*r10*x1441))+((cj5*r11*x1443))+(((3.44827586206897)*py))+(((-1.0)*r11*sj5*x1441))))+IKsqr(((((-0.502238137091374)*x1440))+((r22*x1442))+((cj5*r20*x1441))+(((-1.0)*r21*sj5*x1441))+((x1440*x1443))+(((0.216439204882112)*r22))+((cj5*r21*x1443))+(((3.44827586206897)*pz))+(((-1.0)*r21*x1439))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-0.502238137091374)*x1444))+((r12*x1442))+(((-1.0)*r11*x1439))+((x1443*x1444))+(((0.216439204882112)*r12))+((cj5*r10*x1441))+((cj5*r11*x1443))+(((3.44827586206897)*py))+(((-1.0)*r11*sj5*x1441))), ((((-0.502238137091374)*x1440))+((r22*x1442))+((cj5*r20*x1441))+(((-1.0)*r21*sj5*x1441))+((x1440*x1443))+(((0.216439204882112)*r22))+((cj5*r21*x1443))+(((3.44827586206897)*pz))+(((-1.0)*r21*x1439))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1445=((0.064677809339343)*cj5);
IkReal x1446=(cj5*r10);
IkReal x1447=(r20*sj5);
IkReal x1448=((0.0160210495477794)*r22);
IkReal x1449=((0.140253680131967)*sj3);
IkReal x1450=(cj5*r21);
IkReal x1451=(cj5*r11);
IkReal x1452=(r21*sj5);
IkReal x1453=((0.00924927184554663)*cj4);
IkReal x1454=((0.0717219785716089)*cj4);
IkReal x1455=((0.0934963197956057)*sj4);
IkReal x1456=(cj5*r20);
IkReal x1457=(cj4*r12);
IkReal x1458=(r11*sj5);
IkReal x1459=((0.0184992718312161)*sj4);
IkReal x1460=(r10*sj5);
IkReal x1461=((0.0809712504171555)*sj3);
IkReal x1462=(cj4*r22);
IkReal x1463=((0.143449603387718)*sj4);
IkReal x1464=((0.29)*(IKcos(j1)));
IkReal x1465=((0.29)*(IKsin(j1)));
IkReal x1466=((0.187)*cj3*cj4);
IkReal x1467=(cj4*x1460);
IkReal x1468=((0.161948875218934)*cj3*sj4);
IkReal x1469=((0.046746319868033)*cj4*sj3);
IkReal x1470=(sj5*x1469);
evalcond[0]=((((0.124232630584188)*x1457))+(((-1.0)*x1458*x1463))+(((-1.0)*x1465))+(((0.0627673694158124)*r12))+((x1446*x1463))+((x1454*x1460))+(((-0.145649059756499)*x1460))+py+(((-0.145649059756499)*x1451))+((x1451*x1454)));
evalcond[1]=((((-0.145649059756499)*x1447))+((x1447*x1454))+(((-1.0)*x1464))+((x1450*x1454))+(((0.0627673694158124)*r22))+((x1456*x1463))+pz+(((-0.145649059756499)*x1450))+(((0.124232630584188)*x1462))+(((-1.0)*x1452*x1463)));
evalcond[2]=(((x1451*x1469))+(((-1.0)*x1447*x1453))+(((-1.0)*r21*x1445))+((cj3*x1455*x1460))+(((-1.0)*x1464))+(((0.046746319868033)*sj3*x1467))+(((-0.064677809339343)*x1447))+(((-1.0)*cj4*x1448))+((x1458*x1466))+(((-1.0)*x1446*x1466))+((sj3*x1446*x1455))+((r12*x1468))+((cj3*x1451*x1455))+pz+x1448+((x1457*x1461))+((x1449*x1460))+((x1449*x1451))+(((-1.0)*r12*x1461))+(((-1.0)*x1456*x1459))+((x1452*x1459))+(((-1.0)*sj3*x1455*x1458))+(((-1.0)*x1450*x1453)));
evalcond[3]=((((0.064677809339343)*x1460))+((x1452*x1466))+((x1453*x1460))+(((-0.0160210495477794)*r12))+((x1446*x1459))+(((-1.0)*x1458*x1459))+((r11*x1445))+(((0.0160210495477794)*x1457))+((x1447*x1469))+(((-1.0)*x1456*x1466))+((x1450*x1469))+(((-1.0)*r22*x1461))+(((-1.0)*sj3*x1452*x1455))+((x1461*x1462))+((cj3*x1447*x1455))+(((-1.0)*py))+((cj3*x1450*x1455))+((r22*x1468))+x1465+((x1447*x1449))+((sj3*x1455*x1456))+((x1449*x1450))+((x1451*x1453)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1471=((0.433001339129174)*sj1);
IkReal x1472=(cj5*r21);
IkReal x1473=(r10*sj5);
IkReal x1474=((0.433001339129174)*cj1);
IkReal x1475=(r20*sj5);
IkReal x1476=(cj5*r11);
IkReal x1477=((0.866036765876652)*sj4);
IkReal x1478=(cj1*sj5);
IkReal x1479=(cj5*r20);
IkReal x1480=((0.249980320149909)*r22);
IkReal x1481=(sj1*sj5);
IkReal x1482=((0.249980320149909)*r12);
IkReal x1483=(cj5*r10);
IkReal x1484=((0.750019679850091)*cj4*r12);
IkReal x1485=((0.750019679850091)*cj4*r22);
if( IKabs((((cj4*x1471*x1472))+((cj4*x1471*x1475))+(((-1.0)*x1471*x1475))+(((-1.0)*x1471*x1472))+((x1474*x1476))+(((-1.0)*cj4*x1473*x1474))+((sj1*x1485))+((sj1*x1480))+(((-1.0)*cj1*x1482))+(((-1.0)*cj1*x1484))+((r11*x1477*x1478))+((sj1*x1477*x1479))+((x1473*x1474))+(((-1.0)*cj4*x1474*x1476))+(((-1.0)*cj1*x1477*x1483))+(((-1.0)*r21*x1477*x1481)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x1477*x1481))+((cj4*x1471*x1473))+((cj4*x1471*x1476))+(((-1.0)*x1471*x1476))+(((-1.0)*x1471*x1473))+((sj1*x1484))+((sj1*x1482))+((cj1*x1480))+((cj1*x1485))+((cj4*x1474*x1475))+((cj1*x1477*x1479))+(((-1.0)*x1474*x1475))+((cj4*x1472*x1474))+(((-1.0)*r21*x1477*x1478))+((sj1*x1477*x1483))+(((-1.0)*x1472*x1474)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x1471*x1472))+((cj4*x1471*x1475))+(((-1.0)*x1471*x1475))+(((-1.0)*x1471*x1472))+((x1474*x1476))+(((-1.0)*cj4*x1473*x1474))+((sj1*x1485))+((sj1*x1480))+(((-1.0)*cj1*x1482))+(((-1.0)*cj1*x1484))+((r11*x1477*x1478))+((sj1*x1477*x1479))+((x1473*x1474))+(((-1.0)*cj4*x1474*x1476))+(((-1.0)*cj1*x1477*x1483))+(((-1.0)*r21*x1477*x1481))))+IKsqr(((((-1.0)*r11*x1477*x1481))+((cj4*x1471*x1473))+((cj4*x1471*x1476))+(((-1.0)*x1471*x1476))+(((-1.0)*x1471*x1473))+((sj1*x1484))+((sj1*x1482))+((cj1*x1480))+((cj1*x1485))+((cj4*x1474*x1475))+((cj1*x1477*x1479))+(((-1.0)*x1474*x1475))+((cj4*x1472*x1474))+(((-1.0)*r21*x1477*x1478))+((sj1*x1477*x1483))+(((-1.0)*x1472*x1474))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x1471*x1472))+((cj4*x1471*x1475))+(((-1.0)*x1471*x1475))+(((-1.0)*x1471*x1472))+((x1474*x1476))+(((-1.0)*cj4*x1473*x1474))+((sj1*x1485))+((sj1*x1480))+(((-1.0)*cj1*x1482))+(((-1.0)*cj1*x1484))+((r11*x1477*x1478))+((sj1*x1477*x1479))+((x1473*x1474))+(((-1.0)*cj4*x1474*x1476))+(((-1.0)*cj1*x1477*x1483))+(((-1.0)*r21*x1477*x1481))), ((((-1.0)*r11*x1477*x1481))+((cj4*x1471*x1473))+((cj4*x1471*x1476))+(((-1.0)*x1471*x1476))+(((-1.0)*x1471*x1473))+((sj1*x1484))+((sj1*x1482))+((cj1*x1480))+((cj1*x1485))+((cj4*x1474*x1475))+((cj1*x1477*x1479))+(((-1.0)*x1474*x1475))+((cj4*x1472*x1474))+(((-1.0)*r21*x1477*x1478))+((sj1*x1477*x1483))+(((-1.0)*x1472*x1474))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1486=IKcos(j2);
IkReal x1487=IKsin(j2);
IkReal x1488=(cj4*sj5);
IkReal x1489=((0.433001339129174)*r20);
IkReal x1490=((0.064677809339343)*cj5);
IkReal x1491=(r10*sj3);
IkReal x1492=(cj3*sj4);
IkReal x1493=((0.433001339129174)*r10);
IkReal x1494=((0.0160210495477794)*r22);
IkReal x1495=(r20*sj5);
IkReal x1496=(r11*sj5);
IkReal x1497=(cj5*r20);
IkReal x1498=(cj5*r21);
IkReal x1499=((0.866036765876652)*sj4);
IkReal x1500=(cj5*r10);
IkReal x1501=(cj5*r11);
IkReal x1502=((0.750019679850091)*sj3);
IkReal x1503=(cj4*sj3);
IkReal x1504=((0.750019679850091)*cj4);
IkReal x1505=((0.433001339129174)*cj4);
IkReal x1506=((0.433001339129174)*r22);
IkReal x1507=((0.0160210495477794)*r12);
IkReal x1508=((0.0184992718312161)*sj4);
IkReal x1509=(r21*sj5);
IkReal x1510=(r10*sj5);
IkReal x1511=((0.00924927184554663)*cj4);
IkReal x1512=(sj1*x1486);
IkReal x1513=(cj1*x1486);
IkReal x1514=((0.433001339129174)*r12*sj3);
IkReal x1515=((0.499980319762597)*sj3*sj4);
IkReal x1516=(sj1*x1487);
IkReal x1517=(cj1*x1487);
IkReal x1518=((1.0)*x1517);
IkReal x1519=((1.0)*cj3*cj4*cj5);
evalcond[0]=(((x1499*x1509))+(((0.433001339129174)*x1498))+(((-1.0)*x1498*x1505))+(((-1.0)*r22*x1504))+(((-0.249980320149909)*r22))+(((-1.0)*x1497*x1499))+x1516+x1513+(((-1.0)*x1488*x1489))+((sj5*x1489)));
evalcond[1]=(((sj5*x1493))+(((-1.0)*x1499*x1500))+(((-1.0)*x1518))+(((-0.249980320149909)*r12))+(((-1.0)*x1501*x1505))+(((0.433001339129174)*x1501))+((x1496*x1499))+x1512+(((-1.0)*x1488*x1493))+(((-1.0)*r12*x1504)));
evalcond[2]=(((x1498*x1511))+(((-1.0)*x1494))+(((0.00924927184554663)*r20*x1488))+(((0.064677809339343)*x1495))+((r21*x1490))+(((-1.0)*pz))+(((0.29)*cj1))+((x1497*x1508))+(((-0.187)*x1516))+(((-0.187)*x1513))+((cj4*x1494))+(((-1.0)*x1508*x1509)));
evalcond[3]=((((-1.0)*x1507))+(((0.29)*sj1))+((x1501*x1511))+((r11*x1490))+(((-1.0)*py))+((cj4*x1507))+((x1500*x1508))+(((-0.187)*x1512))+(((0.064677809339343)*x1510))+(((0.00924927184554663)*r10*x1488))+(((-1.0)*x1496*x1508))+(((0.187)*x1517)));
evalcond[4]=((((-1.0)*sj3*x1506))+(((-1.0)*cj3*cj4*x1497))+(((-1.0)*x1518))+((x1498*x1502))+(((0.866036765876652)*r22*x1492))+((x1497*x1515))+x1512+((cj3*r21*x1488))+((x1495*x1502))+((x1503*x1506))+(((-1.0)*x1509*x1515))+(((0.249980320149909)*r20*sj3*x1488))+(((0.249980320149909)*x1498*x1503))+(((0.499980319762597)*x1492*x1498))+(((0.499980319762597)*x1492*x1495)));
evalcond[5]=((((-1.0)*x1514))+(((-1.0)*x1513))+(((-1.0)*x1516))+(((0.249980320149909)*x1501*x1503))+(((0.249980320149909)*x1488*x1491))+((x1501*x1502))+(((-1.0)*cj3*cj4*x1500))+(((0.866036765876652)*r12*x1492))+(((0.750019679850091)*sj5*x1491))+(((0.499980319762597)*cj5*sj4*x1491))+((cj3*r11*x1488))+(((-1.0)*x1496*x1515))+(((0.433001339129174)*r12*x1503))+(((0.499980319762597)*x1492*x1510))+(((0.499980319762597)*x1492*x1501)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1520=((0.502238137091374)*cj5);
IkReal x1521=((0.428388381324785)*cj4);
IkReal x1522=((0.494653804785234)*sj4);
IkReal x1523=(r00*sj5);
IkReal x1524=((0.247317167488307)*cj4);
IkReal x1525=(r20*sj5);
if( IKabs((((r01*sj5*x1522))+(((-3.44827586206897)*px))+(((-1.0)*cj5*r01*x1524))+(((-0.216439204882112)*r02))+((r01*x1520))+(((-1.0)*cj5*r00*x1522))+(((-1.0)*r02*x1521))+(((-1.0)*x1523*x1524))+(((0.502238137091374)*x1523)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x1524*x1525))+((cj5*r21*x1524))+((cj5*r20*x1522))+(((-1.0)*r21*sj5*x1522))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((r22*x1521))+(((-1.0)*r21*x1520))+(((-0.502238137091374)*x1525)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*sj5*x1522))+(((-3.44827586206897)*px))+(((-1.0)*cj5*r01*x1524))+(((-0.216439204882112)*r02))+((r01*x1520))+(((-1.0)*cj5*r00*x1522))+(((-1.0)*r02*x1521))+(((-1.0)*x1523*x1524))+(((0.502238137091374)*x1523))))+IKsqr((((x1524*x1525))+((cj5*r21*x1524))+((cj5*r20*x1522))+(((-1.0)*r21*sj5*x1522))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((r22*x1521))+(((-1.0)*r21*x1520))+(((-0.502238137091374)*x1525))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r01*sj5*x1522))+(((-3.44827586206897)*px))+(((-1.0)*cj5*r01*x1524))+(((-0.216439204882112)*r02))+((r01*x1520))+(((-1.0)*cj5*r00*x1522))+(((-1.0)*r02*x1521))+(((-1.0)*x1523*x1524))+(((0.502238137091374)*x1523))), (((x1524*x1525))+((cj5*r21*x1524))+((cj5*r20*x1522))+(((-1.0)*r21*sj5*x1522))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((r22*x1521))+(((-1.0)*r21*x1520))+(((-0.502238137091374)*x1525))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1526=((1.0)*px);
IkReal x1527=((0.0809712504171555)*sj3);
IkReal x1528=(r20*sj5);
IkReal x1529=(cj5*sj3);
IkReal x1530=((0.0934963197956057)*sj4);
IkReal x1531=(cj5*r21);
IkReal x1532=((0.140253680131967)*sj3);
IkReal x1533=(r00*sj5);
IkReal x1534=(r21*sj5);
IkReal x1535=((0.00924927184554663)*cj4);
IkReal x1536=((0.0717219785716089)*cj4);
IkReal x1537=(cj5*r20);
IkReal x1538=((0.0184992718312161)*sj4);
IkReal x1539=(cj4*r02);
IkReal x1540=(cj5*r01);
IkReal x1541=(cj4*r22);
IkReal x1542=((0.143449603387718)*sj4);
IkReal x1543=(r01*sj5);
IkReal x1544=((0.29)*(IKsin(j1)));
IkReal x1545=((0.29)*(IKcos(j1)));
IkReal x1546=(cj5*r00*sj4);
IkReal x1547=((0.046746319868033)*cj4*sj3);
IkReal x1548=((0.187)*cj3*cj4);
IkReal x1549=((0.161948875218934)*cj3*sj4);
IkReal x1550=(sj4*x1543);
IkReal x1551=(x1544+x1526);
evalcond[0]=(((x1528*x1536))+((x1537*x1542))+((x1531*x1536))+(((0.0627673694158124)*r22))+pz+(((-1.0)*x1534*x1542))+(((0.124232630584188)*x1541))+(((-0.145649059756499)*x1531))+(((-1.0)*x1545))+(((-0.145649059756499)*x1528)));
evalcond[1]=((((0.145649059756499)*x1540))+(((-1.0)*x1536*x1540))+(((-1.0)*x1533*x1536))+(((-1.0)*cj5*r00*x1542))+(((-1.0)*x1551))+((x1542*x1543))+(((-0.124232630584188)*x1539))+(((-0.0627673694158124)*r02))+(((0.145649059756499)*x1533)));
evalcond[2]=((((-0.0160210495477794)*r02))+(((-1.0)*r20*x1529*x1530))+((x1537*x1548))+((cj5*r00*x1538))+(((-1.0)*r22*x1549))+(((-1.0)*cj3*x1530*x1531))+(((0.064677809339343)*x1533))+(((-0.046746319868033)*cj4*r21*x1529))+(((0.064677809339343)*x1540))+(((-1.0)*x1534*x1548))+(((-1.0)*x1528*x1532))+((r22*x1527))+(((-1.0)*x1527*x1541))+((sj3*x1530*x1534))+(((-1.0)*cj3*x1528*x1530))+((x1533*x1535))+(((-1.0)*x1551))+(((-0.140253680131967)*r21*x1529))+((x1535*x1540))+(((0.0160210495477794)*x1539))+(((-1.0)*x1538*x1543))+(((-1.0)*x1528*x1547)));
evalcond[3]=(((cj3*x1530*x1533))+(((-1.0)*sj3*x1530*x1543))+((cj3*x1530*x1540))+((x1528*x1535))+((x1531*x1535))+((x1533*x1547))+((x1532*x1533))+((x1537*x1538))+(((-1.0)*r02*x1527))+(((0.046746319868033)*cj4*r01*x1529))+(((0.064677809339343)*x1528))+((x1527*x1539))+(((-1.0)*pz))+(((0.064677809339343)*x1531))+x1545+(((0.140253680131967)*r01*x1529))+((r02*x1549))+((x1543*x1548))+(((-1.0)*cj5*r00*x1548))+(((-1.0)*x1534*x1538))+(((0.0160210495477794)*x1541))+((r00*x1529*x1530))+(((-0.0160210495477794)*r22)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1552=((0.249980320149909)*cj1);
IkReal x1553=((0.433001339129174)*sj1);
IkReal x1554=(cj5*r21);
IkReal x1555=(r20*sj5);
IkReal x1556=((0.433001339129174)*cj1);
IkReal x1557=(r00*sj5);
IkReal x1558=((0.249980320149909)*sj1);
IkReal x1559=(cj5*r01);
IkReal x1560=((0.866036765876652)*cj5*sj4);
IkReal x1561=(cj4*x1559);
IkReal x1562=((0.866036765876652)*sj4*sj5);
IkReal x1563=((0.750019679850091)*cj4*r02);
IkReal x1564=((0.750019679850091)*cj4*r22);
if( IKabs((((cj4*x1553*x1554))+((cj4*x1553*x1555))+((x1556*x1561))+((cj4*x1556*x1557))+((cj1*x1563))+(((-1.0)*r21*sj1*x1562))+(((-1.0)*x1553*x1554))+(((-1.0)*x1553*x1555))+((sj1*x1564))+((cj1*r00*x1560))+(((-1.0)*cj1*r01*x1562))+((r22*x1558))+((r20*sj1*x1560))+((r02*x1552))+(((-1.0)*x1556*x1559))+(((-1.0)*x1556*x1557)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*r21*x1562))+((cj1*r20*x1560))+(((-1.0)*sj1*x1563))+((x1553*x1557))+((x1553*x1559))+((cj1*x1564))+(((-1.0)*r00*sj1*x1560))+(((-1.0)*r02*x1558))+(((-1.0)*x1555*x1556))+((r22*x1552))+(((-1.0)*x1553*x1561))+((cj4*x1555*x1556))+((cj4*x1554*x1556))+(((-1.0)*x1554*x1556))+((r01*sj1*x1562))+(((-1.0)*cj4*x1553*x1557)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x1553*x1554))+((cj4*x1553*x1555))+((x1556*x1561))+((cj4*x1556*x1557))+((cj1*x1563))+(((-1.0)*r21*sj1*x1562))+(((-1.0)*x1553*x1554))+(((-1.0)*x1553*x1555))+((sj1*x1564))+((cj1*r00*x1560))+(((-1.0)*cj1*r01*x1562))+((r22*x1558))+((r20*sj1*x1560))+((r02*x1552))+(((-1.0)*x1556*x1559))+(((-1.0)*x1556*x1557))))+IKsqr(((((-1.0)*cj1*r21*x1562))+((cj1*r20*x1560))+(((-1.0)*sj1*x1563))+((x1553*x1557))+((x1553*x1559))+((cj1*x1564))+(((-1.0)*r00*sj1*x1560))+(((-1.0)*r02*x1558))+(((-1.0)*x1555*x1556))+((r22*x1552))+(((-1.0)*x1553*x1561))+((cj4*x1555*x1556))+((cj4*x1554*x1556))+(((-1.0)*x1554*x1556))+((r01*sj1*x1562))+(((-1.0)*cj4*x1553*x1557))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x1553*x1554))+((cj4*x1553*x1555))+((x1556*x1561))+((cj4*x1556*x1557))+((cj1*x1563))+(((-1.0)*r21*sj1*x1562))+(((-1.0)*x1553*x1554))+(((-1.0)*x1553*x1555))+((sj1*x1564))+((cj1*r00*x1560))+(((-1.0)*cj1*r01*x1562))+((r22*x1558))+((r20*sj1*x1560))+((r02*x1552))+(((-1.0)*x1556*x1559))+(((-1.0)*x1556*x1557))), ((((-1.0)*cj1*r21*x1562))+((cj1*r20*x1560))+(((-1.0)*sj1*x1563))+((x1553*x1557))+((x1553*x1559))+((cj1*x1564))+(((-1.0)*r00*sj1*x1560))+(((-1.0)*r02*x1558))+(((-1.0)*x1555*x1556))+((r22*x1552))+(((-1.0)*x1553*x1561))+((cj4*x1555*x1556))+((cj4*x1554*x1556))+(((-1.0)*x1554*x1556))+((r01*sj1*x1562))+(((-1.0)*cj4*x1553*x1557))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1565=IKsin(j2);
IkReal x1566=IKcos(j2);
IkReal x1567=(cj4*r02);
IkReal x1568=(cj4*sj5);
IkReal x1569=((0.433001339129174)*r20);
IkReal x1570=(cj5*r21);
IkReal x1571=(cj4*cj5);
IkReal x1572=((0.249980320149909)*sj3);
IkReal x1573=((1.0)*cj3);
IkReal x1574=(r00*sj5);
IkReal x1575=((0.750019679850091)*sj3);
IkReal x1576=((0.0160210495477794)*r22);
IkReal x1577=(cj5*r01);
IkReal x1578=((0.499980319762597)*sj4);
IkReal x1579=((0.866036765876652)*sj4);
IkReal x1580=(cj5*r20);
IkReal x1581=(r01*sj5);
IkReal x1582=((0.433001339129174)*sj3);
IkReal x1583=((0.0184992718312161)*sj4);
IkReal x1584=(r21*sj5);
IkReal x1585=(r20*sj5);
IkReal x1586=(cj4*r22);
IkReal x1587=(cj1*x1566);
IkReal x1588=(sj1*x1565);
IkReal x1589=(cj5*r00*sj4);
IkReal x1590=(cj1*x1565);
IkReal x1591=(r20*x1578);
IkReal x1592=(sj1*x1566);
IkReal x1593=(x1588+x1587);
evalcond[0]=((((-0.249980320149909)*r22))+(((-0.433001339129174)*cj4*x1570))+(((-1.0)*x1568*x1569))+(((0.433001339129174)*x1570))+x1593+(((-1.0)*x1579*x1580))+(((-0.750019679850091)*x1586))+((x1579*x1584))+((sj5*x1569)));
evalcond[1]=((((-0.249980320149909)*r02))+(((0.433001339129174)*x1577))+(((0.433001339129174)*x1574))+(((-0.433001339129174)*r00*x1568))+x1590+(((-0.750019679850091)*x1567))+(((-0.433001339129174)*r01*x1571))+(((-1.0)*cj5*r00*x1579))+((x1579*x1581))+(((-1.0)*x1592)));
evalcond[2]=(((cj4*x1576))+(((-1.0)*pz))+(((0.00924927184554663)*cj4*x1570))+(((0.29)*cj1))+((x1580*x1583))+(((0.064677809339343)*x1570))+(((0.064677809339343)*x1585))+(((-0.187)*x1587))+(((-0.187)*x1588))+(((-1.0)*x1576))+(((0.00924927184554663)*r20*x1568))+(((-1.0)*x1583*x1584)));
evalcond[3]=(((cj5*r00*x1583))+(((-0.0160210495477794)*r02))+(((-0.29)*sj1))+(((0.187)*x1592))+(((-1.0)*px))+(((0.064677809339343)*x1574))+(((0.064677809339343)*x1577))+(((-0.187)*x1590))+(((0.00924927184554663)*r00*x1568))+(((0.00924927184554663)*r01*x1571))+(((-1.0)*x1581*x1583))+(((0.0160210495477794)*x1567)));
evalcond[4]=(((cj3*x1574*x1578))+((r00*x1568*x1572))+((x1567*x1582))+((cj5*r00*sj3*x1578))+(((-1.0)*r02*x1582))+((x1575*x1577))+x1593+(((-1.0)*r00*x1571*x1573))+((cj3*r01*x1568))+(((-1.0)*sj3*x1578*x1581))+((r01*x1571*x1572))+((x1574*x1575))+((cj3*x1577*x1578))+((cj3*r02*x1579)));
evalcond[5]=(((r20*x1568*x1572))+((cj3*r21*x1568))+(((-1.0)*r20*x1571*x1573))+((x1570*x1575))+((x1575*x1585))+((x1582*x1586))+x1592+((cj4*x1570*x1572))+(((-1.0)*r22*x1582))+((cj3*x1570*x1578))+(((-1.0)*sj3*x1578*x1584))+((sj3*x1578*x1580))+((cj3*x1578*x1585))+(((-1.0)*x1590))+((cj3*r22*x1579)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1594=((0.502238137091374)*cj5);
IkReal x1595=((0.428388381324785)*cj4);
IkReal x1596=((0.247317167488307)*cj4);
IkReal x1597=(r20*sj5);
IkReal x1598=(r00*sj5);
IkReal x1599=((0.494653804785234)*cj5*sj4);
IkReal x1600=((0.494653804785234)*sj4*sj5);
if( IKabs((((x1596*x1598))+((r00*x1599))+((cj5*r01*x1596))+(((0.216439204882112)*r02))+(((-1.0)*r01*x1594))+(((3.44827586206897)*px))+(((-1.0)*r01*x1600))+((r02*x1595))+(((-0.502238137091374)*x1598)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x1596*x1597))+((r20*x1599))+(((-1.0)*r21*x1600))+((cj5*r21*x1596))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((r22*x1595))+(((-0.502238137091374)*x1597))+(((-1.0)*r21*x1594)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x1596*x1598))+((r00*x1599))+((cj5*r01*x1596))+(((0.216439204882112)*r02))+(((-1.0)*r01*x1594))+(((3.44827586206897)*px))+(((-1.0)*r01*x1600))+((r02*x1595))+(((-0.502238137091374)*x1598))))+IKsqr((((x1596*x1597))+((r20*x1599))+(((-1.0)*r21*x1600))+((cj5*r21*x1596))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((r22*x1595))+(((-0.502238137091374)*x1597))+(((-1.0)*r21*x1594))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((x1596*x1598))+((r00*x1599))+((cj5*r01*x1596))+(((0.216439204882112)*r02))+(((-1.0)*r01*x1594))+(((3.44827586206897)*px))+(((-1.0)*r01*x1600))+((r02*x1595))+(((-0.502238137091374)*x1598))), (((x1596*x1597))+((r20*x1599))+(((-1.0)*r21*x1600))+((cj5*r21*x1596))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((r22*x1595))+(((-0.502238137091374)*x1597))+(((-1.0)*r21*x1594))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1601=(cj5*r21);
IkReal x1602=((0.0809712504171555)*sj3);
IkReal x1603=((0.0160210495477794)*r02);
IkReal x1604=(r20*sj5);
IkReal x1605=((0.0160210495477794)*r22);
IkReal x1606=((0.140253680131967)*sj3);
IkReal x1607=(r00*sj5);
IkReal x1608=(cj3*sj4);
IkReal x1609=((0.00924927184554663)*cj4);
IkReal x1610=((0.0717219785716089)*cj4);
IkReal x1611=((0.124232630584188)*cj4);
IkReal x1612=((0.0934963197956057)*sj3);
IkReal x1613=(cj5*r01);
IkReal x1614=(sj4*sj5);
IkReal x1615=((0.29)*(IKcos(j1)));
IkReal x1616=((0.29)*(IKsin(j1)));
IkReal x1617=(cj5*r00*sj4);
IkReal x1618=((0.046746319868033)*cj4*sj3);
IkReal x1619=((0.143449603387718)*x1614);
IkReal x1620=(cj5*r20*sj4);
IkReal x1621=((0.187)*cj3*cj4*sj5);
IkReal x1622=((0.187)*cj3*cj4*cj5);
evalcond[0]=((((-0.145649059756499)*x1607))+(((-0.145649059756499)*x1613))+(((0.0627673694158124)*r02))+(((-1.0)*x1616))+(((0.143449603387718)*x1617))+(((-1.0)*r01*x1619))+px+((x1607*x1610))+((x1610*x1613))+((r02*x1611)));
evalcond[1]=((((-0.145649059756499)*x1604))+(((-0.145649059756499)*x1601))+(((-1.0)*r21*x1619))+(((0.143449603387718)*x1620))+(((-1.0)*x1615))+((x1601*x1610))+(((0.0627673694158124)*r22))+pz+((x1604*x1610))+((r22*x1611)));
evalcond[2]=((((0.0184992718312161)*r21*x1614))+((r01*x1621))+(((0.0934963197956057)*x1607*x1608))+x1605+(((-1.0)*cj4*x1605))+(((-1.0)*x1615))+(((-1.0)*r00*x1622))+(((-1.0)*x1601*x1609))+((cj4*r02*x1602))+pz+((x1607*x1618))+(((-0.0184992718312161)*x1620))+(((0.0934963197956057)*x1608*x1613))+(((-0.064677809339343)*x1604))+(((-0.064677809339343)*x1601))+(((-1.0)*r02*x1602))+((x1612*x1617))+(((-1.0)*r01*x1612*x1614))+((x1606*x1613))+((x1606*x1607))+((x1613*x1618))+(((-1.0)*x1604*x1609))+(((0.161948875218934)*r02*x1608)));
evalcond[3]=((((-1.0)*r20*x1622))+(((0.064677809339343)*x1613))+(((0.064677809339343)*x1607))+(((-0.0184992718312161)*r01*x1614))+((r21*x1621))+(((-1.0)*x1603))+x1616+(((-1.0)*r21*x1612*x1614))+(((0.0934963197956057)*x1601*x1608))+((cj4*x1603))+((cj4*r22*x1602))+((x1601*x1618))+((x1601*x1606))+((x1609*x1613))+(((-1.0)*r22*x1602))+(((0.0184992718312161)*x1617))+(((-1.0)*px))+((x1607*x1609))+((x1604*x1618))+(((0.161948875218934)*r22*x1608))+((x1612*x1620))+(((0.0934963197956057)*x1604*x1608))+((x1604*x1606)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1623=((0.249980320149909)*cj1);
IkReal x1624=((0.433001339129174)*sj1);
IkReal x1625=(cj5*r21);
IkReal x1626=(r20*sj5);
IkReal x1627=((0.433001339129174)*cj1);
IkReal x1628=(r00*sj5);
IkReal x1629=((0.249980320149909)*sj1);
IkReal x1630=(cj5*r01);
IkReal x1631=((0.866036765876652)*cj5*sj4);
IkReal x1632=(cj4*x1630);
IkReal x1633=((0.866036765876652)*sj4*sj5);
IkReal x1634=((0.750019679850091)*cj4*r02);
IkReal x1635=((0.750019679850091)*cj4*r22);
if( IKabs((((x1627*x1630))+((x1627*x1628))+(((-1.0)*cj1*r00*x1631))+((sj1*x1635))+((cj4*x1624*x1625))+((cj4*x1624*x1626))+(((-1.0)*cj1*x1634))+(((-1.0)*r02*x1623))+(((-1.0)*cj4*x1627*x1628))+(((-1.0)*x1624*x1626))+(((-1.0)*x1624*x1625))+((r22*x1629))+(((-1.0)*r21*sj1*x1633))+((cj1*r01*x1633))+(((-1.0)*x1627*x1632))+((r20*sj1*x1631)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*r20*x1631))+(((-1.0)*r01*sj1*x1633))+((r02*x1629))+(((-1.0)*cj1*r21*x1633))+((sj1*x1634))+((cj4*x1624*x1628))+(((-1.0)*x1624*x1630))+((x1624*x1632))+((cj1*x1635))+((cj4*x1625*x1627))+(((-1.0)*x1625*x1627))+((cj4*x1626*x1627))+(((-1.0)*x1624*x1628))+((r22*x1623))+((r00*sj1*x1631))+(((-1.0)*x1626*x1627)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x1627*x1630))+((x1627*x1628))+(((-1.0)*cj1*r00*x1631))+((sj1*x1635))+((cj4*x1624*x1625))+((cj4*x1624*x1626))+(((-1.0)*cj1*x1634))+(((-1.0)*r02*x1623))+(((-1.0)*cj4*x1627*x1628))+(((-1.0)*x1624*x1626))+(((-1.0)*x1624*x1625))+((r22*x1629))+(((-1.0)*r21*sj1*x1633))+((cj1*r01*x1633))+(((-1.0)*x1627*x1632))+((r20*sj1*x1631))))+IKsqr((((cj1*r20*x1631))+(((-1.0)*r01*sj1*x1633))+((r02*x1629))+(((-1.0)*cj1*r21*x1633))+((sj1*x1634))+((cj4*x1624*x1628))+(((-1.0)*x1624*x1630))+((x1624*x1632))+((cj1*x1635))+((cj4*x1625*x1627))+(((-1.0)*x1625*x1627))+((cj4*x1626*x1627))+(((-1.0)*x1624*x1628))+((r22*x1623))+((r00*sj1*x1631))+(((-1.0)*x1626*x1627))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x1627*x1630))+((x1627*x1628))+(((-1.0)*cj1*r00*x1631))+((sj1*x1635))+((cj4*x1624*x1625))+((cj4*x1624*x1626))+(((-1.0)*cj1*x1634))+(((-1.0)*r02*x1623))+(((-1.0)*cj4*x1627*x1628))+(((-1.0)*x1624*x1626))+(((-1.0)*x1624*x1625))+((r22*x1629))+(((-1.0)*r21*sj1*x1633))+((cj1*r01*x1633))+(((-1.0)*x1627*x1632))+((r20*sj1*x1631))), (((cj1*r20*x1631))+(((-1.0)*r01*sj1*x1633))+((r02*x1629))+(((-1.0)*cj1*r21*x1633))+((sj1*x1634))+((cj4*x1624*x1628))+(((-1.0)*x1624*x1630))+((x1624*x1632))+((cj1*x1635))+((cj4*x1625*x1627))+(((-1.0)*x1625*x1627))+((cj4*x1626*x1627))+(((-1.0)*x1624*x1628))+((r22*x1623))+((r00*sj1*x1631))+(((-1.0)*x1626*x1627))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1636=IKcos(j2);
IkReal x1637=IKsin(j2);
IkReal x1638=(cj4*r02);
IkReal x1639=(cj4*sj5);
IkReal x1640=((0.433001339129174)*r20);
IkReal x1641=(cj5*r21);
IkReal x1642=(cj4*cj5);
IkReal x1643=(r01*sj3);
IkReal x1644=((1.0)*cj3);
IkReal x1645=(r00*sj5);
IkReal x1646=((0.750019679850091)*sj3);
IkReal x1647=((0.0160210495477794)*r22);
IkReal x1648=(r20*sj5);
IkReal x1649=((0.433001339129174)*sj3);
IkReal x1650=(cj4*r22);
IkReal x1651=(cj5*r01);
IkReal x1652=((0.866036765876652)*sj4);
IkReal x1653=(cj5*r20);
IkReal x1654=(sj4*sj5);
IkReal x1655=((0.499980319762597)*sj3);
IkReal x1656=((0.249980320149909)*sj3);
IkReal x1657=(sj1*x1636);
IkReal x1658=(cj1*x1636);
IkReal x1659=(cj5*r00*sj4);
IkReal x1660=((0.499980319762597)*cj3*sj4);
IkReal x1661=(sj1*x1637);
IkReal x1662=(cj1*x1637);
IkReal x1663=((1.0)*x1662);
evalcond[0]=((((-1.0)*x1652*x1653))+(((-0.249980320149909)*r22))+(((-0.433001339129174)*cj4*x1641))+x1661+x1658+(((-1.0)*x1639*x1640))+((sj5*x1640))+(((0.433001339129174)*x1641))+((r21*sj5*x1652))+(((-0.750019679850091)*x1650)));
evalcond[1]=((((-0.750019679850091)*x1638))+(((-0.249980320149909)*r02))+x1657+(((-1.0)*cj5*r00*x1652))+(((-1.0)*x1663))+(((-0.433001339129174)*r01*x1642))+(((-0.433001339129174)*r00*x1639))+((r01*sj5*x1652))+(((0.433001339129174)*x1645))+(((0.433001339129174)*x1651)));
evalcond[2]=((((0.0184992718312161)*sj4*x1653))+(((0.00924927184554663)*cj4*x1641))+(((-0.0184992718312161)*r21*x1654))+(((-1.0)*x1647))+(((-1.0)*pz))+(((0.29)*cj1))+(((-0.187)*x1658))+(((0.00924927184554663)*r20*x1639))+(((-0.187)*x1661))+(((0.064677809339343)*x1648))+(((0.064677809339343)*x1641))+((cj4*x1647)));
evalcond[3]=((((0.187)*x1662))+(((-0.0160210495477794)*r02))+(((0.0184992718312161)*x1659))+(((0.29)*sj1))+(((-0.0184992718312161)*r01*x1654))+(((-1.0)*px))+(((0.00924927184554663)*r01*x1642))+(((0.0160210495477794)*x1638))+(((0.00924927184554663)*r00*x1639))+(((-0.187)*x1657))+(((0.064677809339343)*x1651))+(((0.064677809339343)*x1645)));
evalcond[4]=((((-1.0)*r21*x1654*x1655))+((x1648*x1660))+(((-1.0)*r22*x1649))+x1657+((x1641*x1646))+((r20*x1639*x1656))+((x1649*x1650))+((x1641*x1660))+(((-1.0)*r20*x1642*x1644))+((x1646*x1648))+((cj3*r22*x1652))+(((-1.0)*x1663))+((cj3*r21*x1639))+((sj4*x1653*x1655))+((cj4*x1641*x1656)));
evalcond[5]=(((cj3*r01*x1639))+((r00*x1639*x1656))+((x1655*x1659))+((x1645*x1646))+(((-1.0)*x1661))+(((-1.0)*x1658))+((x1645*x1660))+(((0.750019679850091)*cj5*x1643))+(((-0.499980319762597)*x1643*x1654))+(((0.249980320149909)*x1642*x1643))+((x1651*x1660))+(((-1.0)*r02*x1649))+((x1638*x1649))+(((-1.0)*r00*x1642*x1644))+((cj3*r02*x1652)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1664=(cj5*r21);
IkReal x1665=(cj0*r01);
IkReal x1666=((0.143449603387718)*sj4);
IkReal x1667=(r20*sj5);
IkReal x1668=(cj0*r02);
IkReal x1669=((0.494653804785234)*sj4);
IkReal x1670=(cj0*r00);
IkReal x1671=((0.247317167488307)*cj4);
IkReal x1672=((0.0717219785716089)*cj4);
CheckValue<IkReal> x1673=IKPowWithIntegerCheck(cj0,-2);
if(!x1673.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x1673.value)*(((((0.145649059756499)*sj5*x1670))+(((-0.124232630584188)*cj4*x1668))+((sj5*x1665*x1666))+(((-1.0)*cj5*x1665*x1672))+(((-0.0627673694158124)*x1668))+(((-1.0)*cj5*x1666*x1670))+(((0.145649059756499)*cj5*x1665))+(((0.007)*cj0*sj0))+(((-1.0)*cj0*px))+(((-1.0)*sj5*x1670*x1672)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x1669))+(((-0.502238137091374)*x1667))+(((-0.502238137091374)*x1664))+((x1667*x1671))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+(((-1.0)*r21*sj5*x1669))+(((3.44827586206897)*pz))+((x1664*x1671)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x1673.value)*(((((0.145649059756499)*sj5*x1670))+(((-0.124232630584188)*cj4*x1668))+((sj5*x1665*x1666))+(((-1.0)*cj5*x1665*x1672))+(((-0.0627673694158124)*x1668))+(((-1.0)*cj5*x1666*x1670))+(((0.145649059756499)*cj5*x1665))+(((0.007)*cj0*sj0))+(((-1.0)*cj0*px))+(((-1.0)*sj5*x1670*x1672))))))+IKsqr((((cj5*r20*x1669))+(((-0.502238137091374)*x1667))+(((-0.502238137091374)*x1664))+((x1667*x1671))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+(((-1.0)*r21*sj5*x1669))+(((3.44827586206897)*pz))+((x1664*x1671))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x1673.value)*(((((0.145649059756499)*sj5*x1670))+(((-0.124232630584188)*cj4*x1668))+((sj5*x1665*x1666))+(((-1.0)*cj5*x1665*x1672))+(((-0.0627673694158124)*x1668))+(((-1.0)*cj5*x1666*x1670))+(((0.145649059756499)*cj5*x1665))+(((0.007)*cj0*sj0))+(((-1.0)*cj0*px))+(((-1.0)*sj5*x1670*x1672))))), (((cj5*r20*x1669))+(((-0.502238137091374)*x1667))+(((-0.502238137091374)*x1664))+((x1667*x1671))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+(((-1.0)*r21*sj5*x1669))+(((3.44827586206897)*pz))+((x1664*x1671))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x1674=IKsin(j1);
IkReal x1675=IKcos(j1);
IkReal x1676=sj0*sj0;
IkReal x1677=cj0*cj0;
IkReal x1678=(cj0*sj5);
IkReal x1679=((0.0184992718312161)*sj4);
IkReal x1680=((0.0809712504171555)*sj3);
IkReal x1681=(cj5*r11);
IkReal x1682=(cj5*r10);
IkReal x1683=((0.145649059756499)*sj5);
IkReal x1684=((0.140253680131967)*sj3);
IkReal x1685=(r00*sj5);
IkReal x1686=((1.0)*sj0);
IkReal x1687=(r10*sj5);
IkReal x1688=((0.00924927184554663)*cj4);
IkReal x1689=((0.0717219785716089)*cj4);
IkReal x1690=(cj5*r21);
IkReal x1691=(cj4*r02);
IkReal x1692=(cj5*r01);
IkReal x1693=(cj4*r12);
IkReal x1694=((0.0809712504171555)*cj4);
IkReal x1695=(cj0*r22);
IkReal x1696=((0.0934963197956057)*cj3);
IkReal x1697=(sj0*sj4);
IkReal x1698=(cj5*r00);
IkReal x1699=((0.007)*cj0);
IkReal x1700=(sj0*sj5);
IkReal x1701=((0.0809712504171555)*sj0);
IkReal x1702=((0.064677809339343)*r20);
IkReal x1703=((1.0)*cj0);
IkReal x1704=((0.0160210495477794)*r02);
IkReal x1705=((0.0160210495477794)*r12);
IkReal x1706=((0.064677809339343)*sj0);
IkReal x1707=((0.0934963197956057)*sj3);
IkReal x1708=(r22*sj0);
IkReal x1709=(r01*sj5);
IkReal x1710=((0.064677809339343)*cj0);
IkReal x1711=((0.161948875218934)*sj4);
IkReal x1712=(r20*sj4);
IkReal x1713=((0.143449603387718)*sj4);
IkReal x1714=(r11*sj5);
IkReal x1715=(sj0*x1699);
IkReal x1716=((0.187)*cj3*cj4);
IkReal x1717=((0.046746319868033)*cj4*sj3);
IkReal x1718=((0.29)*x1675);
IkReal x1719=(cj3*x1711);
IkReal x1720=(sj5*x1697);
IkReal x1721=((0.29)*x1674);
IkReal x1722=(sj4*x1707);
IkReal x1723=(cj0*cj5*r20);
IkReal x1724=(cj4*x1708);
IkReal x1725=(cj5*r20*sj0);
IkReal x1726=(cj0*sj0*x1721);
evalcond[0]=((((0.124232630584188)*cj4*r22))+((r20*sj5*x1689))+(((-1.0)*r20*x1683))+(((-1.0)*x1718))+(((-0.145649059756499)*x1690))+((x1689*x1690))+(((0.0627673694158124)*r22))+pz+(((-1.0)*r21*sj5*x1713))+(((0.143449603387718)*cj5*x1712)));
evalcond[1]=((((-1.0)*sj0*x1681*x1689))+(((-1.0)*py*x1686))+(((-1.0)*x1676*x1721))+(((-1.0)*sj0*x1687*x1689))+(((0.143449603387718)*x1697*x1714))+(((0.145649059756499)*sj0*x1681))+(((-1.0)*x1715))+(((-0.0627673694158124)*r12*sj0))+((r10*sj0*x1683))+(((-0.124232630584188)*sj0*x1693))+(((-0.143449603387718)*x1682*x1697)));
evalcond[2]=((((0.145649059756499)*r00*x1678))+(((-1.0)*cj0*x1698*x1713))+(((-0.124232630584188)*cj0*x1691))+x1715+(((-1.0)*px*x1703))+(((0.145649059756499)*cj0*x1692))+(((-1.0)*cj0*x1689*x1692))+(((-1.0)*x1677*x1721))+((r01*x1678*x1713))+(((-0.0627673694158124)*cj0*r02))+(((-1.0)*r00*x1678*x1689)));
evalcond[3]=((((-1.0)*r12*x1680))+((x1690*x1706))+(((-1.0)*r21*x1679*x1700))+((x1681*x1684))+((sj4*x1687*x1696))+((x1687*x1717))+((r12*x1719))+((x1714*x1716))+(((0.0160210495477794)*x1724))+(((-0.0160210495477794)*x1708))+((x1679*x1725))+((r20*x1688*x1700))+((sj4*x1681*x1696))+(((-1.0)*x1682*x1716))+((x1700*x1702))+((sj0*x1688*x1690))+((x1681*x1717))+(((-1.0)*x1714*x1722))+((x1684*x1687))+((x1682*x1722))+((sj0*x1718))+((x1680*x1693))+(((-1.0)*pz*x1686)));
evalcond[4]=(((x1692*x1717))+((r02*x1719))+(((0.0160210495477794)*cj4*x1695))+(((-1.0)*pz*x1703))+(((-0.0160210495477794)*x1695))+((x1709*x1716))+((x1685*x1717))+((sj4*x1692*x1696))+((x1679*x1723))+((cj0*x1718))+((x1684*x1685))+((x1698*x1722))+(((-1.0)*r02*x1680))+((x1684*x1692))+((x1690*x1710))+((r20*x1678*x1688))+(((-1.0)*x1709*x1722))+((sj4*x1685*x1696))+((cj0*x1688*x1690))+((x1680*x1691))+(((-1.0)*x1698*x1716))+(((-1.0)*r21*x1678*x1679))+((x1678*x1702)));
evalcond[5]=((((-1.0)*sj0*x1684*x1690))+(((-1.0)*sj0*x1690*x1717))+(((-1.0)*r20*x1700*x1717))+((x1681*x1688))+(((0.0160210495477794)*x1693))+(((0.064677809339343)*x1687))+(((0.064677809339343)*x1681))+(((-1.0)*x1699))+(((-1.0)*sj0*x1721))+(((-1.0)*r20*x1696*x1720))+(((-1.0)*cj5*r20*x1697*x1707))+(((-1.0)*r21*x1700*x1716))+((x1680*x1708))+(((-1.0)*x1679*x1714))+(((-1.0)*x1705))+((r21*x1707*x1720))+(((-1.0)*py))+((x1679*x1682))+(((-1.0)*x1680*x1724))+((x1687*x1688))+((x1716*x1725))+(((-0.161948875218934)*cj3*r22*x1697))+(((-1.0)*r20*x1684*x1700))+(((-1.0)*x1690*x1696*x1697)));
evalcond[6]=((((0.064677809339343)*x1692))+(((0.0160210495477794)*x1691))+(((0.064677809339343)*x1685))+(((0.007)*sj0))+(((-1.0)*r21*x1678*x1716))+(((-1.0)*cj0*x1721))+(((-1.0)*x1679*x1709))+(((-1.0)*cj0*sj4*x1690*x1696))+(((-1.0)*cj0*x1690*x1717))+(((-1.0)*x1704))+(((-1.0)*px))+(((-1.0)*cj4*x1680*x1695))+((x1679*x1698))+(((-1.0)*r20*x1678*x1717))+(((-1.0)*x1678*x1696*x1712))+(((-1.0)*cj0*x1684*x1690))+((x1688*x1692))+((r21*x1678*x1722))+(((-1.0)*x1695*x1719))+((x1685*x1688))+((x1716*x1723))+(((-1.0)*cj0*cj5*x1707*x1712))+((x1680*x1695))+(((-1.0)*r20*x1678*x1684)));
evalcond[7]=((((0.0809712504171555)*r10*x1678))+(((0.0160210495477794)*sj0*x1691))+((x1685*x1706))+(((0.007)*x1676))+(((-0.140253680131967)*cj0*x1693))+((sj0*x1685*x1688))+((sj0*x1688*x1692))+(((-1.0)*r10*x1678*x1694))+(((0.0809712504171555)*cj0*x1681))+(((-1.0)*sj0*x1704))+(((-0.046746319868033)*cj0*r12))+(((-1.0)*cj0*x1682*x1711))+(((-1.0)*r01*x1679*x1700))+((r11*x1678*x1711))+(((-1.0)*x1726))+((x1692*x1706))+((sj0*x1679*x1698))+(((-1.0)*cj0*x1681*x1694))+(((-1.0)*px*x1686)));
evalcond[8]=((((-1.0)*py*x1703))+((cj0*x1679*x1682))+((x1685*x1701))+(((0.161948875218934)*x1697*x1709))+(((-0.007)*x1677))+(((0.064677809339343)*r10*x1678))+((r10*x1678*x1688))+((cj0*x1681*x1688))+(((-0.140253680131967)*sj0*x1691))+((x1681*x1710))+(((-1.0)*r11*x1678*x1679))+(((-0.161948875218934)*x1697*x1698))+(((-1.0)*cj0*x1705))+(((0.0160210495477794)*cj0*x1693))+(((-1.0)*sj0*x1692*x1694))+(((-1.0)*x1726))+((x1692*x1701))+(((-1.0)*sj0*x1685*x1694))+(((-0.046746319868033)*r02*sj0)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1727=((0.249980320149909)*cj1);
IkReal x1728=((0.433001339129174)*sj1);
IkReal x1729=(cj5*r21);
IkReal x1730=(r20*sj5);
IkReal x1731=((0.433001339129174)*cj1);
IkReal x1732=(r00*sj5);
IkReal x1733=((0.249980320149909)*sj1);
IkReal x1734=(cj5*r01);
IkReal x1735=((0.866036765876652)*cj5*sj4);
IkReal x1736=(cj4*x1734);
IkReal x1737=((0.866036765876652)*sj4*sj5);
IkReal x1738=((0.750019679850091)*cj4*r02);
IkReal x1739=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*x1731*x1732))+(((-1.0)*x1731*x1734))+((cj4*x1731*x1732))+((x1731*x1736))+((cj1*r00*x1735))+(((-1.0)*x1728*x1730))+(((-1.0)*x1728*x1729))+((r20*sj1*x1735))+((sj1*x1739))+(((-1.0)*cj1*r01*x1737))+((r22*x1733))+((r02*x1727))+((cj4*x1728*x1729))+((cj4*x1728*x1730))+((cj1*x1738))+(((-1.0)*r21*sj1*x1737)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x1728*x1734))+((x1728*x1732))+(((-1.0)*r00*sj1*x1735))+(((-1.0)*x1728*x1736))+(((-1.0)*cj1*r21*x1737))+(((-1.0)*x1729*x1731))+(((-1.0)*x1730*x1731))+((r22*x1727))+((cj1*r20*x1735))+((cj4*x1730*x1731))+((r01*sj1*x1737))+((cj1*x1739))+((cj4*x1729*x1731))+(((-1.0)*cj4*x1728*x1732))+(((-1.0)*sj1*x1738))+(((-1.0)*r02*x1733)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x1731*x1732))+(((-1.0)*x1731*x1734))+((cj4*x1731*x1732))+((x1731*x1736))+((cj1*r00*x1735))+(((-1.0)*x1728*x1730))+(((-1.0)*x1728*x1729))+((r20*sj1*x1735))+((sj1*x1739))+(((-1.0)*cj1*r01*x1737))+((r22*x1733))+((r02*x1727))+((cj4*x1728*x1729))+((cj4*x1728*x1730))+((cj1*x1738))+(((-1.0)*r21*sj1*x1737))))+IKsqr((((x1728*x1734))+((x1728*x1732))+(((-1.0)*r00*sj1*x1735))+(((-1.0)*x1728*x1736))+(((-1.0)*cj1*r21*x1737))+(((-1.0)*x1729*x1731))+(((-1.0)*x1730*x1731))+((r22*x1727))+((cj1*r20*x1735))+((cj4*x1730*x1731))+((r01*sj1*x1737))+((cj1*x1739))+((cj4*x1729*x1731))+(((-1.0)*cj4*x1728*x1732))+(((-1.0)*sj1*x1738))+(((-1.0)*r02*x1733))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x1731*x1732))+(((-1.0)*x1731*x1734))+((cj4*x1731*x1732))+((x1731*x1736))+((cj1*r00*x1735))+(((-1.0)*x1728*x1730))+(((-1.0)*x1728*x1729))+((r20*sj1*x1735))+((sj1*x1739))+(((-1.0)*cj1*r01*x1737))+((r22*x1733))+((r02*x1727))+((cj4*x1728*x1729))+((cj4*x1728*x1730))+((cj1*x1738))+(((-1.0)*r21*sj1*x1737))), (((x1728*x1734))+((x1728*x1732))+(((-1.0)*r00*sj1*x1735))+(((-1.0)*x1728*x1736))+(((-1.0)*cj1*r21*x1737))+(((-1.0)*x1729*x1731))+(((-1.0)*x1730*x1731))+((r22*x1727))+((cj1*r20*x1735))+((cj4*x1730*x1731))+((r01*sj1*x1737))+((cj1*x1739))+((cj4*x1729*x1731))+(((-1.0)*cj4*x1728*x1732))+(((-1.0)*sj1*x1738))+(((-1.0)*r02*x1733))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1740=IKsin(j2);
IkReal x1741=IKcos(j2);
IkReal x1742=(cj4*r02);
IkReal x1743=(cj4*sj5);
IkReal x1744=((0.433001339129174)*r20);
IkReal x1745=(cj5*r21);
IkReal x1746=(cj4*cj5);
IkReal x1747=((0.249980320149909)*sj3);
IkReal x1748=((1.0)*cj3);
IkReal x1749=(r00*sj5);
IkReal x1750=((0.750019679850091)*sj3);
IkReal x1751=((0.0160210495477794)*r22);
IkReal x1752=(cj5*r01);
IkReal x1753=((0.499980319762597)*sj4);
IkReal x1754=((0.866036765876652)*sj4);
IkReal x1755=(cj5*r20);
IkReal x1756=(r01*sj5);
IkReal x1757=((0.433001339129174)*sj3);
IkReal x1758=((0.0184992718312161)*sj4);
IkReal x1759=(r21*sj5);
IkReal x1760=(r20*sj5);
IkReal x1761=(cj4*r22);
IkReal x1762=(cj1*x1741);
IkReal x1763=(sj1*x1740);
IkReal x1764=(cj5*r00*sj4);
IkReal x1765=(cj1*x1740);
IkReal x1766=(r20*x1753);
IkReal x1767=(sj1*x1741);
IkReal x1768=(x1762+x1763);
evalcond[0]=(((x1754*x1759))+(((-0.249980320149909)*r22))+x1768+(((-1.0)*x1754*x1755))+(((0.433001339129174)*x1745))+(((-0.750019679850091)*x1761))+(((-1.0)*x1743*x1744))+(((-0.433001339129174)*cj4*x1745))+((sj5*x1744)));
evalcond[1]=((((-1.0)*x1767))+((x1754*x1756))+x1765+(((-0.249980320149909)*r02))+(((-0.750019679850091)*x1742))+(((-1.0)*cj5*r00*x1754))+(((-0.433001339129174)*r00*x1743))+(((-0.433001339129174)*r01*x1746))+(((0.433001339129174)*x1752))+(((0.433001339129174)*x1749)));
evalcond[2]=((((-1.0)*x1758*x1759))+(((0.00924927184554663)*r20*x1743))+(((0.00924927184554663)*cj4*x1745))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.064677809339343)*x1760))+(((-1.0)*x1751))+(((-0.187)*x1762))+(((-0.187)*x1763))+((cj4*x1751))+(((0.064677809339343)*x1745))+((x1755*x1758)));
evalcond[3]=((((0.064677809339343)*x1752))+(((-0.0160210495477794)*r02))+(((-0.29)*sj1))+(((-1.0)*x1756*x1758))+(((0.0160210495477794)*x1742))+(((0.00924927184554663)*r00*x1743))+(((0.00924927184554663)*r01*x1746))+(((-1.0)*px))+(((0.187)*x1767))+((cj5*r00*x1758))+(((-0.187)*x1765))+(((0.064677809339343)*x1749)));
evalcond[4]=(((x1749*x1750))+x1768+((r00*x1743*x1747))+((x1750*x1752))+(((-1.0)*sj3*x1753*x1756))+(((-1.0)*r00*x1746*x1748))+((cj3*x1749*x1753))+((x1742*x1757))+((cj5*r00*sj3*x1753))+((r01*x1746*x1747))+((cj3*r01*x1743))+(((-1.0)*r02*x1757))+((cj3*x1752*x1753))+((cj3*r02*x1754)));
evalcond[5]=(((r20*x1743*x1747))+(((-1.0)*x1765))+x1767+(((-1.0)*r22*x1757))+((x1745*x1750))+((cj3*x1753*x1760))+((sj3*x1753*x1755))+((cj3*r22*x1754))+((cj3*x1745*x1753))+((x1757*x1761))+((cj4*x1745*x1747))+(((-1.0)*sj3*x1753*x1759))+(((-1.0)*r20*x1746*x1748))+((x1750*x1760))+((cj3*r21*x1743)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1769=((0.249980320149909)*cj1);
IkReal x1770=((0.433001339129174)*sj1);
IkReal x1771=(cj5*r21);
IkReal x1772=(r20*sj5);
IkReal x1773=((0.433001339129174)*cj1);
IkReal x1774=(r00*sj5);
IkReal x1775=((0.249980320149909)*sj1);
IkReal x1776=(cj5*r01);
IkReal x1777=((0.866036765876652)*cj5*sj4);
IkReal x1778=(cj4*x1776);
IkReal x1779=((0.866036765876652)*sj4*sj5);
IkReal x1780=((0.750019679850091)*cj4*r02);
IkReal x1781=((0.750019679850091)*cj4*r22);
if( IKabs((((r20*sj1*x1777))+(((-1.0)*cj4*x1773*x1774))+((r22*x1775))+(((-1.0)*r21*sj1*x1779))+((sj1*x1781))+(((-1.0)*r02*x1769))+((x1773*x1774))+((x1773*x1776))+(((-1.0)*cj1*r00*x1777))+(((-1.0)*x1770*x1771))+(((-1.0)*x1770*x1772))+(((-1.0)*cj1*x1780))+(((-1.0)*x1773*x1778))+((cj4*x1770*x1771))+((cj4*x1770*x1772))+((cj1*r01*x1779)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x1771*x1773))+(((-1.0)*x1772*x1773))+((r02*x1775))+((sj1*x1780))+(((-1.0)*r01*sj1*x1779))+((x1770*x1778))+((r00*sj1*x1777))+((cj1*r20*x1777))+((cj1*x1781))+(((-1.0)*x1771*x1773))+((cj4*x1772*x1773))+(((-1.0)*x1770*x1774))+(((-1.0)*x1770*x1776))+((cj4*x1770*x1774))+((r22*x1769))+(((-1.0)*cj1*r21*x1779)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r20*sj1*x1777))+(((-1.0)*cj4*x1773*x1774))+((r22*x1775))+(((-1.0)*r21*sj1*x1779))+((sj1*x1781))+(((-1.0)*r02*x1769))+((x1773*x1774))+((x1773*x1776))+(((-1.0)*cj1*r00*x1777))+(((-1.0)*x1770*x1771))+(((-1.0)*x1770*x1772))+(((-1.0)*cj1*x1780))+(((-1.0)*x1773*x1778))+((cj4*x1770*x1771))+((cj4*x1770*x1772))+((cj1*r01*x1779))))+IKsqr((((cj4*x1771*x1773))+(((-1.0)*x1772*x1773))+((r02*x1775))+((sj1*x1780))+(((-1.0)*r01*sj1*x1779))+((x1770*x1778))+((r00*sj1*x1777))+((cj1*r20*x1777))+((cj1*x1781))+(((-1.0)*x1771*x1773))+((cj4*x1772*x1773))+(((-1.0)*x1770*x1774))+(((-1.0)*x1770*x1776))+((cj4*x1770*x1774))+((r22*x1769))+(((-1.0)*cj1*r21*x1779))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r20*sj1*x1777))+(((-1.0)*cj4*x1773*x1774))+((r22*x1775))+(((-1.0)*r21*sj1*x1779))+((sj1*x1781))+(((-1.0)*r02*x1769))+((x1773*x1774))+((x1773*x1776))+(((-1.0)*cj1*r00*x1777))+(((-1.0)*x1770*x1771))+(((-1.0)*x1770*x1772))+(((-1.0)*cj1*x1780))+(((-1.0)*x1773*x1778))+((cj4*x1770*x1771))+((cj4*x1770*x1772))+((cj1*r01*x1779))), (((cj4*x1771*x1773))+(((-1.0)*x1772*x1773))+((r02*x1775))+((sj1*x1780))+(((-1.0)*r01*sj1*x1779))+((x1770*x1778))+((r00*sj1*x1777))+((cj1*r20*x1777))+((cj1*x1781))+(((-1.0)*x1771*x1773))+((cj4*x1772*x1773))+(((-1.0)*x1770*x1774))+(((-1.0)*x1770*x1776))+((cj4*x1770*x1774))+((r22*x1769))+(((-1.0)*cj1*r21*x1779))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1782=IKcos(j2);
IkReal x1783=IKsin(j2);
IkReal x1784=(cj4*r02);
IkReal x1785=(cj4*sj5);
IkReal x1786=((0.433001339129174)*r20);
IkReal x1787=(cj5*r21);
IkReal x1788=(cj4*cj5);
IkReal x1789=(r01*sj3);
IkReal x1790=((1.0)*cj3);
IkReal x1791=(r00*sj5);
IkReal x1792=((0.750019679850091)*sj3);
IkReal x1793=((0.0160210495477794)*r22);
IkReal x1794=(r20*sj5);
IkReal x1795=((0.433001339129174)*sj3);
IkReal x1796=(cj4*r22);
IkReal x1797=(cj5*r01);
IkReal x1798=((0.866036765876652)*sj4);
IkReal x1799=(cj5*r20);
IkReal x1800=(sj4*sj5);
IkReal x1801=((0.499980319762597)*sj3);
IkReal x1802=((0.249980320149909)*sj3);
IkReal x1803=(sj1*x1782);
IkReal x1804=(cj1*x1782);
IkReal x1805=(cj5*r00*sj4);
IkReal x1806=((0.499980319762597)*cj3*sj4);
IkReal x1807=(sj1*x1783);
IkReal x1808=(cj1*x1783);
IkReal x1809=((1.0)*x1808);
evalcond[0]=((((-0.750019679850091)*x1796))+((r21*sj5*x1798))+(((-0.249980320149909)*r22))+(((0.433001339129174)*x1787))+(((-1.0)*x1785*x1786))+x1807+x1804+(((-1.0)*x1798*x1799))+(((-0.433001339129174)*cj4*x1787))+((sj5*x1786)));
evalcond[1]=((((-0.433001339129174)*r01*x1788))+(((-0.433001339129174)*r00*x1785))+(((0.433001339129174)*x1791))+(((0.433001339129174)*x1797))+(((-0.249980320149909)*r02))+(((-1.0)*cj5*r00*x1798))+(((-1.0)*x1809))+x1803+((r01*sj5*x1798))+(((-0.750019679850091)*x1784)));
evalcond[2]=((((0.00924927184554663)*cj4*x1787))+(((-1.0)*x1793))+(((-0.187)*x1804))+(((-0.187)*x1807))+(((0.0184992718312161)*sj4*x1799))+(((-1.0)*pz))+(((0.00924927184554663)*r20*x1785))+(((0.29)*cj1))+(((-0.0184992718312161)*r21*x1800))+(((0.064677809339343)*x1787))+(((0.064677809339343)*x1794))+((cj4*x1793)));
evalcond[3]=((((-0.0160210495477794)*r02))+(((0.00924927184554663)*r00*x1785))+(((0.0184992718312161)*x1805))+(((-0.187)*x1803))+(((0.00924927184554663)*r01*x1788))+(((0.29)*sj1))+(((0.187)*x1808))+(((0.0160210495477794)*x1784))+(((-1.0)*px))+(((0.064677809339343)*x1797))+(((0.064677809339343)*x1791))+(((-0.0184992718312161)*r01*x1800)));
evalcond[4]=(((r20*x1785*x1802))+((cj3*r21*x1785))+(((-1.0)*r22*x1795))+((sj4*x1799*x1801))+((x1794*x1806))+((x1787*x1792))+((cj3*r22*x1798))+(((-1.0)*x1809))+(((-1.0)*r20*x1788*x1790))+x1803+((x1792*x1794))+((x1795*x1796))+((x1787*x1806))+(((-1.0)*r21*x1800*x1801))+((cj4*x1787*x1802)));
evalcond[5]=((((-0.499980319762597)*x1789*x1800))+((x1801*x1805))+(((-1.0)*r00*x1788*x1790))+((r00*x1785*x1802))+((cj3*r01*x1785))+((x1797*x1806))+(((0.249980320149909)*x1788*x1789))+((x1784*x1795))+(((0.750019679850091)*cj5*x1789))+((cj3*r02*x1798))+(((-1.0)*r02*x1795))+((x1791*x1792))+((x1791*x1806))+(((-1.0)*x1804))+(((-1.0)*x1807)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1810=((0.433001339129174)*sj1);
IkReal x1811=(cj5*r21);
IkReal x1812=(r10*sj5);
IkReal x1813=((0.433001339129174)*cj1);
IkReal x1814=(r20*sj5);
IkReal x1815=(cj5*r11);
IkReal x1816=((0.866036765876652)*sj4);
IkReal x1817=(cj1*sj5);
IkReal x1818=(cj5*r20);
IkReal x1819=((0.249980320149909)*r22);
IkReal x1820=(sj1*sj5);
IkReal x1821=((0.249980320149909)*r12);
IkReal x1822=(cj5*r10);
IkReal x1823=((0.750019679850091)*cj4*r12);
IkReal x1824=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*r11*x1816*x1817))+(((-1.0)*x1813*x1815))+(((-1.0)*x1812*x1813))+((cj4*x1810*x1811))+((cj4*x1810*x1814))+((cj4*x1813*x1815))+(((-1.0)*x1810*x1811))+(((-1.0)*x1810*x1814))+((sj1*x1816*x1818))+((cj1*x1821))+((cj1*x1823))+((cj1*x1816*x1822))+(((-1.0)*r21*x1816*x1820))+((sj1*x1824))+((sj1*x1819))+((cj4*x1812*x1813)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1813*x1814))+((cj4*x1813*x1814))+(((-1.0)*x1811*x1813))+((cj1*x1816*x1818))+((cj1*x1824))+((cj4*x1811*x1813))+((r11*x1816*x1820))+(((-1.0)*cj4*x1810*x1812))+(((-1.0)*cj4*x1810*x1815))+((cj1*x1819))+(((-1.0)*r21*x1816*x1817))+(((-1.0)*sj1*x1816*x1822))+((x1810*x1812))+((x1810*x1815))+(((-1.0)*sj1*x1823))+(((-1.0)*sj1*x1821)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x1816*x1817))+(((-1.0)*x1813*x1815))+(((-1.0)*x1812*x1813))+((cj4*x1810*x1811))+((cj4*x1810*x1814))+((cj4*x1813*x1815))+(((-1.0)*x1810*x1811))+(((-1.0)*x1810*x1814))+((sj1*x1816*x1818))+((cj1*x1821))+((cj1*x1823))+((cj1*x1816*x1822))+(((-1.0)*r21*x1816*x1820))+((sj1*x1824))+((sj1*x1819))+((cj4*x1812*x1813))))+IKsqr(((((-1.0)*x1813*x1814))+((cj4*x1813*x1814))+(((-1.0)*x1811*x1813))+((cj1*x1816*x1818))+((cj1*x1824))+((cj4*x1811*x1813))+((r11*x1816*x1820))+(((-1.0)*cj4*x1810*x1812))+(((-1.0)*cj4*x1810*x1815))+((cj1*x1819))+(((-1.0)*r21*x1816*x1817))+(((-1.0)*sj1*x1816*x1822))+((x1810*x1812))+((x1810*x1815))+(((-1.0)*sj1*x1823))+(((-1.0)*sj1*x1821))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r11*x1816*x1817))+(((-1.0)*x1813*x1815))+(((-1.0)*x1812*x1813))+((cj4*x1810*x1811))+((cj4*x1810*x1814))+((cj4*x1813*x1815))+(((-1.0)*x1810*x1811))+(((-1.0)*x1810*x1814))+((sj1*x1816*x1818))+((cj1*x1821))+((cj1*x1823))+((cj1*x1816*x1822))+(((-1.0)*r21*x1816*x1820))+((sj1*x1824))+((sj1*x1819))+((cj4*x1812*x1813))), ((((-1.0)*x1813*x1814))+((cj4*x1813*x1814))+(((-1.0)*x1811*x1813))+((cj1*x1816*x1818))+((cj1*x1824))+((cj4*x1811*x1813))+((r11*x1816*x1820))+(((-1.0)*cj4*x1810*x1812))+(((-1.0)*cj4*x1810*x1815))+((cj1*x1819))+(((-1.0)*r21*x1816*x1817))+(((-1.0)*sj1*x1816*x1822))+((x1810*x1812))+((x1810*x1815))+(((-1.0)*sj1*x1823))+(((-1.0)*sj1*x1821))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1825=IKsin(j2);
IkReal x1826=IKcos(j2);
IkReal x1827=(cj4*sj5);
IkReal x1828=((0.433001339129174)*r20);
IkReal x1829=((0.064677809339343)*cj5);
IkReal x1830=(r10*sj3);
IkReal x1831=(cj3*r21);
IkReal x1832=(r20*sj5);
IkReal x1833=((0.750019679850091)*sj3);
IkReal x1834=(r10*sj5);
IkReal x1835=((0.0160210495477794)*r22);
IkReal x1836=((0.499980319762597)*sj4);
IkReal x1837=(sj3*sj5);
IkReal x1838=(cj5*r21);
IkReal x1839=(cj4*r12);
IkReal x1840=((0.433001339129174)*sj3);
IkReal x1841=((0.866036765876652)*sj4);
IkReal x1842=(cj5*r10);
IkReal x1843=(cj5*r11);
IkReal x1844=(cj5*r20);
IkReal x1845=((0.433001339129174)*cj4);
IkReal x1846=(cj4*r22);
IkReal x1847=((0.00924927184554663)*cj4);
IkReal x1848=((0.0184992718312161)*sj4);
IkReal x1849=(cj1*x1826);
IkReal x1850=(sj1*x1825);
IkReal x1851=(cj1*x1825);
IkReal x1852=(sj1*x1826);
IkReal x1853=((0.249980320149909)*cj4*sj3);
IkReal x1854=(sj5*x1848);
IkReal x1855=((1.0)*cj3*cj4*cj5);
IkReal x1856=(x1850+x1849);
evalcond[0]=((((0.433001339129174)*x1838))+(((-0.249980320149909)*r22))+(((-1.0)*x1841*x1844))+(((-1.0)*x1827*x1828))+((r21*sj5*x1841))+x1856+(((-1.0)*x1838*x1845))+(((-0.750019679850091)*x1846))+((sj5*x1828)));
evalcond[1]=((((0.433001339129174)*x1834))+(((-1.0)*x1843*x1845))+(((-1.0)*x1841*x1842))+(((-0.249980320149909)*r12))+(((-1.0)*x1852))+((r11*sj5*x1841))+x1851+(((-0.433001339129174)*r10*x1827))+(((-0.750019679850091)*x1839))+(((0.433001339129174)*x1843)));
evalcond[2]=(((x1838*x1847))+((x1844*x1848))+(((-1.0)*x1835))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.064677809339343)*x1832))+((cj4*x1835))+((r21*x1829))+(((-0.187)*x1849))+(((-1.0)*r21*x1854))+(((0.00924927184554663)*r20*x1827))+(((-0.187)*x1850)));
evalcond[3]=((((-0.0160210495477794)*r12))+(((-0.29)*sj1))+(((0.187)*x1852))+(((0.00924927184554663)*r10*x1827))+(((-1.0)*py))+(((0.0160210495477794)*x1839))+(((0.064677809339343)*x1834))+(((-1.0)*r11*x1854))+((r11*x1829))+((x1842*x1848))+((x1843*x1847))+(((-0.187)*x1851)));
evalcond[4]=(((x1843*x1853))+((cj3*x1836*x1843))+((cj3*r12*x1841))+(((0.750019679850091)*sj5*x1830))+((cj3*x1834*x1836))+((x1833*x1843))+((cj5*x1830*x1836))+((cj3*r11*x1827))+((x1839*x1840))+(((-1.0)*r12*x1840))+x1856+(((-1.0)*cj3*cj4*x1842))+(((0.249980320149909)*x1827*x1830))+(((-1.0)*r11*x1836*x1837)));
evalcond[5]=(((cj3*x1832*x1836))+(((0.249980320149909)*r20*sj3*x1827))+((cj5*x1831*x1836))+(((-1.0)*r22*x1840))+((cj3*r22*x1841))+((x1827*x1831))+((sj3*x1836*x1844))+(((-1.0)*x1851))+((x1840*x1846))+((x1838*x1853))+(((-1.0)*r21*x1836*x1837))+x1852+((x1832*x1833))+((x1833*x1838))+(((-1.0)*cj3*cj4*x1844)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1857=((0.433001339129174)*sj1);
IkReal x1858=(cj5*r21);
IkReal x1859=(r10*sj5);
IkReal x1860=((0.433001339129174)*cj1);
IkReal x1861=(r20*sj5);
IkReal x1862=(cj5*r11);
IkReal x1863=((0.866036765876652)*sj4);
IkReal x1864=(cj1*sj5);
IkReal x1865=(cj5*r20);
IkReal x1866=((0.249980320149909)*r22);
IkReal x1867=(sj1*sj5);
IkReal x1868=((0.249980320149909)*r12);
IkReal x1869=(cj5*r10);
IkReal x1870=((0.750019679850091)*cj4*r12);
IkReal x1871=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*r21*x1863*x1867))+((cj4*x1857*x1858))+((x1860*x1862))+(((-1.0)*cj4*x1860*x1862))+((cj4*x1857*x1861))+(((-1.0)*cj1*x1863*x1869))+((x1859*x1860))+(((-1.0)*x1857*x1858))+((sj1*x1871))+(((-1.0)*cj4*x1859*x1860))+(((-1.0)*cj1*x1870))+(((-1.0)*cj1*x1868))+((sj1*x1863*x1865))+((r11*x1863*x1864))+((sj1*x1866))+(((-1.0)*x1857*x1861)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x1863*x1865))+((cj1*x1866))+(((-1.0)*r21*x1863*x1864))+((cj4*x1857*x1859))+(((-1.0)*r11*x1863*x1867))+(((-1.0)*x1860*x1861))+((cj4*x1857*x1862))+(((-1.0)*x1857*x1859))+((cj4*x1858*x1860))+((sj1*x1870))+((cj1*x1871))+((sj1*x1863*x1869))+(((-1.0)*x1858*x1860))+((sj1*x1868))+(((-1.0)*x1857*x1862))+((cj4*x1860*x1861)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r21*x1863*x1867))+((cj4*x1857*x1858))+((x1860*x1862))+(((-1.0)*cj4*x1860*x1862))+((cj4*x1857*x1861))+(((-1.0)*cj1*x1863*x1869))+((x1859*x1860))+(((-1.0)*x1857*x1858))+((sj1*x1871))+(((-1.0)*cj4*x1859*x1860))+(((-1.0)*cj1*x1870))+(((-1.0)*cj1*x1868))+((sj1*x1863*x1865))+((r11*x1863*x1864))+((sj1*x1866))+(((-1.0)*x1857*x1861))))+IKsqr((((cj1*x1863*x1865))+((cj1*x1866))+(((-1.0)*r21*x1863*x1864))+((cj4*x1857*x1859))+(((-1.0)*r11*x1863*x1867))+(((-1.0)*x1860*x1861))+((cj4*x1857*x1862))+(((-1.0)*x1857*x1859))+((cj4*x1858*x1860))+((sj1*x1870))+((cj1*x1871))+((sj1*x1863*x1869))+(((-1.0)*x1858*x1860))+((sj1*x1868))+(((-1.0)*x1857*x1862))+((cj4*x1860*x1861))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r21*x1863*x1867))+((cj4*x1857*x1858))+((x1860*x1862))+(((-1.0)*cj4*x1860*x1862))+((cj4*x1857*x1861))+(((-1.0)*cj1*x1863*x1869))+((x1859*x1860))+(((-1.0)*x1857*x1858))+((sj1*x1871))+(((-1.0)*cj4*x1859*x1860))+(((-1.0)*cj1*x1870))+(((-1.0)*cj1*x1868))+((sj1*x1863*x1865))+((r11*x1863*x1864))+((sj1*x1866))+(((-1.0)*x1857*x1861))), (((cj1*x1863*x1865))+((cj1*x1866))+(((-1.0)*r21*x1863*x1864))+((cj4*x1857*x1859))+(((-1.0)*r11*x1863*x1867))+(((-1.0)*x1860*x1861))+((cj4*x1857*x1862))+(((-1.0)*x1857*x1859))+((cj4*x1858*x1860))+((sj1*x1870))+((cj1*x1871))+((sj1*x1863*x1869))+(((-1.0)*x1858*x1860))+((sj1*x1868))+(((-1.0)*x1857*x1862))+((cj4*x1860*x1861))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1872=IKcos(j2);
IkReal x1873=IKsin(j2);
IkReal x1874=(cj4*sj5);
IkReal x1875=((0.433001339129174)*r20);
IkReal x1876=((0.064677809339343)*cj5);
IkReal x1877=(r10*sj3);
IkReal x1878=(cj3*sj4);
IkReal x1879=((0.433001339129174)*r10);
IkReal x1880=((0.0160210495477794)*r22);
IkReal x1881=(r20*sj5);
IkReal x1882=(r11*sj5);
IkReal x1883=(cj5*r20);
IkReal x1884=(cj5*r21);
IkReal x1885=((0.866036765876652)*sj4);
IkReal x1886=(cj5*r10);
IkReal x1887=(cj5*r11);
IkReal x1888=((0.750019679850091)*sj3);
IkReal x1889=(cj4*sj3);
IkReal x1890=((0.750019679850091)*cj4);
IkReal x1891=((0.433001339129174)*cj4);
IkReal x1892=((0.433001339129174)*r22);
IkReal x1893=((0.0160210495477794)*r12);
IkReal x1894=((0.0184992718312161)*sj4);
IkReal x1895=(r21*sj5);
IkReal x1896=(r10*sj5);
IkReal x1897=((0.00924927184554663)*cj4);
IkReal x1898=(sj1*x1872);
IkReal x1899=(cj1*x1872);
IkReal x1900=((0.433001339129174)*r12*sj3);
IkReal x1901=((0.499980319762597)*sj3*sj4);
IkReal x1902=(sj1*x1873);
IkReal x1903=(cj1*x1873);
IkReal x1904=((1.0)*x1903);
IkReal x1905=((1.0)*cj3*cj4*cj5);
evalcond[0]=(((x1885*x1895))+((sj5*x1875))+(((-0.249980320149909)*r22))+(((-1.0)*x1874*x1875))+(((-1.0)*x1883*x1885))+(((-1.0)*r22*x1890))+x1902+x1899+(((0.433001339129174)*x1884))+(((-1.0)*x1884*x1891)));
evalcond[1]=(((sj5*x1879))+(((-1.0)*x1874*x1879))+(((-0.249980320149909)*r12))+((x1882*x1885))+(((-1.0)*r12*x1890))+x1898+(((0.433001339129174)*x1887))+(((-1.0)*x1887*x1891))+(((-1.0)*x1885*x1886))+(((-1.0)*x1904)));
evalcond[2]=(((x1884*x1897))+((x1883*x1894))+(((-0.187)*x1902))+((cj4*x1880))+(((0.00924927184554663)*r20*x1874))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*x1894*x1895))+((r21*x1876))+(((-0.187)*x1899))+(((-1.0)*x1880))+(((0.064677809339343)*x1881)));
evalcond[3]=(((x1886*x1894))+((cj4*x1893))+(((0.00924927184554663)*r10*x1874))+(((-1.0)*x1882*x1894))+(((0.29)*sj1))+(((-1.0)*py))+(((-0.187)*x1898))+(((0.187)*x1903))+(((-1.0)*x1893))+((x1887*x1897))+(((0.064677809339343)*x1896))+((r11*x1876)));
evalcond[4]=((((0.499980319762597)*x1878*x1881))+(((0.499980319762597)*x1878*x1884))+((x1881*x1888))+(((-1.0)*sj3*x1892))+(((0.866036765876652)*r22*x1878))+(((0.249980320149909)*r20*sj3*x1874))+x1898+(((0.249980320149909)*x1884*x1889))+(((-1.0)*cj3*cj4*x1883))+((x1889*x1892))+((x1883*x1901))+((cj3*r21*x1874))+((x1884*x1888))+(((-1.0)*x1904))+(((-1.0)*x1895*x1901)));
evalcond[5]=((((0.499980319762597)*x1878*x1887))+(((-1.0)*x1882*x1901))+((x1887*x1888))+((cj3*r11*x1874))+(((0.866036765876652)*r12*x1878))+(((-1.0)*x1902))+(((0.249980320149909)*x1874*x1877))+(((-1.0)*x1899))+(((0.499980319762597)*cj5*sj4*x1877))+(((-1.0)*cj3*cj4*x1886))+(((0.249980320149909)*x1887*x1889))+(((0.433001339129174)*r12*x1889))+(((-1.0)*x1900))+(((0.750019679850091)*sj5*x1877))+(((0.499980319762597)*x1878*x1896)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1906=(sj0*sj5);
IkReal x1907=((0.866036765876652)*sj4);
IkReal x1908=(cj1*r21);
IkReal x1909=((0.433001339129174)*sj1);
IkReal x1910=(cj4*r20);
IkReal x1911=(r10*sj5);
IkReal x1912=(cj4*cj5);
IkReal x1913=(cj1*r11);
IkReal x1914=(cj5*sj0);
IkReal x1915=(r22*sj0);
IkReal x1916=((0.249980320149909)*cj1);
IkReal x1917=(cj5*r10);
IkReal x1918=((0.750019679850091)*cj4);
IkReal x1919=((0.433001339129174)*cj1);
IkReal x1920=((0.249980320149909)*sj1);
IkReal x1921=(r12*x1918);
CheckValue<IkReal> x1922=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x1922.valid){
continue;
}
CheckValue<IkReal> x1923 = IKatan2WithCheck(IkReal((((x1906*x1909*x1910))+(((-1.0)*sj5*x1907*x1913))+(((-1.0)*x1911*x1919))+((cj1*x1921))+(((-0.433001339129174)*cj5*x1913))+(((-1.0)*r21*sj1*x1906*x1907))+((r20*sj1*x1907*x1914))+(((-1.0)*r21*x1909*x1914))+(((0.433001339129174)*x1912*x1913))+((r12*x1916))+(((-1.0)*r20*x1906*x1909))+((x1915*x1920))+((cj1*x1907*x1917))+((cj4*x1911*x1919))+((r21*sj0*x1909*x1912))+((sj1*x1915*x1918)))),IkReal(((((-1.0)*r12*x1920))+(((-0.433001339129174)*x1908*x1914))+((cj5*r11*x1909))+(((-1.0)*cj4*x1909*x1911))+(((0.433001339129174)*sj0*x1908*x1912))+(((-1.0)*r20*x1906*x1919))+((x1909*x1911))+(((-1.0)*sj1*x1921))+(((-1.0)*sj1*x1907*x1917))+(((-1.0)*x1906*x1907*x1908))+((cj1*x1915*x1918))+((x1906*x1910*x1919))+((x1915*x1916))+((cj1*r20*x1907*x1914))+(((-1.0)*r11*x1909*x1912))+((r11*sj1*sj5*x1907)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1923.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1922.value)))+(x1923.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x1924=IKsin(j2);
IkReal x1925=IKcos(j2);
IkReal x1926=(cj4*r02);
IkReal x1927=(cj5*r11);
IkReal x1928=(cj3*cj4);
IkReal x1929=(r21*sj5);
IkReal x1930=(r10*sj5);
IkReal x1931=((1.0)*cj5);
IkReal x1932=((0.00924927184554663)*cj4);
IkReal x1933=((0.866036765876652)*sj4);
IkReal x1934=(cj5*r10);
IkReal x1935=(cj5*sj3);
IkReal x1936=(r00*sj5);
IkReal x1937=(cj0*sj1);
IkReal x1938=((0.433001339129174)*cj4);
IkReal x1939=((0.0184992718312161)*sj4);
IkReal x1940=(r20*sj5);
IkReal x1941=((0.249980320149909)*cj4);
IkReal x1942=(r11*sj5);
IkReal x1943=(cj5*r21);
IkReal x1944=(cj5*r00);
IkReal x1945=((0.0160210495477794)*r22);
IkReal x1946=(sj0*sj1);
IkReal x1947=(cj5*r01);
IkReal x1948=((0.750019679850091)*sj3);
IkReal x1949=(cj5*r20);
IkReal x1950=((0.750019679850091)*cj4);
IkReal x1951=(r22*sj3);
IkReal x1952=(r12*sj3);
IkReal x1953=((0.499980319762597)*sj4);
IkReal x1954=(r01*sj5);
IkReal x1955=((0.0160210495477794)*r12);
IkReal x1956=((0.433001339129174)*sj3);
IkReal x1957=(cj3*x1953);
IkReal x1958=((0.187)*x1925);
IkReal x1959=((1.0)*x1925);
IkReal x1960=(sj3*x1941);
IkReal x1961=(cj1*x1924);
IkReal x1962=(sj1*x1924);
IkReal x1963=(cj1*x1925);
IkReal x1964=(sj0*x1961);
evalcond[0]=((((-1.0)*r22*x1950))+(((-0.249980320149909)*r22))+x1962+x1963+(((-1.0)*x1938*x1943))+(((-1.0)*x1938*x1940))+(((0.433001339129174)*x1943))+(((0.433001339129174)*x1940))+((x1929*x1933))+(((-1.0)*x1933*x1949)));
evalcond[1]=(((cj0*x1961))+(((-1.0)*x1937*x1959))+(((-0.750019679850091)*x1926))+(((-0.249980320149909)*r02))+(((-1.0)*x1938*x1947))+(((0.433001339129174)*x1947))+(((0.433001339129174)*x1936))+((x1933*x1954))+(((-1.0)*x1933*x1944))+(((-1.0)*x1936*x1938)));
evalcond[2]=((((-1.0)*x1930*x1938))+(((-1.0)*x1933*x1934))+(((0.433001339129174)*x1927))+(((-0.249980320149909)*r12))+x1964+(((-1.0)*x1946*x1959))+(((-1.0)*r12*x1950))+(((0.433001339129174)*x1930))+((x1933*x1942))+(((-1.0)*x1927*x1938)));
evalcond[3]=((((-1.0)*x1945))+(((0.064677809339343)*x1940))+(((0.064677809339343)*x1943))+((x1939*x1949))+(((-0.187)*x1962))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*x1929*x1939))+((cj4*x1945))+((x1932*x1940))+((x1932*x1943))+(((-1.0)*cj1*x1958)));
evalcond[4]=((((-0.0160210495477794)*r02))+(((0.007)*sj0))+((x1937*x1958))+(((0.064677809339343)*x1936))+(((-0.29)*x1937))+(((0.064677809339343)*x1947))+((x1932*x1936))+((x1939*x1944))+(((-1.0)*px))+(((0.0160210495477794)*x1926))+(((-1.0)*x1939*x1954))+(((-0.187)*cj0*x1961))+((x1932*x1947)));
evalcond[5]=((((-0.29)*x1946))+(((-1.0)*x1955))+((x1934*x1939))+(((0.064677809339343)*x1930))+((x1930*x1932))+((x1946*x1958))+(((-0.187)*x1964))+(((-0.007)*cj0))+(((-1.0)*py))+((cj4*x1955))+(((0.064677809339343)*x1927))+((x1927*x1932))+(((-1.0)*x1939*x1942)));
evalcond[6]=(((x1943*x1957))+((x1928*x1929))+((cj3*r22*x1933))+(((-1.0)*r20*x1928*x1931))+((x1938*x1951))+((x1940*x1960))+(((-1.0)*sj3*x1929*x1953))+((r21*x1935*x1941))+((r20*x1935*x1953))+(((-1.0)*x1961))+((x1940*x1948))+(((0.750019679850091)*r21*x1935))+((x1940*x1957))+(((-0.433001339129174)*x1951))+((sj1*x1925)));
evalcond[7]=((((-1.0)*r00*x1928*x1931))+((cj0*x1963))+((r01*x1935*x1941))+(((-1.0)*r02*x1956))+(((-1.0)*sj3*x1953*x1954))+((x1926*x1956))+((x1936*x1948))+((x1924*x1937))+((x1936*x1957))+((x1936*x1960))+((x1928*x1954))+((cj3*r02*x1933))+((x1947*x1957))+(((0.750019679850091)*r01*x1935))+((r00*x1935*x1953)));
evalcond[8]=(((x1938*x1952))+((cj3*r12*x1933))+((sj3*x1934*x1953))+((x1924*x1946))+((sj0*x1963))+(((-1.0)*r10*x1928*x1931))+((x1928*x1942))+(((-0.433001339129174)*x1952))+((x1927*x1960))+(((-1.0)*sj3*x1942*x1953))+((x1930*x1957))+((x1927*x1957))+((x1930*x1948))+((x1927*x1948))+((x1930*x1960)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1965=((0.249980320149909)*cj1);
IkReal x1966=(cj0*cj1);
IkReal x1967=((0.750019679850091)*cj4);
IkReal x1968=(cj0*r20);
IkReal x1969=(cj1*r00);
IkReal x1970=(cj0*r22);
IkReal x1971=(r01*sj1);
IkReal x1972=((0.433001339129174)*sj1);
IkReal x1973=(cj5*r21);
IkReal x1974=((0.249980320149909)*sj1);
IkReal x1975=(cj1*r01);
IkReal x1976=((0.433001339129174)*cj5);
IkReal x1977=((0.433001339129174)*cj4);
IkReal x1978=((0.433001339129174)*sj5);
IkReal x1979=((0.866036765876652)*cj5*sj4);
IkReal x1980=((0.866036765876652)*sj4*sj5);
IkReal x1981=(cj4*x1976);
IkReal x1982=(cj4*sj5*x1972);
CheckValue<IkReal> x1983=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x1983.valid){
continue;
}
CheckValue<IkReal> x1984 = IKatan2WithCheck(IkReal((((x1969*x1979))+((x1968*x1982))+((r02*x1965))+(((-1.0)*x1975*x1976))+(((-1.0)*cj0*r21*sj1*x1980))+((x1975*x1981))+(((-1.0)*sj5*x1968*x1972))+(((-1.0)*cj0*x1972*x1973))+((x1970*x1974))+(((-1.0)*x1975*x1980))+((sj1*x1967*x1970))+((cj0*cj4*x1972*x1973))+((cj1*r02*x1967))+(((-1.0)*x1969*x1978))+((sj1*x1968*x1979))+((sj5*x1969*x1977)))),IkReal((((x1971*x1980))+((r20*x1966*x1979))+(((-1.0)*r20*x1966*x1978))+((r20*sj5*x1966*x1977))+(((-1.0)*r02*x1974))+((x1971*x1976))+(((-1.0)*x1971*x1981))+(((-1.0)*r02*sj1*x1967))+((r22*x1966*x1967))+(((-1.0)*r21*x1966*x1980))+((r00*sj5*x1972))+((x1965*x1970))+(((-0.433001339129174)*x1966*x1973))+((x1966*x1973*x1977))+(((-1.0)*r00*x1982))+(((-1.0)*r00*sj1*x1979)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1984.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1983.value)))+(x1984.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x1985=IKsin(j2);
IkReal x1986=IKcos(j2);
IkReal x1987=(cj4*r02);
IkReal x1988=(cj5*r11);
IkReal x1989=(cj3*cj4);
IkReal x1990=(r21*sj5);
IkReal x1991=(r10*sj5);
IkReal x1992=((1.0)*cj5);
IkReal x1993=((0.00924927184554663)*cj4);
IkReal x1994=((0.866036765876652)*sj4);
IkReal x1995=(cj5*r10);
IkReal x1996=(cj5*sj3);
IkReal x1997=(r00*sj5);
IkReal x1998=(cj0*sj1);
IkReal x1999=((0.433001339129174)*cj4);
IkReal x2000=((0.0184992718312161)*sj4);
IkReal x2001=(r20*sj5);
IkReal x2002=((0.249980320149909)*cj4);
IkReal x2003=(r11*sj5);
IkReal x2004=(cj5*r21);
IkReal x2005=(cj5*r00);
IkReal x2006=((0.0160210495477794)*r22);
IkReal x2007=(sj0*sj1);
IkReal x2008=(cj5*r01);
IkReal x2009=((0.750019679850091)*sj3);
IkReal x2010=(cj5*r20);
IkReal x2011=((0.750019679850091)*cj4);
IkReal x2012=(r22*sj3);
IkReal x2013=(r12*sj3);
IkReal x2014=((0.499980319762597)*sj4);
IkReal x2015=(r01*sj5);
IkReal x2016=((0.0160210495477794)*r12);
IkReal x2017=((0.433001339129174)*sj3);
IkReal x2018=(cj3*x2014);
IkReal x2019=((0.187)*x1986);
IkReal x2020=((1.0)*x1986);
IkReal x2021=(sj3*x2002);
IkReal x2022=(cj1*x1985);
IkReal x2023=(sj1*x1985);
IkReal x2024=(cj1*x1986);
IkReal x2025=(sj0*x2022);
evalcond[0]=((((-0.249980320149909)*r22))+x2024+x2023+((x1990*x1994))+(((-1.0)*x1994*x2010))+(((-1.0)*r22*x2011))+(((0.433001339129174)*x2001))+(((0.433001339129174)*x2004))+(((-1.0)*x1999*x2001))+(((-1.0)*x1999*x2004)));
evalcond[1]=((((-1.0)*x1997*x1999))+((x1994*x2015))+(((-0.249980320149909)*r02))+(((0.433001339129174)*x1997))+(((-1.0)*x1998*x2020))+(((-1.0)*x1994*x2005))+((cj0*x2022))+(((-0.750019679850091)*x1987))+(((0.433001339129174)*x2008))+(((-1.0)*x1999*x2008)));
evalcond[2]=((((0.433001339129174)*x1991))+(((-0.249980320149909)*r12))+x2025+(((-1.0)*x2007*x2020))+((x1994*x2003))+(((-1.0)*r12*x2011))+(((-1.0)*x1991*x1999))+(((-1.0)*x1994*x1995))+(((0.433001339129174)*x1988))+(((-1.0)*x1988*x1999)));
evalcond[3]=(((cj4*x2006))+(((-1.0)*x1990*x2000))+((x2000*x2010))+((x1993*x2004))+((x1993*x2001))+(((0.064677809339343)*x2004))+(((0.064677809339343)*x2001))+(((-0.187)*x2023))+(((-1.0)*pz))+(((-1.0)*cj1*x2019))+(((0.29)*cj1))+(((-1.0)*x2006)));
evalcond[4]=((((-0.0160210495477794)*r02))+(((0.007)*sj0))+(((0.0160210495477794)*x1987))+((x1993*x2008))+((x2000*x2005))+(((0.064677809339343)*x2008))+((x1998*x2019))+(((-1.0)*px))+(((-0.187)*cj0*x2022))+(((-0.29)*x1998))+(((0.064677809339343)*x1997))+((x1993*x1997))+(((-1.0)*x2000*x2015)));
evalcond[5]=((((-1.0)*x2016))+((x1988*x1993))+(((0.064677809339343)*x1988))+((x1991*x1993))+(((-0.187)*x2025))+(((-0.29)*x2007))+(((-0.007)*cj0))+(((-1.0)*py))+(((-1.0)*x2000*x2003))+((x1995*x2000))+(((0.064677809339343)*x1991))+((x2007*x2019))+((cj4*x2016)));
evalcond[6]=(((r20*x1996*x2014))+(((-0.433001339129174)*x2012))+(((-1.0)*sj3*x1990*x2014))+((x2004*x2018))+((x1999*x2012))+((sj1*x1986))+(((-1.0)*x2022))+((x2001*x2021))+((x1989*x1990))+((cj3*r22*x1994))+((x2001*x2009))+(((-1.0)*r20*x1989*x1992))+((x2001*x2018))+(((0.750019679850091)*r21*x1996))+((r21*x1996*x2002)));
evalcond[7]=(((x1997*x2009))+((x1987*x2017))+(((-1.0)*r00*x1989*x1992))+((x1989*x2015))+((r00*x1996*x2014))+((cj3*r02*x1994))+(((0.750019679850091)*r01*x1996))+((r01*x1996*x2002))+((cj0*x2024))+((x2008*x2018))+((x1997*x2018))+(((-1.0)*r02*x2017))+(((-1.0)*sj3*x2014*x2015))+((x1985*x1998))+((x1997*x2021)));
evalcond[8]=(((sj3*x1995*x2014))+((x1991*x2018))+(((-0.433001339129174)*x2013))+((x1985*x2007))+((sj0*x2024))+((x1988*x2018))+((x1999*x2013))+((x1989*x2003))+((x1991*x2009))+(((-1.0)*sj3*x2003*x2014))+((x1988*x2021))+((x1991*x2021))+(((-1.0)*r10*x1989*x1992))+((cj3*r12*x1994))+((x1988*x2009)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2026=(sj0*sj5);
IkReal x2027=((0.143449603387718)*sj4);
IkReal x2028=(cj4*sj0);
IkReal x2029=(cj5*r11);
IkReal x2030=((0.247317167488307)*cj4);
IkReal x2031=(cj5*r21);
IkReal x2032=(r20*sj5);
IkReal x2033=((0.494653804785234)*sj4);
CheckValue<IkReal> x2034=IKPowWithIntegerCheck(sj0,-2);
if(!x2034.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x2034.value)*(((((-0.0717219785716089)*x2028*x2029))+(((-0.124232630584188)*r12*x2028))+(((-0.0627673694158124)*r12*sj0))+((r11*x2026*x2027))+(((-0.007)*cj0*sj0))+(((0.145649059756499)*sj0*x2029))+(((0.145649059756499)*r10*x2026))+(((-1.0)*py*sj0))+(((-0.0717219785716089)*cj4*r10*x2026))+(((-1.0)*cj5*r10*sj0*x2027)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x2030*x2031))+((x2030*x2032))+(((-0.502238137091374)*x2032))+(((-0.502238137091374)*x2031))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+((cj5*r20*x2033))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x2033)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x2034.value)*(((((-0.0717219785716089)*x2028*x2029))+(((-0.124232630584188)*r12*x2028))+(((-0.0627673694158124)*r12*sj0))+((r11*x2026*x2027))+(((-0.007)*cj0*sj0))+(((0.145649059756499)*sj0*x2029))+(((0.145649059756499)*r10*x2026))+(((-1.0)*py*sj0))+(((-0.0717219785716089)*cj4*r10*x2026))+(((-1.0)*cj5*r10*sj0*x2027))))))+IKsqr((((x2030*x2031))+((x2030*x2032))+(((-0.502238137091374)*x2032))+(((-0.502238137091374)*x2031))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+((cj5*r20*x2033))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x2033))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x2034.value)*(((((-0.0717219785716089)*x2028*x2029))+(((-0.124232630584188)*r12*x2028))+(((-0.0627673694158124)*r12*sj0))+((r11*x2026*x2027))+(((-0.007)*cj0*sj0))+(((0.145649059756499)*sj0*x2029))+(((0.145649059756499)*r10*x2026))+(((-1.0)*py*sj0))+(((-0.0717219785716089)*cj4*r10*x2026))+(((-1.0)*cj5*r10*sj0*x2027))))), (((x2030*x2031))+((x2030*x2032))+(((-0.502238137091374)*x2032))+(((-0.502238137091374)*x2031))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+((cj5*r20*x2033))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x2033))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x2035=IKsin(j1);
IkReal x2036=IKcos(j1);
IkReal x2037=sj0*sj0;
IkReal x2038=cj0*cj0;
IkReal x2039=(cj0*sj5);
IkReal x2040=((0.0184992718312161)*sj4);
IkReal x2041=((0.0809712504171555)*sj3);
IkReal x2042=(cj5*r11);
IkReal x2043=(cj5*r10);
IkReal x2044=((0.145649059756499)*sj5);
IkReal x2045=((0.140253680131967)*sj3);
IkReal x2046=(r00*sj5);
IkReal x2047=((1.0)*sj0);
IkReal x2048=(r10*sj5);
IkReal x2049=((0.00924927184554663)*cj4);
IkReal x2050=((0.0717219785716089)*cj4);
IkReal x2051=(cj5*r21);
IkReal x2052=(cj4*r02);
IkReal x2053=(cj5*r01);
IkReal x2054=(cj4*r12);
IkReal x2055=((0.0809712504171555)*cj4);
IkReal x2056=(cj0*r22);
IkReal x2057=((0.0934963197956057)*cj3);
IkReal x2058=(sj0*sj4);
IkReal x2059=(cj5*r00);
IkReal x2060=((0.007)*cj0);
IkReal x2061=(sj0*sj5);
IkReal x2062=((0.0809712504171555)*sj0);
IkReal x2063=((0.064677809339343)*r20);
IkReal x2064=((1.0)*cj0);
IkReal x2065=((0.0160210495477794)*r02);
IkReal x2066=((0.0160210495477794)*r12);
IkReal x2067=((0.064677809339343)*sj0);
IkReal x2068=((0.0934963197956057)*sj3);
IkReal x2069=(r22*sj0);
IkReal x2070=(r01*sj5);
IkReal x2071=((0.064677809339343)*cj0);
IkReal x2072=((0.161948875218934)*sj4);
IkReal x2073=(r20*sj4);
IkReal x2074=((0.143449603387718)*sj4);
IkReal x2075=(r11*sj5);
IkReal x2076=(sj0*x2060);
IkReal x2077=((0.187)*cj3*cj4);
IkReal x2078=((0.046746319868033)*cj4*sj3);
IkReal x2079=((0.29)*x2036);
IkReal x2080=(cj3*x2072);
IkReal x2081=(sj5*x2058);
IkReal x2082=((0.29)*x2035);
IkReal x2083=(sj4*x2068);
IkReal x2084=(cj0*cj5*r20);
IkReal x2085=(cj4*x2069);
IkReal x2086=(cj5*r20*sj0);
IkReal x2087=(cj0*sj0*x2082);
evalcond[0]=((((0.124232630584188)*cj4*r22))+(((-1.0)*x2079))+(((0.0627673694158124)*r22))+((r20*sj5*x2050))+pz+(((-1.0)*r20*x2044))+(((-1.0)*r21*sj5*x2074))+((x2050*x2051))+(((0.143449603387718)*cj5*x2073))+(((-0.145649059756499)*x2051)));
evalcond[1]=((((-1.0)*sj0*x2048*x2050))+(((0.143449603387718)*x2058*x2075))+(((-0.0627673694158124)*r12*sj0))+(((-1.0)*x2076))+(((-0.124232630584188)*sj0*x2054))+(((-0.143449603387718)*x2043*x2058))+(((-1.0)*py*x2047))+(((-1.0)*x2037*x2082))+(((0.145649059756499)*sj0*x2042))+((r10*sj0*x2044))+(((-1.0)*sj0*x2042*x2050)));
evalcond[2]=((((-1.0)*cj0*x2050*x2053))+(((-1.0)*px*x2064))+x2076+(((-1.0)*cj0*x2059*x2074))+(((-0.124232630584188)*cj0*x2052))+((r01*x2039*x2074))+(((0.145649059756499)*r00*x2039))+(((-1.0)*r00*x2039*x2050))+(((-0.0627673694158124)*cj0*r02))+(((-1.0)*x2038*x2082))+(((0.145649059756499)*cj0*x2053)));
evalcond[3]=((((-0.0160210495477794)*x2069))+((x2042*x2078))+((x2075*x2077))+((x2042*x2045))+((x2041*x2054))+(((-1.0)*r21*x2040*x2061))+((sj4*x2042*x2057))+((r20*x2049*x2061))+((sj0*x2079))+((x2045*x2048))+((x2040*x2086))+((x2043*x2083))+((sj4*x2048*x2057))+(((-1.0)*pz*x2047))+(((-1.0)*x2075*x2083))+(((0.0160210495477794)*x2085))+((x2048*x2078))+((sj0*x2049*x2051))+(((-1.0)*x2043*x2077))+((x2051*x2067))+((r12*x2080))+((x2061*x2063))+(((-1.0)*r12*x2041)));
evalcond[4]=(((x2053*x2078))+((r02*x2080))+((x2039*x2063))+(((-1.0)*r02*x2041))+((x2041*x2052))+((x2070*x2077))+(((0.0160210495477794)*cj4*x2056))+(((-1.0)*x2070*x2083))+((x2045*x2053))+(((-1.0)*x2059*x2077))+(((-1.0)*r21*x2039*x2040))+((x2045*x2046))+((sj4*x2053*x2057))+((x2046*x2078))+((x2040*x2084))+((x2059*x2083))+((sj4*x2046*x2057))+((r20*x2039*x2049))+((cj0*x2049*x2051))+(((-1.0)*pz*x2064))+(((-0.0160210495477794)*x2056))+((cj0*x2079))+((x2051*x2071)));
evalcond[5]=(((x2048*x2049))+(((-1.0)*sj0*x2051*x2078))+((r21*x2068*x2081))+((x2041*x2069))+(((-1.0)*r20*x2057*x2081))+((x2040*x2043))+((x2042*x2049))+(((0.0160210495477794)*x2054))+(((0.064677809339343)*x2042))+(((0.064677809339343)*x2048))+(((-0.161948875218934)*cj3*r22*x2058))+(((-1.0)*x2060))+(((-1.0)*x2066))+(((-1.0)*py))+((x2077*x2086))+(((-1.0)*r20*x2045*x2061))+(((-1.0)*cj5*r20*x2058*x2068))+(((-1.0)*x2051*x2057*x2058))+(((-1.0)*x2041*x2085))+(((-1.0)*sj0*x2082))+(((-1.0)*r21*x2061*x2077))+(((-1.0)*r20*x2061*x2078))+(((-1.0)*x2040*x2075))+(((-1.0)*sj0*x2045*x2051)));
evalcond[6]=((((-1.0)*x2039*x2057*x2073))+(((0.064677809339343)*x2053))+(((0.007)*sj0))+(((-1.0)*r20*x2039*x2078))+(((0.0160210495477794)*x2052))+(((-1.0)*cj0*sj4*x2051*x2057))+((x2040*x2059))+((x2049*x2053))+(((-1.0)*r20*x2039*x2045))+((x2041*x2056))+((r21*x2039*x2083))+(((0.064677809339343)*x2046))+(((-1.0)*x2065))+(((-1.0)*cj0*x2051*x2078))+(((-1.0)*cj0*x2082))+(((-1.0)*px))+((x2077*x2084))+(((-1.0)*cj0*cj5*x2068*x2073))+(((-1.0)*cj4*x2041*x2056))+((x2046*x2049))+(((-1.0)*r21*x2039*x2077))+(((-1.0)*x2040*x2070))+(((-1.0)*x2056*x2080))+(((-1.0)*cj0*x2045*x2051)));
evalcond[7]=((((-1.0)*sj0*x2065))+(((-1.0)*x2087))+(((0.0160210495477794)*sj0*x2052))+((r11*x2039*x2072))+((sj0*x2046*x2049))+(((-1.0)*cj0*x2042*x2055))+((sj0*x2040*x2059))+(((-0.046746319868033)*cj0*r12))+(((-1.0)*cj0*x2043*x2072))+(((0.0809712504171555)*cj0*x2042))+(((-0.140253680131967)*cj0*x2054))+((x2046*x2067))+(((0.007)*x2037))+(((-1.0)*r01*x2040*x2061))+(((-1.0)*r10*x2039*x2055))+((sj0*x2049*x2053))+(((0.0809712504171555)*r10*x2039))+(((-1.0)*px*x2047))+((x2053*x2067)));
evalcond[8]=(((x2042*x2071))+(((0.0160210495477794)*cj0*x2054))+((cj0*x2042*x2049))+(((-1.0)*sj0*x2046*x2055))+(((-1.0)*sj0*x2053*x2055))+(((-1.0)*x2087))+((r10*x2039*x2049))+(((-0.161948875218934)*x2058*x2059))+(((-1.0)*cj0*x2066))+(((0.064677809339343)*r10*x2039))+((cj0*x2040*x2043))+(((-0.007)*x2038))+(((-0.140253680131967)*sj0*x2052))+((x2046*x2062))+(((0.161948875218934)*x2058*x2070))+(((-1.0)*r11*x2039*x2040))+(((-0.046746319868033)*r02*sj0))+(((-1.0)*py*x2064))+((x2053*x2062)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2088=((0.249980320149909)*cj1);
IkReal x2089=((0.433001339129174)*sj1);
IkReal x2090=(cj5*r21);
IkReal x2091=(r20*sj5);
IkReal x2092=((0.433001339129174)*cj1);
IkReal x2093=(r00*sj5);
IkReal x2094=((0.249980320149909)*sj1);
IkReal x2095=(cj5*r01);
IkReal x2096=((0.866036765876652)*cj5*sj4);
IkReal x2097=(cj4*x2095);
IkReal x2098=((0.866036765876652)*sj4*sj5);
IkReal x2099=((0.750019679850091)*cj4*r02);
IkReal x2100=((0.750019679850091)*cj4*r22);
if( IKabs((((cj1*x2099))+((r02*x2088))+((cj1*r00*x2096))+(((-1.0)*cj1*r01*x2098))+((cj4*x2089*x2091))+((cj4*x2089*x2090))+((cj4*x2092*x2093))+((r22*x2094))+(((-1.0)*x2089*x2090))+(((-1.0)*x2089*x2091))+((r20*sj1*x2096))+((x2092*x2097))+(((-1.0)*x2092*x2093))+(((-1.0)*x2092*x2095))+((sj1*x2100))+(((-1.0)*r21*sj1*x2098)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x2090*x2092))+(((-1.0)*x2090*x2092))+((cj4*x2091*x2092))+(((-1.0)*x2091*x2092))+((cj1*r20*x2096))+(((-1.0)*x2089*x2097))+((x2089*x2093))+((x2089*x2095))+(((-1.0)*r00*sj1*x2096))+((cj1*x2100))+((r01*sj1*x2098))+(((-1.0)*r02*x2094))+(((-1.0)*cj1*r21*x2098))+(((-1.0)*sj1*x2099))+((r22*x2088))+(((-1.0)*cj4*x2089*x2093)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*x2099))+((r02*x2088))+((cj1*r00*x2096))+(((-1.0)*cj1*r01*x2098))+((cj4*x2089*x2091))+((cj4*x2089*x2090))+((cj4*x2092*x2093))+((r22*x2094))+(((-1.0)*x2089*x2090))+(((-1.0)*x2089*x2091))+((r20*sj1*x2096))+((x2092*x2097))+(((-1.0)*x2092*x2093))+(((-1.0)*x2092*x2095))+((sj1*x2100))+(((-1.0)*r21*sj1*x2098))))+IKsqr((((cj4*x2090*x2092))+(((-1.0)*x2090*x2092))+((cj4*x2091*x2092))+(((-1.0)*x2091*x2092))+((cj1*r20*x2096))+(((-1.0)*x2089*x2097))+((x2089*x2093))+((x2089*x2095))+(((-1.0)*r00*sj1*x2096))+((cj1*x2100))+((r01*sj1*x2098))+(((-1.0)*r02*x2094))+(((-1.0)*cj1*r21*x2098))+(((-1.0)*sj1*x2099))+((r22*x2088))+(((-1.0)*cj4*x2089*x2093))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*x2099))+((r02*x2088))+((cj1*r00*x2096))+(((-1.0)*cj1*r01*x2098))+((cj4*x2089*x2091))+((cj4*x2089*x2090))+((cj4*x2092*x2093))+((r22*x2094))+(((-1.0)*x2089*x2090))+(((-1.0)*x2089*x2091))+((r20*sj1*x2096))+((x2092*x2097))+(((-1.0)*x2092*x2093))+(((-1.0)*x2092*x2095))+((sj1*x2100))+(((-1.0)*r21*sj1*x2098))), (((cj4*x2090*x2092))+(((-1.0)*x2090*x2092))+((cj4*x2091*x2092))+(((-1.0)*x2091*x2092))+((cj1*r20*x2096))+(((-1.0)*x2089*x2097))+((x2089*x2093))+((x2089*x2095))+(((-1.0)*r00*sj1*x2096))+((cj1*x2100))+((r01*sj1*x2098))+(((-1.0)*r02*x2094))+(((-1.0)*cj1*r21*x2098))+(((-1.0)*sj1*x2099))+((r22*x2088))+(((-1.0)*cj4*x2089*x2093))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2101=IKsin(j2);
IkReal x2102=IKcos(j2);
IkReal x2103=(cj4*r02);
IkReal x2104=(cj4*sj5);
IkReal x2105=((0.433001339129174)*r20);
IkReal x2106=(cj5*r21);
IkReal x2107=(cj4*cj5);
IkReal x2108=((0.249980320149909)*sj3);
IkReal x2109=((1.0)*cj3);
IkReal x2110=(r00*sj5);
IkReal x2111=((0.750019679850091)*sj3);
IkReal x2112=((0.0160210495477794)*r22);
IkReal x2113=(cj5*r01);
IkReal x2114=((0.499980319762597)*sj4);
IkReal x2115=((0.866036765876652)*sj4);
IkReal x2116=(cj5*r20);
IkReal x2117=(r01*sj5);
IkReal x2118=((0.433001339129174)*sj3);
IkReal x2119=((0.0184992718312161)*sj4);
IkReal x2120=(r21*sj5);
IkReal x2121=(r20*sj5);
IkReal x2122=(cj4*r22);
IkReal x2123=(cj1*x2102);
IkReal x2124=(sj1*x2101);
IkReal x2125=(cj5*r00*sj4);
IkReal x2126=(cj1*x2101);
IkReal x2127=(r20*x2114);
IkReal x2128=(sj1*x2102);
IkReal x2129=(x2123+x2124);
evalcond[0]=((((0.433001339129174)*x2106))+(((-0.249980320149909)*r22))+(((-0.433001339129174)*cj4*x2106))+x2129+((x2115*x2120))+((sj5*x2105))+(((-1.0)*x2104*x2105))+(((-0.750019679850091)*x2122))+(((-1.0)*x2115*x2116)));
evalcond[1]=((((-0.750019679850091)*x2103))+(((-0.433001339129174)*r00*x2104))+(((-0.249980320149909)*r02))+(((-0.433001339129174)*r01*x2107))+(((0.433001339129174)*x2113))+(((0.433001339129174)*x2110))+x2126+(((-1.0)*cj5*r00*x2115))+(((-1.0)*x2128))+((x2115*x2117)));
evalcond[2]=((((0.064677809339343)*x2106))+((x2116*x2119))+(((-1.0)*x2119*x2120))+((cj4*x2112))+(((-0.187)*x2123))+(((-0.187)*x2124))+(((0.064677809339343)*x2121))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*x2112))+(((0.00924927184554663)*r20*x2104))+(((0.00924927184554663)*cj4*x2106)));
evalcond[3]=((((0.187)*x2128))+(((-0.0160210495477794)*r02))+(((-0.29)*sj1))+(((-1.0)*x2117*x2119))+(((0.00924927184554663)*r00*x2104))+(((0.064677809339343)*x2113))+(((0.064677809339343)*x2110))+(((0.00924927184554663)*r01*x2107))+(((-0.187)*x2126))+(((-1.0)*px))+(((0.0160210495477794)*x2103))+((cj5*r00*x2119)));
evalcond[4]=(((cj3*x2113*x2114))+((r00*x2104*x2108))+x2129+((x2111*x2113))+((x2110*x2111))+(((-1.0)*r00*x2107*x2109))+((cj3*r02*x2115))+((x2103*x2118))+((cj5*r00*sj3*x2114))+((cj3*r01*x2104))+((cj3*x2110*x2114))+((r01*x2107*x2108))+(((-1.0)*r02*x2118))+(((-1.0)*sj3*x2114*x2117)));
evalcond[5]=((((-1.0)*sj3*x2114*x2120))+((cj3*x2106*x2114))+x2128+((cj3*r21*x2104))+((x2106*x2111))+((cj3*r22*x2115))+(((-1.0)*x2126))+((cj4*x2106*x2108))+((x2111*x2121))+((cj3*x2114*x2121))+((x2118*x2122))+((sj3*x2114*x2116))+(((-1.0)*r22*x2118))+(((-1.0)*r20*x2107*x2109))+((r20*x2104*x2108)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2130=((0.249980320149909)*cj1);
IkReal x2131=((0.433001339129174)*sj1);
IkReal x2132=(cj5*r21);
IkReal x2133=(r20*sj5);
IkReal x2134=((0.433001339129174)*cj1);
IkReal x2135=(r00*sj5);
IkReal x2136=((0.249980320149909)*sj1);
IkReal x2137=(cj5*r01);
IkReal x2138=((0.866036765876652)*cj5*sj4);
IkReal x2139=(cj4*x2137);
IkReal x2140=((0.866036765876652)*sj4*sj5);
IkReal x2141=((0.750019679850091)*cj4*r02);
IkReal x2142=((0.750019679850091)*cj4*r22);
if( IKabs((((cj1*r01*x2140))+(((-1.0)*r21*sj1*x2140))+(((-1.0)*cj4*x2134*x2135))+((r20*sj1*x2138))+(((-1.0)*x2134*x2139))+((r22*x2136))+((x2134*x2135))+((x2134*x2137))+((sj1*x2142))+(((-1.0)*cj1*x2141))+(((-1.0)*x2131*x2132))+(((-1.0)*x2131*x2133))+((cj4*x2131*x2133))+((cj4*x2131*x2132))+(((-1.0)*cj1*r00*x2138))+(((-1.0)*r02*x2130)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x2142))+((r02*x2136))+((x2131*x2139))+((cj4*x2132*x2134))+(((-1.0)*cj1*r21*x2140))+((cj4*x2133*x2134))+((r22*x2130))+(((-1.0)*r01*sj1*x2140))+((sj1*x2141))+((cj1*r20*x2138))+(((-1.0)*x2132*x2134))+(((-1.0)*x2133*x2134))+((r00*sj1*x2138))+(((-1.0)*x2131*x2135))+(((-1.0)*x2131*x2137))+((cj4*x2131*x2135)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*r01*x2140))+(((-1.0)*r21*sj1*x2140))+(((-1.0)*cj4*x2134*x2135))+((r20*sj1*x2138))+(((-1.0)*x2134*x2139))+((r22*x2136))+((x2134*x2135))+((x2134*x2137))+((sj1*x2142))+(((-1.0)*cj1*x2141))+(((-1.0)*x2131*x2132))+(((-1.0)*x2131*x2133))+((cj4*x2131*x2133))+((cj4*x2131*x2132))+(((-1.0)*cj1*r00*x2138))+(((-1.0)*r02*x2130))))+IKsqr((((cj1*x2142))+((r02*x2136))+((x2131*x2139))+((cj4*x2132*x2134))+(((-1.0)*cj1*r21*x2140))+((cj4*x2133*x2134))+((r22*x2130))+(((-1.0)*r01*sj1*x2140))+((sj1*x2141))+((cj1*r20*x2138))+(((-1.0)*x2132*x2134))+(((-1.0)*x2133*x2134))+((r00*sj1*x2138))+(((-1.0)*x2131*x2135))+(((-1.0)*x2131*x2137))+((cj4*x2131*x2135))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*r01*x2140))+(((-1.0)*r21*sj1*x2140))+(((-1.0)*cj4*x2134*x2135))+((r20*sj1*x2138))+(((-1.0)*x2134*x2139))+((r22*x2136))+((x2134*x2135))+((x2134*x2137))+((sj1*x2142))+(((-1.0)*cj1*x2141))+(((-1.0)*x2131*x2132))+(((-1.0)*x2131*x2133))+((cj4*x2131*x2133))+((cj4*x2131*x2132))+(((-1.0)*cj1*r00*x2138))+(((-1.0)*r02*x2130))), (((cj1*x2142))+((r02*x2136))+((x2131*x2139))+((cj4*x2132*x2134))+(((-1.0)*cj1*r21*x2140))+((cj4*x2133*x2134))+((r22*x2130))+(((-1.0)*r01*sj1*x2140))+((sj1*x2141))+((cj1*r20*x2138))+(((-1.0)*x2132*x2134))+(((-1.0)*x2133*x2134))+((r00*sj1*x2138))+(((-1.0)*x2131*x2135))+(((-1.0)*x2131*x2137))+((cj4*x2131*x2135))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2143=IKcos(j2);
IkReal x2144=IKsin(j2);
IkReal x2145=(cj4*r02);
IkReal x2146=(cj4*sj5);
IkReal x2147=((0.433001339129174)*r20);
IkReal x2148=(cj5*r21);
IkReal x2149=(cj4*cj5);
IkReal x2150=(r01*sj3);
IkReal x2151=((1.0)*cj3);
IkReal x2152=(r00*sj5);
IkReal x2153=((0.750019679850091)*sj3);
IkReal x2154=((0.0160210495477794)*r22);
IkReal x2155=(r20*sj5);
IkReal x2156=((0.433001339129174)*sj3);
IkReal x2157=(cj4*r22);
IkReal x2158=(cj5*r01);
IkReal x2159=((0.866036765876652)*sj4);
IkReal x2160=(cj5*r20);
IkReal x2161=(sj4*sj5);
IkReal x2162=((0.499980319762597)*sj3);
IkReal x2163=((0.249980320149909)*sj3);
IkReal x2164=(sj1*x2143);
IkReal x2165=(cj1*x2143);
IkReal x2166=(cj5*r00*sj4);
IkReal x2167=((0.499980319762597)*cj3*sj4);
IkReal x2168=(sj1*x2144);
IkReal x2169=(cj1*x2144);
IkReal x2170=((1.0)*x2169);
evalcond[0]=(((r21*sj5*x2159))+(((-0.249980320149909)*r22))+(((0.433001339129174)*x2148))+x2168+x2165+(((-0.433001339129174)*cj4*x2148))+(((-1.0)*x2159*x2160))+(((-0.750019679850091)*x2157))+((sj5*x2147))+(((-1.0)*x2146*x2147)));
evalcond[1]=(((r01*sj5*x2159))+(((-1.0)*cj5*r00*x2159))+(((-0.249980320149909)*r02))+(((0.433001339129174)*x2158))+(((0.433001339129174)*x2152))+x2164+(((-0.433001339129174)*r00*x2146))+(((-0.433001339129174)*r01*x2149))+(((-1.0)*x2170))+(((-0.750019679850091)*x2145)));
evalcond[2]=((((0.00924927184554663)*r20*x2146))+(((-0.0184992718312161)*r21*x2161))+(((0.0184992718312161)*sj4*x2160))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*x2154))+(((0.00924927184554663)*cj4*x2148))+(((-0.187)*x2168))+(((-0.187)*x2165))+(((0.064677809339343)*x2155))+(((0.064677809339343)*x2148))+((cj4*x2154)));
evalcond[3]=((((0.00924927184554663)*r00*x2146))+(((-0.0160210495477794)*r02))+(((0.29)*sj1))+(((0.187)*x2169))+(((0.0184992718312161)*x2166))+(((-1.0)*px))+(((-0.187)*x2164))+(((-0.0184992718312161)*r01*x2161))+(((0.064677809339343)*x2158))+(((0.064677809339343)*x2152))+(((0.0160210495477794)*x2145))+(((0.00924927184554663)*r01*x2149)));
evalcond[4]=((((-1.0)*r20*x2149*x2151))+x2164+((x2156*x2157))+((x2148*x2167))+((r20*x2146*x2163))+((cj3*r22*x2159))+((cj3*r21*x2146))+((x2155*x2167))+((x2148*x2153))+((sj4*x2160*x2162))+(((-1.0)*r22*x2156))+(((-1.0)*x2170))+((x2153*x2155))+(((-1.0)*r21*x2161*x2162))+((cj4*x2148*x2163)));
evalcond[5]=((((0.750019679850091)*cj5*x2150))+((x2145*x2156))+((x2152*x2153))+(((-1.0)*r02*x2156))+((cj3*r01*x2146))+((cj3*r02*x2159))+((r00*x2146*x2163))+((x2162*x2166))+((x2152*x2167))+(((0.249980320149909)*x2149*x2150))+(((-1.0)*x2165))+(((-1.0)*x2168))+((x2158*x2167))+(((-0.499980319762597)*x2150*x2161))+(((-1.0)*r00*x2149*x2151)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2171=((0.433001339129174)*sj1);
IkReal x2172=(cj5*r21);
IkReal x2173=(r10*sj5);
IkReal x2174=((0.433001339129174)*cj1);
IkReal x2175=(r20*sj5);
IkReal x2176=(cj5*r11);
IkReal x2177=((0.866036765876652)*sj4);
IkReal x2178=(cj1*sj5);
IkReal x2179=(cj5*r20);
IkReal x2180=((0.249980320149909)*r22);
IkReal x2181=(sj1*sj5);
IkReal x2182=((0.249980320149909)*r12);
IkReal x2183=(cj5*r10);
IkReal x2184=((0.750019679850091)*cj4*r12);
IkReal x2185=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*x2171*x2172))+(((-1.0)*x2171*x2175))+(((-1.0)*x2174*x2176))+(((-1.0)*r11*x2177*x2178))+((cj1*x2177*x2183))+((cj1*x2182))+((cj1*x2184))+((sj1*x2185))+((sj1*x2180))+((cj4*x2171*x2175))+((cj4*x2171*x2172))+(((-1.0)*r21*x2177*x2181))+((sj1*x2177*x2179))+((cj4*x2173*x2174))+(((-1.0)*x2173*x2174))+((cj4*x2174*x2176)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2174*x2175))+(((-1.0)*r21*x2177*x2178))+((cj4*x2172*x2174))+((cj1*x2180))+((cj1*x2185))+((cj1*x2177*x2179))+((x2171*x2176))+((x2171*x2173))+((r11*x2177*x2181))+(((-1.0)*sj1*x2184))+(((-1.0)*sj1*x2182))+(((-1.0)*sj1*x2177*x2183))+(((-1.0)*x2172*x2174))+(((-1.0)*cj4*x2171*x2176))+(((-1.0)*cj4*x2171*x2173))+((cj4*x2174*x2175)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2171*x2172))+(((-1.0)*x2171*x2175))+(((-1.0)*x2174*x2176))+(((-1.0)*r11*x2177*x2178))+((cj1*x2177*x2183))+((cj1*x2182))+((cj1*x2184))+((sj1*x2185))+((sj1*x2180))+((cj4*x2171*x2175))+((cj4*x2171*x2172))+(((-1.0)*r21*x2177*x2181))+((sj1*x2177*x2179))+((cj4*x2173*x2174))+(((-1.0)*x2173*x2174))+((cj4*x2174*x2176))))+IKsqr(((((-1.0)*x2174*x2175))+(((-1.0)*r21*x2177*x2178))+((cj4*x2172*x2174))+((cj1*x2180))+((cj1*x2185))+((cj1*x2177*x2179))+((x2171*x2176))+((x2171*x2173))+((r11*x2177*x2181))+(((-1.0)*sj1*x2184))+(((-1.0)*sj1*x2182))+(((-1.0)*sj1*x2177*x2183))+(((-1.0)*x2172*x2174))+(((-1.0)*cj4*x2171*x2176))+(((-1.0)*cj4*x2171*x2173))+((cj4*x2174*x2175))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2171*x2172))+(((-1.0)*x2171*x2175))+(((-1.0)*x2174*x2176))+(((-1.0)*r11*x2177*x2178))+((cj1*x2177*x2183))+((cj1*x2182))+((cj1*x2184))+((sj1*x2185))+((sj1*x2180))+((cj4*x2171*x2175))+((cj4*x2171*x2172))+(((-1.0)*r21*x2177*x2181))+((sj1*x2177*x2179))+((cj4*x2173*x2174))+(((-1.0)*x2173*x2174))+((cj4*x2174*x2176))), ((((-1.0)*x2174*x2175))+(((-1.0)*r21*x2177*x2178))+((cj4*x2172*x2174))+((cj1*x2180))+((cj1*x2185))+((cj1*x2177*x2179))+((x2171*x2176))+((x2171*x2173))+((r11*x2177*x2181))+(((-1.0)*sj1*x2184))+(((-1.0)*sj1*x2182))+(((-1.0)*sj1*x2177*x2183))+(((-1.0)*x2172*x2174))+(((-1.0)*cj4*x2171*x2176))+(((-1.0)*cj4*x2171*x2173))+((cj4*x2174*x2175))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2186=IKsin(j2);
IkReal x2187=IKcos(j2);
IkReal x2188=(cj4*sj5);
IkReal x2189=((0.433001339129174)*r20);
IkReal x2190=((0.064677809339343)*cj5);
IkReal x2191=(r10*sj3);
IkReal x2192=(cj3*r21);
IkReal x2193=(r20*sj5);
IkReal x2194=((0.750019679850091)*sj3);
IkReal x2195=(r10*sj5);
IkReal x2196=((0.0160210495477794)*r22);
IkReal x2197=((0.499980319762597)*sj4);
IkReal x2198=(sj3*sj5);
IkReal x2199=(cj5*r21);
IkReal x2200=(cj4*r12);
IkReal x2201=((0.433001339129174)*sj3);
IkReal x2202=((0.866036765876652)*sj4);
IkReal x2203=(cj5*r10);
IkReal x2204=(cj5*r11);
IkReal x2205=(cj5*r20);
IkReal x2206=((0.433001339129174)*cj4);
IkReal x2207=(cj4*r22);
IkReal x2208=((0.00924927184554663)*cj4);
IkReal x2209=((0.0184992718312161)*sj4);
IkReal x2210=(cj1*x2187);
IkReal x2211=(sj1*x2186);
IkReal x2212=(cj1*x2186);
IkReal x2213=(sj1*x2187);
IkReal x2214=((0.249980320149909)*cj4*sj3);
IkReal x2215=(sj5*x2209);
IkReal x2216=((1.0)*cj3*cj4*cj5);
IkReal x2217=(x2211+x2210);
evalcond[0]=(((sj5*x2189))+x2217+(((-0.249980320149909)*r22))+(((-1.0)*x2188*x2189))+(((-0.750019679850091)*x2207))+(((-1.0)*x2202*x2205))+(((0.433001339129174)*x2199))+(((-1.0)*x2199*x2206))+((r21*sj5*x2202)));
evalcond[1]=((((-1.0)*x2213))+(((-1.0)*x2204*x2206))+x2212+(((0.433001339129174)*x2204))+(((-0.249980320149909)*r12))+(((-0.750019679850091)*x2200))+(((-1.0)*x2202*x2203))+(((0.433001339129174)*x2195))+((r11*sj5*x2202))+(((-0.433001339129174)*r10*x2188)));
evalcond[2]=((((0.00924927184554663)*r20*x2188))+(((-0.187)*x2210))+(((-0.187)*x2211))+((x2205*x2209))+(((-1.0)*pz))+(((0.064677809339343)*x2193))+(((-1.0)*r21*x2215))+(((0.29)*cj1))+((r21*x2190))+((x2199*x2208))+(((-1.0)*x2196))+((cj4*x2196)));
evalcond[3]=((((-0.0160210495477794)*r12))+(((-0.29)*sj1))+(((-0.187)*x2212))+(((0.00924927184554663)*r10*x2188))+(((-1.0)*r11*x2215))+(((0.187)*x2213))+((x2203*x2209))+((x2204*x2208))+(((-1.0)*py))+(((0.064677809339343)*x2195))+((r11*x2190))+(((0.0160210495477794)*x2200)));
evalcond[4]=(x2217+((cj3*r11*x2188))+(((-1.0)*r12*x2201))+((x2200*x2201))+((cj5*x2191*x2197))+((x2204*x2214))+((cj3*r12*x2202))+((x2194*x2204))+(((0.249980320149909)*x2188*x2191))+((cj3*x2195*x2197))+(((-1.0)*r11*x2197*x2198))+(((-1.0)*cj3*cj4*x2203))+(((0.750019679850091)*sj5*x2191))+((cj3*x2197*x2204)));
evalcond[5]=((((-1.0)*x2212))+x2213+((x2193*x2194))+((x2194*x2199))+(((0.249980320149909)*r20*sj3*x2188))+(((-1.0)*r22*x2201))+((x2201*x2207))+((cj3*x2193*x2197))+((cj5*x2192*x2197))+((x2188*x2192))+((x2199*x2214))+(((-1.0)*r21*x2197*x2198))+(((-1.0)*cj3*cj4*x2205))+((sj3*x2197*x2205))+((cj3*r22*x2202)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2218=((0.433001339129174)*sj1);
IkReal x2219=(cj5*r21);
IkReal x2220=(r10*sj5);
IkReal x2221=((0.433001339129174)*cj1);
IkReal x2222=(r20*sj5);
IkReal x2223=(cj5*r11);
IkReal x2224=((0.866036765876652)*sj4);
IkReal x2225=(cj1*sj5);
IkReal x2226=(cj5*r20);
IkReal x2227=((0.249980320149909)*r22);
IkReal x2228=(sj1*sj5);
IkReal x2229=((0.249980320149909)*r12);
IkReal x2230=(cj5*r10);
IkReal x2231=((0.750019679850091)*cj4*r12);
IkReal x2232=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*cj1*x2231))+((cj4*x2218*x2219))+((r11*x2224*x2225))+((sj1*x2227))+((sj1*x2232))+(((-1.0)*x2218*x2219))+((sj1*x2224*x2226))+(((-1.0)*r21*x2224*x2228))+(((-1.0)*cj4*x2221*x2223))+(((-1.0)*cj4*x2220*x2221))+(((-1.0)*cj1*x2224*x2230))+((cj4*x2218*x2222))+((x2220*x2221))+((x2221*x2223))+(((-1.0)*x2218*x2222))+(((-1.0)*cj1*x2229)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2219*x2221))+((sj1*x2229))+((sj1*x2231))+((sj1*x2224*x2230))+(((-1.0)*x2221*x2222))+((cj1*x2224*x2226))+(((-1.0)*r21*x2224*x2225))+((cj4*x2221*x2222))+((cj4*x2218*x2223))+((cj4*x2218*x2220))+(((-1.0)*x2218*x2220))+(((-1.0)*x2218*x2223))+((cj1*x2227))+(((-1.0)*r11*x2224*x2228))+((cj4*x2219*x2221))+((cj1*x2232)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x2231))+((cj4*x2218*x2219))+((r11*x2224*x2225))+((sj1*x2227))+((sj1*x2232))+(((-1.0)*x2218*x2219))+((sj1*x2224*x2226))+(((-1.0)*r21*x2224*x2228))+(((-1.0)*cj4*x2221*x2223))+(((-1.0)*cj4*x2220*x2221))+(((-1.0)*cj1*x2224*x2230))+((cj4*x2218*x2222))+((x2220*x2221))+((x2221*x2223))+(((-1.0)*x2218*x2222))+(((-1.0)*cj1*x2229))))+IKsqr(((((-1.0)*x2219*x2221))+((sj1*x2229))+((sj1*x2231))+((sj1*x2224*x2230))+(((-1.0)*x2221*x2222))+((cj1*x2224*x2226))+(((-1.0)*r21*x2224*x2225))+((cj4*x2221*x2222))+((cj4*x2218*x2223))+((cj4*x2218*x2220))+(((-1.0)*x2218*x2220))+(((-1.0)*x2218*x2223))+((cj1*x2227))+(((-1.0)*r11*x2224*x2228))+((cj4*x2219*x2221))+((cj1*x2232))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*x2231))+((cj4*x2218*x2219))+((r11*x2224*x2225))+((sj1*x2227))+((sj1*x2232))+(((-1.0)*x2218*x2219))+((sj1*x2224*x2226))+(((-1.0)*r21*x2224*x2228))+(((-1.0)*cj4*x2221*x2223))+(((-1.0)*cj4*x2220*x2221))+(((-1.0)*cj1*x2224*x2230))+((cj4*x2218*x2222))+((x2220*x2221))+((x2221*x2223))+(((-1.0)*x2218*x2222))+(((-1.0)*cj1*x2229))), ((((-1.0)*x2219*x2221))+((sj1*x2229))+((sj1*x2231))+((sj1*x2224*x2230))+(((-1.0)*x2221*x2222))+((cj1*x2224*x2226))+(((-1.0)*r21*x2224*x2225))+((cj4*x2221*x2222))+((cj4*x2218*x2223))+((cj4*x2218*x2220))+(((-1.0)*x2218*x2220))+(((-1.0)*x2218*x2223))+((cj1*x2227))+(((-1.0)*r11*x2224*x2228))+((cj4*x2219*x2221))+((cj1*x2232))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2233=IKcos(j2);
IkReal x2234=IKsin(j2);
IkReal x2235=(cj4*sj5);
IkReal x2236=((0.433001339129174)*r20);
IkReal x2237=((0.064677809339343)*cj5);
IkReal x2238=(r10*sj3);
IkReal x2239=(cj3*sj4);
IkReal x2240=((0.433001339129174)*r10);
IkReal x2241=((0.0160210495477794)*r22);
IkReal x2242=(r20*sj5);
IkReal x2243=(r11*sj5);
IkReal x2244=(cj5*r20);
IkReal x2245=(cj5*r21);
IkReal x2246=((0.866036765876652)*sj4);
IkReal x2247=(cj5*r10);
IkReal x2248=(cj5*r11);
IkReal x2249=((0.750019679850091)*sj3);
IkReal x2250=(cj4*sj3);
IkReal x2251=((0.750019679850091)*cj4);
IkReal x2252=((0.433001339129174)*cj4);
IkReal x2253=((0.433001339129174)*r22);
IkReal x2254=((0.0160210495477794)*r12);
IkReal x2255=((0.0184992718312161)*sj4);
IkReal x2256=(r21*sj5);
IkReal x2257=(r10*sj5);
IkReal x2258=((0.00924927184554663)*cj4);
IkReal x2259=(sj1*x2233);
IkReal x2260=(cj1*x2233);
IkReal x2261=((0.433001339129174)*r12*sj3);
IkReal x2262=((0.499980319762597)*sj3*sj4);
IkReal x2263=(sj1*x2234);
IkReal x2264=(cj1*x2234);
IkReal x2265=((1.0)*x2264);
IkReal x2266=((1.0)*cj3*cj4*cj5);
evalcond[0]=(((x2246*x2256))+x2263+x2260+(((0.433001339129174)*x2245))+(((-1.0)*r22*x2251))+(((-0.249980320149909)*r22))+(((-1.0)*x2235*x2236))+(((-1.0)*x2244*x2246))+((sj5*x2236))+(((-1.0)*x2245*x2252)));
evalcond[1]=(x2259+(((0.433001339129174)*x2248))+((x2243*x2246))+((sj5*x2240))+(((-0.249980320149909)*r12))+(((-1.0)*r12*x2251))+(((-1.0)*x2248*x2252))+(((-1.0)*x2246*x2247))+(((-1.0)*x2265))+(((-1.0)*x2235*x2240)));
evalcond[2]=((((-1.0)*x2255*x2256))+((x2245*x2258))+(((0.064677809339343)*x2242))+((r21*x2237))+(((0.00924927184554663)*r20*x2235))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*x2241))+((cj4*x2241))+((x2244*x2255))+(((-0.187)*x2260))+(((-0.187)*x2263)));
evalcond[3]=((((0.187)*x2264))+(((0.29)*sj1))+(((-0.187)*x2259))+(((0.064677809339343)*x2257))+(((-1.0)*x2254))+((x2247*x2255))+(((-1.0)*py))+(((-1.0)*x2243*x2255))+((cj4*x2254))+(((0.00924927184554663)*r10*x2235))+((r11*x2237))+((x2248*x2258)));
evalcond[4]=((((-1.0)*x2256*x2262))+(((-1.0)*cj3*cj4*x2244))+(((-1.0)*sj3*x2253))+x2259+((x2244*x2262))+(((0.499980319762597)*x2239*x2242))+(((0.499980319762597)*x2239*x2245))+(((0.249980320149909)*r20*sj3*x2235))+(((0.866036765876652)*r22*x2239))+(((0.249980320149909)*x2245*x2250))+((cj3*r21*x2235))+(((-1.0)*x2265))+((x2250*x2253))+((x2242*x2249))+((x2245*x2249)));
evalcond[5]=((((-1.0)*cj3*cj4*x2247))+(((0.499980319762597)*cj5*sj4*x2238))+(((0.866036765876652)*r12*x2239))+(((0.750019679850091)*sj5*x2238))+(((-1.0)*x2243*x2262))+(((0.249980320149909)*x2248*x2250))+(((0.499980319762597)*x2239*x2248))+((cj3*r11*x2235))+(((0.499980319762597)*x2239*x2257))+(((0.433001339129174)*r12*x2250))+((x2248*x2249))+(((-1.0)*x2261))+(((-1.0)*x2263))+(((-1.0)*x2260))+(((0.249980320149909)*x2235*x2238)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2267=(sj0*sj5);
IkReal x2268=((0.866036765876652)*sj4);
IkReal x2269=(cj1*r21);
IkReal x2270=((0.433001339129174)*sj1);
IkReal x2271=(cj4*r20);
IkReal x2272=(r10*sj5);
IkReal x2273=(cj4*cj5);
IkReal x2274=(cj1*r11);
IkReal x2275=(cj5*sj0);
IkReal x2276=(r22*sj0);
IkReal x2277=((0.249980320149909)*cj1);
IkReal x2278=(cj5*r10);
IkReal x2279=((0.750019679850091)*cj4);
IkReal x2280=((0.433001339129174)*cj1);
IkReal x2281=((0.249980320149909)*sj1);
IkReal x2282=(r12*x2279);
CheckValue<IkReal> x2283=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x2283.valid){
continue;
}
CheckValue<IkReal> x2284 = IKatan2WithCheck(IkReal(((((0.433001339129174)*x2273*x2274))+(((-1.0)*r20*x2267*x2270))+(((-0.433001339129174)*cj5*x2274))+((r20*sj1*x2268*x2275))+(((-1.0)*x2272*x2280))+(((-1.0)*r21*sj1*x2267*x2268))+(((-1.0)*sj5*x2268*x2274))+((cj1*x2268*x2278))+((cj4*x2272*x2280))+((sj1*x2276*x2279))+((cj1*x2282))+((r12*x2277))+(((-1.0)*r21*x2270*x2275))+((r21*sj0*x2270*x2273))+((x2276*x2281))+((x2267*x2270*x2271)))),IkReal(((((0.433001339129174)*sj0*x2269*x2273))+((x2270*x2272))+((cj1*x2276*x2279))+(((-1.0)*sj1*x2282))+((r11*sj1*sj5*x2268))+(((-1.0)*r12*x2281))+((cj5*r11*x2270))+((x2276*x2277))+(((-1.0)*x2267*x2268*x2269))+(((-1.0)*sj1*x2268*x2278))+(((-1.0)*r20*x2267*x2280))+(((-1.0)*cj4*x2270*x2272))+((cj1*r20*x2268*x2275))+(((-1.0)*r11*x2270*x2273))+(((-0.433001339129174)*x2269*x2275))+((x2267*x2271*x2280)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2284.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2283.value)))+(x2284.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2285=IKsin(j2);
IkReal x2286=IKcos(j2);
IkReal x2287=(cj4*r02);
IkReal x2288=(cj5*r11);
IkReal x2289=(cj3*cj4);
IkReal x2290=(r21*sj5);
IkReal x2291=(r10*sj5);
IkReal x2292=((1.0)*cj5);
IkReal x2293=((0.00924927184554663)*cj4);
IkReal x2294=((0.866036765876652)*sj4);
IkReal x2295=(cj5*r10);
IkReal x2296=(cj5*sj3);
IkReal x2297=(r00*sj5);
IkReal x2298=(cj0*sj1);
IkReal x2299=((0.433001339129174)*cj4);
IkReal x2300=((0.0184992718312161)*sj4);
IkReal x2301=(r20*sj5);
IkReal x2302=((0.249980320149909)*cj4);
IkReal x2303=(r11*sj5);
IkReal x2304=(cj5*r21);
IkReal x2305=(cj5*r00);
IkReal x2306=((0.0160210495477794)*r22);
IkReal x2307=(sj0*sj1);
IkReal x2308=(cj5*r01);
IkReal x2309=((0.750019679850091)*sj3);
IkReal x2310=(cj5*r20);
IkReal x2311=((0.750019679850091)*cj4);
IkReal x2312=(r22*sj3);
IkReal x2313=(r12*sj3);
IkReal x2314=((0.499980319762597)*sj4);
IkReal x2315=(r01*sj5);
IkReal x2316=((0.0160210495477794)*r12);
IkReal x2317=((0.433001339129174)*sj3);
IkReal x2318=(cj3*x2314);
IkReal x2319=((0.187)*x2286);
IkReal x2320=((1.0)*x2286);
IkReal x2321=(sj3*x2302);
IkReal x2322=(cj1*x2285);
IkReal x2323=(sj1*x2285);
IkReal x2324=(cj1*x2286);
IkReal x2325=(sj0*x2322);
evalcond[0]=((((-1.0)*r22*x2311))+(((-0.249980320149909)*r22))+x2323+x2324+(((-1.0)*x2299*x2301))+(((-1.0)*x2299*x2304))+(((-1.0)*x2294*x2310))+(((0.433001339129174)*x2304))+(((0.433001339129174)*x2301))+((x2290*x2294)));
evalcond[1]=(((cj0*x2322))+(((-1.0)*x2298*x2320))+(((-0.249980320149909)*r02))+(((-0.750019679850091)*x2287))+(((-1.0)*x2297*x2299))+(((-1.0)*x2294*x2305))+(((0.433001339129174)*x2297))+(((-1.0)*x2299*x2308))+(((0.433001339129174)*x2308))+((x2294*x2315)));
evalcond[2]=((((0.433001339129174)*x2288))+x2325+(((-0.249980320149909)*r12))+(((0.433001339129174)*x2291))+(((-1.0)*x2288*x2299))+(((-1.0)*r12*x2311))+(((-1.0)*x2291*x2299))+(((-1.0)*x2307*x2320))+((x2294*x2303))+(((-1.0)*x2294*x2295)));
evalcond[3]=(((x2300*x2310))+((x2293*x2301))+((x2293*x2304))+(((0.064677809339343)*x2301))+(((0.064677809339343)*x2304))+(((-1.0)*x2306))+((cj4*x2306))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*cj1*x2319))+(((-0.187)*x2323))+(((-1.0)*x2290*x2300)));
evalcond[4]=((((-0.0160210495477794)*r02))+(((0.007)*sj0))+((x2300*x2305))+((x2293*x2308))+(((0.064677809339343)*x2308))+(((-0.187)*cj0*x2322))+(((-0.29)*x2298))+(((-1.0)*px))+(((0.0160210495477794)*x2287))+(((-1.0)*x2300*x2315))+((x2293*x2297))+(((0.064677809339343)*x2297))+((x2298*x2319)));
evalcond[5]=((((-1.0)*x2300*x2303))+((x2291*x2293))+(((0.064677809339343)*x2288))+((x2295*x2300))+(((-0.007)*cj0))+(((-1.0)*py))+((cj4*x2316))+(((-0.29)*x2307))+(((-0.187)*x2325))+((x2307*x2319))+(((0.064677809339343)*x2291))+((x2288*x2293))+(((-1.0)*x2316)));
evalcond[6]=(((r20*x2296*x2314))+(((-0.433001339129174)*x2312))+((x2304*x2318))+((x2299*x2312))+(((-1.0)*sj3*x2290*x2314))+((cj3*r22*x2294))+((sj1*x2286))+((x2289*x2290))+((x2301*x2309))+((x2301*x2318))+((x2301*x2321))+((r21*x2296*x2302))+(((0.750019679850091)*r21*x2296))+(((-1.0)*x2322))+(((-1.0)*r20*x2289*x2292)));
evalcond[7]=(((r00*x2296*x2314))+((cj0*x2324))+(((-1.0)*sj3*x2314*x2315))+(((0.750019679850091)*r01*x2296))+((x2308*x2318))+((x2297*x2309))+(((-1.0)*r02*x2317))+((x2285*x2298))+((cj3*r02*x2294))+(((-1.0)*r00*x2289*x2292))+((x2297*x2318))+((x2297*x2321))+((x2289*x2315))+((r01*x2296*x2302))+((x2287*x2317)));
evalcond[8]=(((cj3*r12*x2294))+(((-0.433001339129174)*x2313))+((sj3*x2295*x2314))+((x2291*x2321))+((x2288*x2309))+((x2285*x2307))+((x2299*x2313))+((x2291*x2318))+((x2288*x2318))+((sj0*x2324))+((x2288*x2321))+(((-1.0)*sj3*x2303*x2314))+((x2291*x2309))+((x2289*x2303))+(((-1.0)*r10*x2289*x2292)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2326=((0.249980320149909)*cj1);
IkReal x2327=(cj0*cj1);
IkReal x2328=((0.750019679850091)*cj4);
IkReal x2329=(cj0*r20);
IkReal x2330=(cj1*r00);
IkReal x2331=(cj0*r22);
IkReal x2332=(r01*sj1);
IkReal x2333=((0.433001339129174)*sj1);
IkReal x2334=(cj5*r21);
IkReal x2335=((0.249980320149909)*sj1);
IkReal x2336=(cj1*r01);
IkReal x2337=((0.433001339129174)*cj5);
IkReal x2338=((0.433001339129174)*cj4);
IkReal x2339=((0.433001339129174)*sj5);
IkReal x2340=((0.866036765876652)*cj5*sj4);
IkReal x2341=((0.866036765876652)*sj4*sj5);
IkReal x2342=(cj4*x2337);
IkReal x2343=(cj4*sj5*x2333);
CheckValue<IkReal> x2344=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x2344.valid){
continue;
}
CheckValue<IkReal> x2345 = IKatan2WithCheck(IkReal((((r02*x2326))+((x2331*x2335))+((sj5*x2330*x2338))+((sj1*x2329*x2340))+(((-1.0)*cj0*x2333*x2334))+((x2329*x2343))+((cj0*cj4*x2333*x2334))+(((-1.0)*cj0*r21*sj1*x2341))+(((-1.0)*sj5*x2329*x2333))+(((-1.0)*x2336*x2341))+((cj1*r02*x2328))+(((-1.0)*x2330*x2339))+(((-1.0)*x2336*x2337))+((x2330*x2340))+((sj1*x2328*x2331))+((x2336*x2342)))),IkReal(((((-1.0)*r21*x2327*x2341))+((x2332*x2337))+((x2332*x2341))+(((-1.0)*r20*x2327*x2339))+(((-1.0)*r00*x2343))+(((-1.0)*r02*sj1*x2328))+(((-0.433001339129174)*x2327*x2334))+(((-1.0)*r02*x2335))+((x2326*x2331))+((r20*x2327*x2340))+((r22*x2327*x2328))+((r00*sj5*x2333))+((x2327*x2334*x2338))+(((-1.0)*r00*sj1*x2340))+(((-1.0)*x2332*x2342))+((r20*sj5*x2327*x2338)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2345.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2344.value)))+(x2345.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2346=IKsin(j2);
IkReal x2347=IKcos(j2);
IkReal x2348=(cj4*r02);
IkReal x2349=(cj5*r11);
IkReal x2350=(cj3*cj4);
IkReal x2351=(r21*sj5);
IkReal x2352=(r10*sj5);
IkReal x2353=((1.0)*cj5);
IkReal x2354=((0.00924927184554663)*cj4);
IkReal x2355=((0.866036765876652)*sj4);
IkReal x2356=(cj5*r10);
IkReal x2357=(cj5*sj3);
IkReal x2358=(r00*sj5);
IkReal x2359=(cj0*sj1);
IkReal x2360=((0.433001339129174)*cj4);
IkReal x2361=((0.0184992718312161)*sj4);
IkReal x2362=(r20*sj5);
IkReal x2363=((0.249980320149909)*cj4);
IkReal x2364=(r11*sj5);
IkReal x2365=(cj5*r21);
IkReal x2366=(cj5*r00);
IkReal x2367=((0.0160210495477794)*r22);
IkReal x2368=(sj0*sj1);
IkReal x2369=(cj5*r01);
IkReal x2370=((0.750019679850091)*sj3);
IkReal x2371=(cj5*r20);
IkReal x2372=((0.750019679850091)*cj4);
IkReal x2373=(r22*sj3);
IkReal x2374=(r12*sj3);
IkReal x2375=((0.499980319762597)*sj4);
IkReal x2376=(r01*sj5);
IkReal x2377=((0.0160210495477794)*r12);
IkReal x2378=((0.433001339129174)*sj3);
IkReal x2379=(cj3*x2375);
IkReal x2380=((0.187)*x2347);
IkReal x2381=((1.0)*x2347);
IkReal x2382=(sj3*x2363);
IkReal x2383=(cj1*x2346);
IkReal x2384=(sj1*x2346);
IkReal x2385=(cj1*x2347);
IkReal x2386=(sj0*x2383);
evalcond[0]=((((-0.249980320149909)*r22))+(((-1.0)*x2355*x2371))+x2385+x2384+(((0.433001339129174)*x2365))+(((0.433001339129174)*x2362))+((x2351*x2355))+(((-1.0)*x2360*x2365))+(((-1.0)*x2360*x2362))+(((-1.0)*r22*x2372)));
evalcond[1]=((((-0.249980320149909)*r02))+(((-1.0)*x2355*x2366))+(((0.433001339129174)*x2358))+(((-0.750019679850091)*x2348))+(((-1.0)*x2359*x2381))+((cj0*x2383))+(((-1.0)*x2358*x2360))+((x2355*x2376))+(((0.433001339129174)*x2369))+(((-1.0)*x2360*x2369)));
evalcond[2]=((((-1.0)*x2349*x2360))+(((0.433001339129174)*x2349))+x2386+(((-1.0)*x2355*x2356))+(((-0.249980320149909)*r12))+(((0.433001339129174)*x2352))+(((-1.0)*x2368*x2381))+((x2355*x2364))+(((-1.0)*r12*x2372))+(((-1.0)*x2352*x2360)));
evalcond[3]=((((-0.187)*x2384))+((cj4*x2367))+(((-1.0)*x2367))+(((-1.0)*cj1*x2380))+(((0.064677809339343)*x2362))+(((0.064677809339343)*x2365))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*x2351*x2361))+((x2361*x2371))+((x2354*x2365))+((x2354*x2362)));
evalcond[4]=((((-0.187)*cj0*x2383))+(((-0.0160210495477794)*r02))+((x2359*x2380))+(((0.007)*sj0))+(((0.064677809339343)*x2358))+((x2354*x2358))+(((0.064677809339343)*x2369))+(((-1.0)*px))+((x2361*x2366))+((x2354*x2369))+(((-0.29)*x2359))+(((0.0160210495477794)*x2348))+(((-1.0)*x2361*x2376)));
evalcond[5]=((((-0.187)*x2386))+(((0.064677809339343)*x2352))+(((0.064677809339343)*x2349))+((cj4*x2377))+((x2352*x2354))+(((-1.0)*x2377))+(((-0.007)*cj0))+(((-1.0)*py))+(((-0.29)*x2368))+((x2368*x2380))+(((-1.0)*x2361*x2364))+((x2349*x2354))+((x2356*x2361)));
evalcond[6]=(((sj1*x2347))+((r20*x2357*x2375))+((x2362*x2382))+((x2365*x2379))+(((-1.0)*sj3*x2351*x2375))+(((-1.0)*x2383))+((x2350*x2351))+((x2360*x2373))+(((-0.433001339129174)*x2373))+((r21*x2357*x2363))+((x2362*x2370))+((x2362*x2379))+(((0.750019679850091)*r21*x2357))+((cj3*r22*x2355))+(((-1.0)*r20*x2350*x2353)));
evalcond[7]=(((x2346*x2359))+(((-1.0)*r02*x2378))+(((0.750019679850091)*r01*x2357))+((x2358*x2382))+((x2348*x2378))+((x2358*x2370))+((x2358*x2379))+((cj0*x2385))+((x2350*x2376))+((r01*x2357*x2363))+((r00*x2357*x2375))+(((-1.0)*sj3*x2375*x2376))+(((-1.0)*r00*x2350*x2353))+((cj3*r02*x2355))+((x2369*x2379)));
evalcond[8]=(((sj3*x2356*x2375))+((x2349*x2382))+((x2350*x2364))+((x2360*x2374))+(((-1.0)*r10*x2350*x2353))+(((-0.433001339129174)*x2374))+((x2352*x2382))+((cj3*r12*x2355))+((x2352*x2379))+((x2352*x2370))+((x2346*x2368))+((sj0*x2385))+(((-1.0)*sj3*x2364*x2375))+((x2349*x2370))+((x2349*x2379)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2387=(r10*sj5);
IkReal x2388=((0.249980320149909)*cj4);
IkReal x2389=(cj5*r11);
IkReal x2390=((0.433001339129174)*r22);
IkReal x2391=((0.433001339129174)*r12);
IkReal x2392=((0.866036765876652)*sj4);
IkReal x2393=((0.499980319762597)*sj4);
IkReal x2394=(cj5*r21);
IkReal x2395=(r11*sj5);
IkReal x2396=(r20*sj5);
IkReal x2397=(r21*x2393);
IkReal x2398=((1.0)*cj4*cj5);
IkReal x2399=(((cj4*r21*sj5))+(((-1.0)*r20*x2398))+((x2393*x2396))+((x2393*x2394))+((r22*x2392)));
IkReal x2400=((((-1.0)*cj5*r20*x2393))+x2390+(((-1.0)*cj4*x2390))+((sj5*x2397))+(((-0.750019679850091)*x2396))+(((-0.750019679850091)*x2394))+(((-1.0)*x2388*x2394))+(((-1.0)*x2388*x2396)));
CheckValue<IkReal> x2401 = IKatan2WithCheck(IkReal((cj0*x2400)),IkReal(((-1.0)*cj0*x2399)),IKFAST_ATAN2_MAGTHRESH);
if(!x2401.valid){
continue;
}
CheckValue<IkReal> x2402=IKPowWithIntegerCheck(IKsign((((x2399*((x2391+(((-1.0)*cj5*r10*x2393))+(((-1.0)*cj4*x2391))+((x2393*x2395))+(((-1.0)*x2388*x2389))+(((-1.0)*x2387*x2388))+(((-0.750019679850091)*x2387))+(((-0.750019679850091)*x2389))))))+((x2400*(((((-1.0)*x2389*x2393))+((r10*x2398))+(((-1.0)*cj4*x2395))+(((-1.0)*x2387*x2393))+(((-1.0)*r12*x2392)))))))),-1);
if(!x2402.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x2401.value)+(((1.5707963267949)*(x2402.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x2403=IKcos(j3);
IkReal x2404=IKsin(j3);
IkReal x2405=(r10*sj5);
IkReal x2406=((0.499980319762597)*sj4);
IkReal x2407=(cj5*r01);
IkReal x2408=(r21*sj5);
IkReal x2409=((0.249980320149909)*cj4);
IkReal x2410=(cj5*r11);
IkReal x2411=(cj5*r21);
IkReal x2412=((0.433001339129174)*r22);
IkReal x2413=(r00*sj5);
IkReal x2414=((0.433001339129174)*r12);
IkReal x2415=((0.866036765876652)*sj4);
IkReal x2416=(cj5*r00);
IkReal x2417=((1.0)*cj4);
IkReal x2418=(r11*sj5);
IkReal x2419=(cj5*r20);
IkReal x2420=(r20*sj5);
IkReal x2421=(cj5*r10);
IkReal x2422=(r01*sj5);
IkReal x2423=((0.433001339129174)*r02);
evalcond[0]=(((x2403*(((((-1.0)*x2409*x2420))+x2412+(((-1.0)*x2406*x2419))+(((-0.750019679850091)*x2420))+(((-1.0)*cj4*x2412))+(((-0.750019679850091)*x2411))+((x2406*x2408))+(((-1.0)*x2409*x2411))))))+((x2404*((((r22*x2415))+((x2406*x2411))+(((-1.0)*x2417*x2419))+((x2406*x2420))+((cj4*x2408)))))));
evalcond[1]=(cj0+((x2403*(((((-1.0)*x2405*x2409))+x2414+(((-1.0)*x2406*x2421))+((x2406*x2418))+(((-1.0)*cj4*x2414))+(((-0.750019679850091)*x2410))+(((-1.0)*x2409*x2410))+(((-0.750019679850091)*x2405))))))+((x2404*((((x2406*x2410))+((cj4*x2418))+(((-1.0)*x2417*x2421))+((x2405*x2406))+((r12*x2415)))))));
evalcond[2]=((((-1.0)*sj0))+((x2404*((((x2406*x2413))+(((-1.0)*x2416*x2417))+((cj4*x2422))+((r02*x2415))+((x2406*x2407))))))+((x2403*(((((-1.0)*x2407*x2409))+x2423+(((-1.0)*cj4*x2423))+(((-1.0)*x2406*x2416))+((x2406*x2422))+(((-0.750019679850091)*x2413))+(((-1.0)*x2409*x2413))+(((-0.750019679850091)*x2407)))))));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2424=((0.502238137091374)*cj5);
IkReal x2425=((0.502238137091374)*sj5);
IkReal x2426=((0.428388381324785)*cj4);
IkReal x2427=((0.247317167488307)*cj4);
IkReal x2428=((0.494653804785234)*sj4);
if( IKabs(((((-3.44827586206897)*py))+(((-0.216439204882112)*r12))+((r10*x2425))+(((-1.0)*r12*x2426))+(((-1.0)*cj5*r11*x2427))+((r11*x2424))+((r11*sj5*x2428))+(((-1.0)*r10*sj5*x2427))+(((-1.0)*cj5*r10*x2428)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2426))+(((-1.0)*r20*x2425))+(((0.216439204882112)*r22))+(((-1.0)*r21*x2424))+((cj5*r21*x2427))+(((3.44827586206897)*pz))+((cj5*r20*x2428))+(((-1.0)*r21*sj5*x2428))+((r20*sj5*x2427)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-3.44827586206897)*py))+(((-0.216439204882112)*r12))+((r10*x2425))+(((-1.0)*r12*x2426))+(((-1.0)*cj5*r11*x2427))+((r11*x2424))+((r11*sj5*x2428))+(((-1.0)*r10*sj5*x2427))+(((-1.0)*cj5*r10*x2428))))+IKsqr((((r22*x2426))+(((-1.0)*r20*x2425))+(((0.216439204882112)*r22))+(((-1.0)*r21*x2424))+((cj5*r21*x2427))+(((3.44827586206897)*pz))+((cj5*r20*x2428))+(((-1.0)*r21*sj5*x2428))+((r20*sj5*x2427))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-3.44827586206897)*py))+(((-0.216439204882112)*r12))+((r10*x2425))+(((-1.0)*r12*x2426))+(((-1.0)*cj5*r11*x2427))+((r11*x2424))+((r11*sj5*x2428))+(((-1.0)*r10*sj5*x2427))+(((-1.0)*cj5*r10*x2428))), (((r22*x2426))+(((-1.0)*r20*x2425))+(((0.216439204882112)*r22))+(((-1.0)*r21*x2424))+((cj5*r21*x2427))+(((3.44827586206897)*pz))+((cj5*r20*x2428))+(((-1.0)*r21*sj5*x2428))+((r20*sj5*x2427))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2429=((1.0)*py);
IkReal x2430=((0.064677809339343)*cj5);
IkReal x2431=(cj3*cj5);
IkReal x2432=(cj4*r10);
IkReal x2433=(r20*sj5);
IkReal x2434=(cj5*sj3);
IkReal x2435=((0.0934963197956057)*sj4);
IkReal x2436=((0.145649059756499)*cj5);
IkReal x2437=((0.140253680131967)*sj3);
IkReal x2438=(cj4*r11);
IkReal x2439=(r11*sj5);
IkReal x2440=(cj4*r12);
IkReal x2441=((0.0160210495477794)*r22);
IkReal x2442=(r10*sj5);
IkReal x2443=((0.0184992718312161)*sj4);
IkReal x2444=(r21*sj5);
IkReal x2445=((0.143449603387718)*sj4);
IkReal x2446=((0.0809712504171555)*sj3);
IkReal x2447=((0.187)*cj3);
IkReal x2448=(cj5*r10);
IkReal x2449=(cj5*r20);
IkReal x2450=((0.29)*(IKsin(j1)));
IkReal x2451=((0.29)*(IKcos(j1)));
IkReal x2452=(r22*x2446);
IkReal x2453=((0.161948875218934)*cj3*sj4);
IkReal x2454=(cj4*cj5*r21);
IkReal x2455=((0.046746319868033)*cj4*sj3*sj5);
IkReal x2456=(x2450+x2429);
evalcond[0]=((((0.124232630584188)*cj4*r22))+(((-1.0)*x2444*x2445))+(((0.0717219785716089)*cj4*x2433))+(((0.0627673694158124)*r22))+pz+((x2445*x2449))+(((-1.0)*x2451))+(((-0.145649059756499)*x2433))+(((0.0717219785716089)*x2454))+(((-1.0)*r21*x2436)));
evalcond[1]=((((-0.0627673694158124)*r12))+((r11*x2436))+(((-0.124232630584188)*x2440))+(((-1.0)*x2445*x2448))+(((-0.0717219785716089)*cj5*x2438))+(((-0.0717219785716089)*sj5*x2432))+((x2439*x2445))+(((-1.0)*x2456))+(((0.145649059756499)*x2442)));
evalcond[2]=((((-1.0)*x2433*x2437))+(((-0.0160210495477794)*r12))+(((-0.046746319868033)*cj4*r21*x2434))+(((0.00924927184554663)*sj5*x2432))+(((-0.046746319868033)*cj4*sj3*x2433))+x2452+(((-1.0)*r20*x2434*x2435))+((r11*x2430))+(((-1.0)*cj4*x2452))+(((-1.0)*cj3*x2433*x2435))+((x2443*x2448))+(((0.064677809339343)*x2442))+(((0.0160210495477794)*x2440))+(((0.00924927184554663)*cj5*x2438))+(((-1.0)*x2439*x2443))+(((-0.140253680131967)*r21*x2434))+(((-1.0)*r22*x2453))+(((0.187)*cj4*r20*x2431))+(((-1.0)*x2456))+(((-1.0)*r21*x2431*x2435))+((sj3*x2435*x2444))+(((-1.0)*cj4*x2444*x2447)));
evalcond[3]=((((-1.0)*x2443*x2444))+(((0.064677809339343)*x2433))+x2451+((r11*x2431*x2435))+(((-0.187)*x2431*x2432))+((x2443*x2449))+((x2440*x2446))+((r10*x2434*x2435))+((cj3*x2435*x2442))+((sj5*x2438*x2447))+(((0.00924927184554663)*x2454))+(((0.046746319868033)*sj3*sj5*x2432))+(((0.00924927184554663)*cj4*x2433))+(((-1.0)*pz))+((cj4*x2441))+(((-1.0)*r12*x2446))+((r12*x2453))+((r21*x2430))+(((0.140253680131967)*r11*x2434))+((x2437*x2442))+(((0.046746319868033)*x2434*x2438))+(((-1.0)*x2441))+(((-1.0)*sj3*x2435*x2439)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2457=((0.433001339129174)*sj1);
IkReal x2458=(cj5*r21);
IkReal x2459=(r10*sj5);
IkReal x2460=((0.433001339129174)*cj1);
IkReal x2461=(r20*sj5);
IkReal x2462=(cj5*r11);
IkReal x2463=((0.866036765876652)*sj4);
IkReal x2464=(cj1*sj5);
IkReal x2465=(cj5*r20);
IkReal x2466=((0.249980320149909)*r22);
IkReal x2467=(sj1*sj5);
IkReal x2468=((0.249980320149909)*r12);
IkReal x2469=(cj5*r10);
IkReal x2470=((0.750019679850091)*cj4*r12);
IkReal x2471=((0.750019679850091)*cj4*r22);
if( IKabs((((cj4*x2457*x2461))+((cj4*x2460*x2462))+((cj1*x2468))+(((-1.0)*x2457*x2461))+((cj4*x2457*x2458))+((cj1*x2463*x2469))+((cj4*x2459*x2460))+(((-1.0)*x2457*x2458))+((sj1*x2471))+((sj1*x2466))+(((-1.0)*x2460*x2462))+(((-1.0)*r11*x2463*x2464))+((sj1*x2463*x2465))+(((-1.0)*x2459*x2460))+(((-1.0)*r21*x2463*x2467))+((cj1*x2470)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r11*x2463*x2467))+(((-1.0)*cj4*x2457*x2462))+((cj4*x2460*x2461))+(((-1.0)*sj1*x2463*x2469))+((cj1*x2466))+((cj1*x2463*x2465))+((cj4*x2458*x2460))+((x2457*x2459))+((x2457*x2462))+(((-1.0)*sj1*x2470))+(((-1.0)*x2460*x2461))+(((-1.0)*sj1*x2468))+(((-1.0)*cj4*x2457*x2459))+(((-1.0)*x2458*x2460))+(((-1.0)*r21*x2463*x2464))+((cj1*x2471)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x2457*x2461))+((cj4*x2460*x2462))+((cj1*x2468))+(((-1.0)*x2457*x2461))+((cj4*x2457*x2458))+((cj1*x2463*x2469))+((cj4*x2459*x2460))+(((-1.0)*x2457*x2458))+((sj1*x2471))+((sj1*x2466))+(((-1.0)*x2460*x2462))+(((-1.0)*r11*x2463*x2464))+((sj1*x2463*x2465))+(((-1.0)*x2459*x2460))+(((-1.0)*r21*x2463*x2467))+((cj1*x2470))))+IKsqr((((r11*x2463*x2467))+(((-1.0)*cj4*x2457*x2462))+((cj4*x2460*x2461))+(((-1.0)*sj1*x2463*x2469))+((cj1*x2466))+((cj1*x2463*x2465))+((cj4*x2458*x2460))+((x2457*x2459))+((x2457*x2462))+(((-1.0)*sj1*x2470))+(((-1.0)*x2460*x2461))+(((-1.0)*sj1*x2468))+(((-1.0)*cj4*x2457*x2459))+(((-1.0)*x2458*x2460))+(((-1.0)*r21*x2463*x2464))+((cj1*x2471))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x2457*x2461))+((cj4*x2460*x2462))+((cj1*x2468))+(((-1.0)*x2457*x2461))+((cj4*x2457*x2458))+((cj1*x2463*x2469))+((cj4*x2459*x2460))+(((-1.0)*x2457*x2458))+((sj1*x2471))+((sj1*x2466))+(((-1.0)*x2460*x2462))+(((-1.0)*r11*x2463*x2464))+((sj1*x2463*x2465))+(((-1.0)*x2459*x2460))+(((-1.0)*r21*x2463*x2467))+((cj1*x2470))), (((r11*x2463*x2467))+(((-1.0)*cj4*x2457*x2462))+((cj4*x2460*x2461))+(((-1.0)*sj1*x2463*x2469))+((cj1*x2466))+((cj1*x2463*x2465))+((cj4*x2458*x2460))+((x2457*x2459))+((x2457*x2462))+(((-1.0)*sj1*x2470))+(((-1.0)*x2460*x2461))+(((-1.0)*sj1*x2468))+(((-1.0)*cj4*x2457*x2459))+(((-1.0)*x2458*x2460))+(((-1.0)*r21*x2463*x2464))+((cj1*x2471))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2472=IKsin(j2);
IkReal x2473=IKcos(j2);
IkReal x2474=(cj4*sj5);
IkReal x2475=((0.433001339129174)*r20);
IkReal x2476=((0.064677809339343)*cj5);
IkReal x2477=(r10*sj3);
IkReal x2478=(cj3*r21);
IkReal x2479=(r20*sj5);
IkReal x2480=((0.750019679850091)*sj3);
IkReal x2481=(r10*sj5);
IkReal x2482=((0.0160210495477794)*r22);
IkReal x2483=((0.499980319762597)*sj4);
IkReal x2484=(sj3*sj5);
IkReal x2485=(cj5*r21);
IkReal x2486=(cj4*r12);
IkReal x2487=((0.433001339129174)*sj3);
IkReal x2488=((0.866036765876652)*sj4);
IkReal x2489=(cj5*r10);
IkReal x2490=(cj5*r11);
IkReal x2491=(cj5*r20);
IkReal x2492=((0.433001339129174)*cj4);
IkReal x2493=(cj4*r22);
IkReal x2494=((0.00924927184554663)*cj4);
IkReal x2495=((0.0184992718312161)*sj4);
IkReal x2496=(cj1*x2473);
IkReal x2497=(sj1*x2472);
IkReal x2498=(cj1*x2472);
IkReal x2499=(sj1*x2473);
IkReal x2500=((0.249980320149909)*cj4*sj3);
IkReal x2501=(sj5*x2495);
IkReal x2502=((1.0)*cj3*cj4*cj5);
IkReal x2503=(x2497+x2496);
evalcond[0]=(x2503+(((-0.249980320149909)*r22))+(((-1.0)*x2474*x2475))+(((-1.0)*x2485*x2492))+(((-0.750019679850091)*x2493))+(((-1.0)*x2488*x2491))+((sj5*x2475))+(((0.433001339129174)*x2485))+((r21*sj5*x2488)));
evalcond[1]=(x2498+(((-1.0)*x2490*x2492))+(((-0.249980320149909)*r12))+(((-1.0)*x2499))+(((-0.433001339129174)*r10*x2474))+(((-0.750019679850091)*x2486))+(((-1.0)*x2488*x2489))+((r11*sj5*x2488))+(((0.433001339129174)*x2490))+(((0.433001339129174)*x2481)));
evalcond[2]=(((x2485*x2494))+((r21*x2476))+(((-1.0)*x2482))+(((-1.0)*pz))+(((0.00924927184554663)*r20*x2474))+(((0.29)*cj1))+((cj4*x2482))+((x2491*x2495))+(((0.064677809339343)*x2479))+(((-0.187)*x2496))+(((-0.187)*x2497))+(((-1.0)*r21*x2501)));
evalcond[3]=((((-0.0160210495477794)*r12))+(((-0.29)*sj1))+(((0.0160210495477794)*x2486))+(((0.00924927184554663)*r10*x2474))+((x2490*x2494))+(((-1.0)*r11*x2501))+(((-1.0)*py))+(((0.187)*x2499))+(((0.064677809339343)*x2481))+(((-0.187)*x2498))+((x2489*x2495))+((r11*x2476)));
evalcond[4]=(x2503+(((-1.0)*cj3*cj4*x2489))+(((-1.0)*r11*x2483*x2484))+((x2490*x2500))+((x2480*x2490))+((cj3*r11*x2474))+(((0.249980320149909)*x2474*x2477))+((cj3*r12*x2488))+((cj5*x2477*x2483))+((cj3*x2481*x2483))+((x2486*x2487))+((cj3*x2483*x2490))+(((-1.0)*r12*x2487))+(((0.750019679850091)*sj5*x2477)));
evalcond[5]=((((-1.0)*r22*x2487))+((cj3*x2479*x2483))+((cj5*x2478*x2483))+x2499+(((-1.0)*cj3*cj4*x2491))+(((-1.0)*x2498))+((x2487*x2493))+(((0.249980320149909)*r20*sj3*x2474))+((x2480*x2485))+((sj3*x2483*x2491))+((x2485*x2500))+(((-1.0)*r21*x2483*x2484))+((cj3*r22*x2488))+((x2474*x2478))+((x2479*x2480)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2504=((0.502238137091374)*cj5);
IkReal x2505=(r20*sj5);
IkReal x2506=((0.494653804785234)*sj4);
IkReal x2507=((0.428388381324785)*cj4);
IkReal x2508=((0.247317167488307)*cj4);
IkReal x2509=(r10*sj5);
if( IKabs(((((-0.502238137091374)*x2509))+((r12*x2507))+((cj5*r10*x2506))+(((0.216439204882112)*r12))+(((-1.0)*r11*sj5*x2506))+(((-1.0)*r11*x2504))+(((3.44827586206897)*py))+((x2508*x2509))+((cj5*r11*x2508)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.502238137091374)*x2505))+((r22*x2507))+((cj5*r20*x2506))+(((0.216439204882112)*r22))+((x2505*x2508))+((cj5*r21*x2508))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x2506))+(((-1.0)*r21*x2504)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-0.502238137091374)*x2509))+((r12*x2507))+((cj5*r10*x2506))+(((0.216439204882112)*r12))+(((-1.0)*r11*sj5*x2506))+(((-1.0)*r11*x2504))+(((3.44827586206897)*py))+((x2508*x2509))+((cj5*r11*x2508))))+IKsqr(((((-0.502238137091374)*x2505))+((r22*x2507))+((cj5*r20*x2506))+(((0.216439204882112)*r22))+((x2505*x2508))+((cj5*r21*x2508))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x2506))+(((-1.0)*r21*x2504))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-0.502238137091374)*x2509))+((r12*x2507))+((cj5*r10*x2506))+(((0.216439204882112)*r12))+(((-1.0)*r11*sj5*x2506))+(((-1.0)*r11*x2504))+(((3.44827586206897)*py))+((x2508*x2509))+((cj5*r11*x2508))), ((((-0.502238137091374)*x2505))+((r22*x2507))+((cj5*r20*x2506))+(((0.216439204882112)*r22))+((x2505*x2508))+((cj5*r21*x2508))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x2506))+(((-1.0)*r21*x2504))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2510=((0.064677809339343)*cj5);
IkReal x2511=(cj5*r10);
IkReal x2512=(r20*sj5);
IkReal x2513=((0.0160210495477794)*r22);
IkReal x2514=((0.140253680131967)*sj3);
IkReal x2515=(cj5*r21);
IkReal x2516=(cj5*r11);
IkReal x2517=(r21*sj5);
IkReal x2518=((0.00924927184554663)*cj4);
IkReal x2519=((0.0717219785716089)*cj4);
IkReal x2520=((0.0934963197956057)*sj4);
IkReal x2521=(cj5*r20);
IkReal x2522=(cj4*r12);
IkReal x2523=(r11*sj5);
IkReal x2524=((0.0184992718312161)*sj4);
IkReal x2525=(r10*sj5);
IkReal x2526=((0.0809712504171555)*sj3);
IkReal x2527=(cj4*r22);
IkReal x2528=((0.143449603387718)*sj4);
IkReal x2529=((0.29)*(IKcos(j1)));
IkReal x2530=((0.29)*(IKsin(j1)));
IkReal x2531=((0.187)*cj3*cj4);
IkReal x2532=(cj4*x2525);
IkReal x2533=((0.161948875218934)*cj3*sj4);
IkReal x2534=((0.046746319868033)*cj4*sj3);
IkReal x2535=(sj5*x2534);
evalcond[0]=((((-1.0)*x2523*x2528))+(((-0.145649059756499)*x2516))+((x2519*x2525))+(((0.0627673694158124)*r12))+(((-1.0)*x2530))+py+(((0.124232630584188)*x2522))+((x2511*x2528))+((x2516*x2519))+(((-0.145649059756499)*x2525)));
evalcond[1]=(((x2512*x2519))+(((-0.145649059756499)*x2515))+(((-0.145649059756499)*x2512))+(((0.0627673694158124)*r22))+(((-1.0)*x2517*x2528))+pz+(((0.124232630584188)*x2527))+((x2515*x2519))+((x2521*x2528))+(((-1.0)*x2529)));
evalcond[2]=(x2513+((x2517*x2524))+(((-1.0)*r12*x2526))+((x2514*x2516))+((x2523*x2531))+((sj3*x2511*x2520))+((x2522*x2526))+(((-0.064677809339343)*x2512))+((x2514*x2525))+(((-1.0)*x2515*x2518))+((cj3*x2520*x2525))+((x2516*x2534))+pz+(((-1.0)*x2512*x2518))+(((-1.0)*cj4*x2513))+(((-1.0)*x2511*x2531))+(((-1.0)*r21*x2510))+((r12*x2533))+((cj3*x2516*x2520))+(((0.046746319868033)*sj3*x2532))+(((-1.0)*x2529))+(((-1.0)*x2521*x2524))+(((-1.0)*sj3*x2520*x2523)));
evalcond[3]=((((0.064677809339343)*x2525))+(((-0.0160210495477794)*r12))+x2530+((x2512*x2514))+(((-1.0)*x2523*x2524))+((r11*x2510))+((x2514*x2515))+((x2512*x2534))+((sj3*x2520*x2521))+((x2515*x2534))+(((-1.0)*py))+((cj3*x2512*x2520))+(((-1.0)*x2521*x2531))+((r22*x2533))+((x2517*x2531))+((x2518*x2525))+((x2526*x2527))+((cj3*x2515*x2520))+(((0.0160210495477794)*x2522))+((x2511*x2524))+((x2516*x2518))+(((-1.0)*r22*x2526))+(((-1.0)*sj3*x2517*x2520)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2536=((0.433001339129174)*sj1);
IkReal x2537=(cj5*r21);
IkReal x2538=(r10*sj5);
IkReal x2539=((0.433001339129174)*cj1);
IkReal x2540=(r20*sj5);
IkReal x2541=(cj5*r11);
IkReal x2542=((0.866036765876652)*sj4);
IkReal x2543=(cj1*sj5);
IkReal x2544=(cj5*r20);
IkReal x2545=((0.249980320149909)*r22);
IkReal x2546=(sj1*sj5);
IkReal x2547=((0.249980320149909)*r12);
IkReal x2548=(cj5*r10);
IkReal x2549=((0.750019679850091)*cj4*r12);
IkReal x2550=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*x2536*x2540))+(((-1.0)*cj4*x2538*x2539))+((cj4*x2536*x2537))+((x2539*x2541))+(((-1.0)*r21*x2542*x2546))+((cj4*x2536*x2540))+(((-1.0)*cj1*x2549))+(((-1.0)*cj1*x2547))+(((-1.0)*x2536*x2537))+((sj1*x2550))+((sj1*x2545))+((x2538*x2539))+((sj1*x2542*x2544))+(((-1.0)*cj4*x2539*x2541))+((r11*x2542*x2543))+(((-1.0)*cj1*x2542*x2548)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x2542*x2546))+(((-1.0)*x2536*x2541))+((cj1*x2550))+((cj1*x2545))+((cj4*x2537*x2539))+((cj4*x2536*x2538))+(((-1.0)*x2537*x2539))+(((-1.0)*r21*x2542*x2543))+((cj4*x2536*x2541))+(((-1.0)*x2539*x2540))+(((-1.0)*x2536*x2538))+((sj1*x2547))+((sj1*x2549))+((cj1*x2542*x2544))+((cj4*x2539*x2540))+((sj1*x2542*x2548)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2536*x2540))+(((-1.0)*cj4*x2538*x2539))+((cj4*x2536*x2537))+((x2539*x2541))+(((-1.0)*r21*x2542*x2546))+((cj4*x2536*x2540))+(((-1.0)*cj1*x2549))+(((-1.0)*cj1*x2547))+(((-1.0)*x2536*x2537))+((sj1*x2550))+((sj1*x2545))+((x2538*x2539))+((sj1*x2542*x2544))+(((-1.0)*cj4*x2539*x2541))+((r11*x2542*x2543))+(((-1.0)*cj1*x2542*x2548))))+IKsqr(((((-1.0)*r11*x2542*x2546))+(((-1.0)*x2536*x2541))+((cj1*x2550))+((cj1*x2545))+((cj4*x2537*x2539))+((cj4*x2536*x2538))+(((-1.0)*x2537*x2539))+(((-1.0)*r21*x2542*x2543))+((cj4*x2536*x2541))+(((-1.0)*x2539*x2540))+(((-1.0)*x2536*x2538))+((sj1*x2547))+((sj1*x2549))+((cj1*x2542*x2544))+((cj4*x2539*x2540))+((sj1*x2542*x2548))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2536*x2540))+(((-1.0)*cj4*x2538*x2539))+((cj4*x2536*x2537))+((x2539*x2541))+(((-1.0)*r21*x2542*x2546))+((cj4*x2536*x2540))+(((-1.0)*cj1*x2549))+(((-1.0)*cj1*x2547))+(((-1.0)*x2536*x2537))+((sj1*x2550))+((sj1*x2545))+((x2538*x2539))+((sj1*x2542*x2544))+(((-1.0)*cj4*x2539*x2541))+((r11*x2542*x2543))+(((-1.0)*cj1*x2542*x2548))), ((((-1.0)*r11*x2542*x2546))+(((-1.0)*x2536*x2541))+((cj1*x2550))+((cj1*x2545))+((cj4*x2537*x2539))+((cj4*x2536*x2538))+(((-1.0)*x2537*x2539))+(((-1.0)*r21*x2542*x2543))+((cj4*x2536*x2541))+(((-1.0)*x2539*x2540))+(((-1.0)*x2536*x2538))+((sj1*x2547))+((sj1*x2549))+((cj1*x2542*x2544))+((cj4*x2539*x2540))+((sj1*x2542*x2548))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2551=IKcos(j2);
IkReal x2552=IKsin(j2);
IkReal x2553=(cj4*sj5);
IkReal x2554=((0.433001339129174)*r20);
IkReal x2555=((0.064677809339343)*cj5);
IkReal x2556=(r10*sj3);
IkReal x2557=(cj3*sj4);
IkReal x2558=((0.433001339129174)*r10);
IkReal x2559=((0.0160210495477794)*r22);
IkReal x2560=(r20*sj5);
IkReal x2561=(r11*sj5);
IkReal x2562=(cj5*r20);
IkReal x2563=(cj5*r21);
IkReal x2564=((0.866036765876652)*sj4);
IkReal x2565=(cj5*r10);
IkReal x2566=(cj5*r11);
IkReal x2567=((0.750019679850091)*sj3);
IkReal x2568=(cj4*sj3);
IkReal x2569=((0.750019679850091)*cj4);
IkReal x2570=((0.433001339129174)*cj4);
IkReal x2571=((0.433001339129174)*r22);
IkReal x2572=((0.0160210495477794)*r12);
IkReal x2573=((0.0184992718312161)*sj4);
IkReal x2574=(r21*sj5);
IkReal x2575=(r10*sj5);
IkReal x2576=((0.00924927184554663)*cj4);
IkReal x2577=(sj1*x2551);
IkReal x2578=(cj1*x2551);
IkReal x2579=((0.433001339129174)*r12*sj3);
IkReal x2580=((0.499980319762597)*sj3*sj4);
IkReal x2581=(sj1*x2552);
IkReal x2582=(cj1*x2552);
IkReal x2583=((1.0)*x2582);
IkReal x2584=((1.0)*cj3*cj4*cj5);
evalcond[0]=((((-1.0)*x2562*x2564))+x2581+x2578+(((-1.0)*r22*x2569))+(((-0.249980320149909)*r22))+((x2564*x2574))+((sj5*x2554))+(((-1.0)*x2563*x2570))+(((-1.0)*x2553*x2554))+(((0.433001339129174)*x2563)));
evalcond[1]=(x2577+(((-1.0)*x2566*x2570))+(((-0.249980320149909)*r12))+((sj5*x2558))+(((-1.0)*x2583))+(((-1.0)*x2564*x2565))+(((-1.0)*x2553*x2558))+(((-1.0)*r12*x2569))+(((0.433001339129174)*x2566))+((x2561*x2564)));
evalcond[2]=((((-0.187)*x2581))+(((0.064677809339343)*x2560))+(((-0.187)*x2578))+(((0.00924927184554663)*r20*x2553))+((cj4*x2559))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*x2573*x2574))+((x2563*x2576))+(((-1.0)*x2559))+((x2562*x2573))+((r21*x2555)));
evalcond[3]=((((0.187)*x2582))+(((0.064677809339343)*x2575))+(((-0.187)*x2577))+(((0.29)*sj1))+(((0.00924927184554663)*r10*x2553))+((cj4*x2572))+((r11*x2555))+(((-1.0)*py))+((x2566*x2576))+(((-1.0)*x2572))+((x2565*x2573))+(((-1.0)*x2561*x2573)));
evalcond[4]=(((x2560*x2567))+x2577+((x2568*x2571))+(((0.866036765876652)*r22*x2557))+((x2562*x2580))+(((-1.0)*x2583))+(((0.249980320149909)*r20*sj3*x2553))+((x2563*x2567))+(((0.249980320149909)*x2563*x2568))+(((-1.0)*sj3*x2571))+((cj3*r21*x2553))+(((0.499980319762597)*x2557*x2560))+(((0.499980319762597)*x2557*x2563))+(((-1.0)*cj3*cj4*x2562))+(((-1.0)*x2574*x2580)));
evalcond[5]=(((cj3*r11*x2553))+(((-1.0)*x2581))+(((-1.0)*x2561*x2580))+(((0.249980320149909)*x2566*x2568))+(((0.499980319762597)*x2557*x2575))+(((-1.0)*x2578))+(((0.249980320149909)*x2553*x2556))+((x2566*x2567))+(((-1.0)*x2579))+(((0.433001339129174)*r12*x2568))+(((0.866036765876652)*r12*x2557))+(((0.750019679850091)*sj5*x2556))+(((0.499980319762597)*x2557*x2566))+(((-1.0)*cj3*cj4*x2565))+(((0.499980319762597)*cj5*sj4*x2556)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2585=((0.502238137091374)*cj5);
IkReal x2586=((0.428388381324785)*cj4);
IkReal x2587=((0.494653804785234)*sj4);
IkReal x2588=(r00*sj5);
IkReal x2589=((0.247317167488307)*cj4);
IkReal x2590=(r20*sj5);
if( IKabs((((r01*x2585))+(((-3.44827586206897)*px))+(((-1.0)*r02*x2586))+(((-0.216439204882112)*r02))+(((-1.0)*x2588*x2589))+(((0.502238137091374)*x2588))+((r01*sj5*x2587))+(((-1.0)*cj5*r00*x2587))+(((-1.0)*cj5*r01*x2589)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2586))+((cj5*r20*x2587))+(((-1.0)*r21*x2585))+(((-1.0)*r21*sj5*x2587))+(((0.216439204882112)*r22))+((cj5*r21*x2589))+(((3.44827586206897)*pz))+((x2589*x2590))+(((-0.502238137091374)*x2590)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r01*x2585))+(((-3.44827586206897)*px))+(((-1.0)*r02*x2586))+(((-0.216439204882112)*r02))+(((-1.0)*x2588*x2589))+(((0.502238137091374)*x2588))+((r01*sj5*x2587))+(((-1.0)*cj5*r00*x2587))+(((-1.0)*cj5*r01*x2589))))+IKsqr((((r22*x2586))+((cj5*r20*x2587))+(((-1.0)*r21*x2585))+(((-1.0)*r21*sj5*x2587))+(((0.216439204882112)*r22))+((cj5*r21*x2589))+(((3.44827586206897)*pz))+((x2589*x2590))+(((-0.502238137091374)*x2590))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r01*x2585))+(((-3.44827586206897)*px))+(((-1.0)*r02*x2586))+(((-0.216439204882112)*r02))+(((-1.0)*x2588*x2589))+(((0.502238137091374)*x2588))+((r01*sj5*x2587))+(((-1.0)*cj5*r00*x2587))+(((-1.0)*cj5*r01*x2589))), (((r22*x2586))+((cj5*r20*x2587))+(((-1.0)*r21*x2585))+(((-1.0)*r21*sj5*x2587))+(((0.216439204882112)*r22))+((cj5*r21*x2589))+(((3.44827586206897)*pz))+((x2589*x2590))+(((-0.502238137091374)*x2590))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2591=((1.0)*px);
IkReal x2592=((0.0809712504171555)*sj3);
IkReal x2593=(r20*sj5);
IkReal x2594=(cj5*sj3);
IkReal x2595=((0.0934963197956057)*sj4);
IkReal x2596=(cj5*r21);
IkReal x2597=((0.140253680131967)*sj3);
IkReal x2598=(r00*sj5);
IkReal x2599=(r21*sj5);
IkReal x2600=((0.00924927184554663)*cj4);
IkReal x2601=((0.0717219785716089)*cj4);
IkReal x2602=(cj5*r20);
IkReal x2603=((0.0184992718312161)*sj4);
IkReal x2604=(cj4*r02);
IkReal x2605=(cj5*r01);
IkReal x2606=(cj4*r22);
IkReal x2607=((0.143449603387718)*sj4);
IkReal x2608=(r01*sj5);
IkReal x2609=((0.29)*(IKsin(j1)));
IkReal x2610=((0.29)*(IKcos(j1)));
IkReal x2611=(cj5*r00*sj4);
IkReal x2612=((0.046746319868033)*cj4*sj3);
IkReal x2613=((0.187)*cj3*cj4);
IkReal x2614=((0.161948875218934)*cj3*sj4);
IkReal x2615=(sj4*x2608);
IkReal x2616=(x2591+x2609);
evalcond[0]=(((x2596*x2601))+((x2602*x2607))+(((0.0627673694158124)*r22))+pz+(((-0.145649059756499)*x2596))+(((-0.145649059756499)*x2593))+(((-1.0)*x2610))+((x2593*x2601))+(((0.124232630584188)*x2606))+(((-1.0)*x2599*x2607)));
evalcond[1]=(((x2607*x2608))+(((-0.124232630584188)*x2604))+(((-1.0)*x2601*x2605))+(((0.145649059756499)*x2598))+(((-1.0)*x2598*x2601))+(((0.145649059756499)*x2605))+(((-1.0)*cj5*r00*x2607))+(((-1.0)*x2616))+(((-0.0627673694158124)*r02)));
evalcond[2]=(((r22*x2592))+(((0.064677809339343)*x2598))+(((-0.0160210495477794)*r02))+(((-1.0)*x2593*x2612))+((sj3*x2595*x2599))+(((0.064677809339343)*x2605))+((x2602*x2613))+(((-1.0)*cj3*x2595*x2596))+(((-1.0)*r20*x2594*x2595))+(((-1.0)*x2593*x2597))+(((-1.0)*cj3*x2593*x2595))+(((-0.046746319868033)*cj4*r21*x2594))+((x2600*x2605))+(((-1.0)*x2592*x2606))+((x2598*x2600))+(((-1.0)*r22*x2614))+(((0.0160210495477794)*x2604))+(((-1.0)*x2603*x2608))+(((-1.0)*x2599*x2613))+(((-1.0)*x2616))+((cj5*r00*x2603))+(((-0.140253680131967)*r21*x2594)));
evalcond[3]=((((-1.0)*cj5*r00*x2613))+(((0.064677809339343)*x2593))+(((0.064677809339343)*x2596))+((cj3*x2595*x2598))+(((-1.0)*sj3*x2595*x2608))+((x2596*x2600))+((cj3*x2595*x2605))+(((0.046746319868033)*cj4*r01*x2594))+((x2602*x2603))+(((-1.0)*r02*x2592))+(((-1.0)*pz))+(((0.0160210495477794)*x2606))+((r02*x2614))+((x2608*x2613))+((x2598*x2612))+((x2592*x2604))+(((0.140253680131967)*r01*x2594))+((x2597*x2598))+((r00*x2594*x2595))+(((-0.0160210495477794)*r22))+((x2593*x2600))+x2610+(((-1.0)*x2599*x2603)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2617=((0.249980320149909)*cj1);
IkReal x2618=((0.433001339129174)*sj1);
IkReal x2619=(cj5*r21);
IkReal x2620=(r20*sj5);
IkReal x2621=((0.433001339129174)*cj1);
IkReal x2622=(r00*sj5);
IkReal x2623=((0.249980320149909)*sj1);
IkReal x2624=(cj5*r01);
IkReal x2625=((0.866036765876652)*cj5*sj4);
IkReal x2626=(cj4*x2624);
IkReal x2627=((0.866036765876652)*sj4*sj5);
IkReal x2628=((0.750019679850091)*cj4*r02);
IkReal x2629=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*x2618*x2619))+(((-1.0)*x2618*x2620))+((r20*sj1*x2625))+((cj1*x2628))+((cj4*x2621*x2622))+((r02*x2617))+((x2621*x2626))+((r22*x2623))+((cj4*x2618*x2619))+(((-1.0)*r21*sj1*x2627))+((sj1*x2629))+(((-1.0)*cj1*r01*x2627))+((cj1*r00*x2625))+((cj4*x2618*x2620))+(((-1.0)*x2621*x2624))+(((-1.0)*x2621*x2622)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2619*x2621))+((cj1*r20*x2625))+(((-1.0)*cj1*r21*x2627))+(((-1.0)*x2618*x2626))+((r01*sj1*x2627))+((x2618*x2624))+((x2618*x2622))+((cj1*x2629))+(((-1.0)*cj4*x2618*x2622))+((cj4*x2619*x2621))+(((-1.0)*r02*x2623))+(((-1.0)*r00*sj1*x2625))+((cj4*x2620*x2621))+((r22*x2617))+(((-1.0)*x2620*x2621))+(((-1.0)*sj1*x2628)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2618*x2619))+(((-1.0)*x2618*x2620))+((r20*sj1*x2625))+((cj1*x2628))+((cj4*x2621*x2622))+((r02*x2617))+((x2621*x2626))+((r22*x2623))+((cj4*x2618*x2619))+(((-1.0)*r21*sj1*x2627))+((sj1*x2629))+(((-1.0)*cj1*r01*x2627))+((cj1*r00*x2625))+((cj4*x2618*x2620))+(((-1.0)*x2621*x2624))+(((-1.0)*x2621*x2622))))+IKsqr(((((-1.0)*x2619*x2621))+((cj1*r20*x2625))+(((-1.0)*cj1*r21*x2627))+(((-1.0)*x2618*x2626))+((r01*sj1*x2627))+((x2618*x2624))+((x2618*x2622))+((cj1*x2629))+(((-1.0)*cj4*x2618*x2622))+((cj4*x2619*x2621))+(((-1.0)*r02*x2623))+(((-1.0)*r00*sj1*x2625))+((cj4*x2620*x2621))+((r22*x2617))+(((-1.0)*x2620*x2621))+(((-1.0)*sj1*x2628))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2618*x2619))+(((-1.0)*x2618*x2620))+((r20*sj1*x2625))+((cj1*x2628))+((cj4*x2621*x2622))+((r02*x2617))+((x2621*x2626))+((r22*x2623))+((cj4*x2618*x2619))+(((-1.0)*r21*sj1*x2627))+((sj1*x2629))+(((-1.0)*cj1*r01*x2627))+((cj1*r00*x2625))+((cj4*x2618*x2620))+(((-1.0)*x2621*x2624))+(((-1.0)*x2621*x2622))), ((((-1.0)*x2619*x2621))+((cj1*r20*x2625))+(((-1.0)*cj1*r21*x2627))+(((-1.0)*x2618*x2626))+((r01*sj1*x2627))+((x2618*x2624))+((x2618*x2622))+((cj1*x2629))+(((-1.0)*cj4*x2618*x2622))+((cj4*x2619*x2621))+(((-1.0)*r02*x2623))+(((-1.0)*r00*sj1*x2625))+((cj4*x2620*x2621))+((r22*x2617))+(((-1.0)*x2620*x2621))+(((-1.0)*sj1*x2628))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2630=IKsin(j2);
IkReal x2631=IKcos(j2);
IkReal x2632=(cj4*r02);
IkReal x2633=(cj4*sj5);
IkReal x2634=((0.433001339129174)*r20);
IkReal x2635=(cj5*r21);
IkReal x2636=(cj4*cj5);
IkReal x2637=((0.249980320149909)*sj3);
IkReal x2638=((1.0)*cj3);
IkReal x2639=(r00*sj5);
IkReal x2640=((0.750019679850091)*sj3);
IkReal x2641=((0.0160210495477794)*r22);
IkReal x2642=(cj5*r01);
IkReal x2643=((0.499980319762597)*sj4);
IkReal x2644=((0.866036765876652)*sj4);
IkReal x2645=(cj5*r20);
IkReal x2646=(r01*sj5);
IkReal x2647=((0.433001339129174)*sj3);
IkReal x2648=((0.0184992718312161)*sj4);
IkReal x2649=(r21*sj5);
IkReal x2650=(r20*sj5);
IkReal x2651=(cj4*r22);
IkReal x2652=(cj1*x2631);
IkReal x2653=(sj1*x2630);
IkReal x2654=(cj5*r00*sj4);
IkReal x2655=(cj1*x2630);
IkReal x2656=(r20*x2643);
IkReal x2657=(sj1*x2631);
IkReal x2658=(x2653+x2652);
evalcond[0]=((((-1.0)*x2644*x2645))+(((-0.249980320149909)*r22))+(((-0.750019679850091)*x2651))+((x2644*x2649))+(((-0.433001339129174)*cj4*x2635))+((sj5*x2634))+(((0.433001339129174)*x2635))+(((-1.0)*x2633*x2634))+x2658);
evalcond[1]=((((-0.750019679850091)*x2632))+(((0.433001339129174)*x2642))+(((-0.249980320149909)*r02))+((x2644*x2646))+(((-1.0)*cj5*r00*x2644))+(((0.433001339129174)*x2639))+(((-0.433001339129174)*r00*x2633))+(((-0.433001339129174)*r01*x2636))+(((-1.0)*x2657))+x2655);
evalcond[2]=((((0.00924927184554663)*r20*x2633))+(((0.064677809339343)*x2650))+(((-1.0)*pz))+(((0.29)*cj1))+((x2645*x2648))+((cj4*x2641))+(((-1.0)*x2641))+(((-1.0)*x2648*x2649))+(((-0.187)*x2652))+(((-0.187)*x2653))+(((0.00924927184554663)*cj4*x2635))+(((0.064677809339343)*x2635)));
evalcond[3]=((((-0.0160210495477794)*r02))+(((-0.29)*sj1))+(((-1.0)*x2646*x2648))+(((0.064677809339343)*x2642))+((cj5*r00*x2648))+(((-1.0)*px))+(((0.187)*x2657))+(((-0.187)*x2655))+(((0.00924927184554663)*r01*x2636))+(((0.064677809339343)*x2639))+(((0.0160210495477794)*x2632))+(((0.00924927184554663)*r00*x2633)));
evalcond[4]=(((cj5*r00*sj3*x2643))+(((-1.0)*sj3*x2643*x2646))+((cj3*r01*x2633))+((x2639*x2640))+((x2632*x2647))+(((-1.0)*r02*x2647))+(((-1.0)*r00*x2636*x2638))+((r00*x2633*x2637))+((cj3*x2639*x2643))+((r01*x2636*x2637))+((cj3*x2642*x2643))+((x2640*x2642))+((cj3*r02*x2644))+x2658);
evalcond[5]=((((-1.0)*r22*x2647))+((sj3*x2643*x2645))+(((-1.0)*sj3*x2643*x2649))+((cj3*r22*x2644))+((cj3*x2635*x2643))+((cj4*x2635*x2637))+((x2635*x2640))+((x2647*x2651))+((cj3*r21*x2633))+(((-1.0)*r20*x2636*x2638))+((r20*x2633*x2637))+((cj3*x2643*x2650))+((x2640*x2650))+(((-1.0)*x2655))+x2657);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2659=((0.502238137091374)*cj5);
IkReal x2660=((0.428388381324785)*cj4);
IkReal x2661=((0.247317167488307)*cj4);
IkReal x2662=(r20*sj5);
IkReal x2663=(r00*sj5);
IkReal x2664=((0.494653804785234)*cj5*sj4);
IkReal x2665=((0.494653804785234)*sj4*sj5);
if( IKabs((((x2661*x2663))+(((-1.0)*r01*x2659))+((r02*x2660))+(((0.216439204882112)*r02))+((cj5*r01*x2661))+(((-1.0)*r01*x2665))+(((3.44827586206897)*px))+((r00*x2664))+(((-0.502238137091374)*x2663)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x2661*x2662))+((cj5*r21*x2661))+(((0.216439204882112)*r22))+((r22*x2660))+(((3.44827586206897)*pz))+(((-1.0)*r21*x2659))+(((-1.0)*r21*x2665))+((r20*x2664))+(((-0.502238137091374)*x2662)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2661*x2663))+(((-1.0)*r01*x2659))+((r02*x2660))+(((0.216439204882112)*r02))+((cj5*r01*x2661))+(((-1.0)*r01*x2665))+(((3.44827586206897)*px))+((r00*x2664))+(((-0.502238137091374)*x2663))))+IKsqr((((x2661*x2662))+((cj5*r21*x2661))+(((0.216439204882112)*r22))+((r22*x2660))+(((3.44827586206897)*pz))+(((-1.0)*r21*x2659))+(((-1.0)*r21*x2665))+((r20*x2664))+(((-0.502238137091374)*x2662))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((x2661*x2663))+(((-1.0)*r01*x2659))+((r02*x2660))+(((0.216439204882112)*r02))+((cj5*r01*x2661))+(((-1.0)*r01*x2665))+(((3.44827586206897)*px))+((r00*x2664))+(((-0.502238137091374)*x2663))), (((x2661*x2662))+((cj5*r21*x2661))+(((0.216439204882112)*r22))+((r22*x2660))+(((3.44827586206897)*pz))+(((-1.0)*r21*x2659))+(((-1.0)*r21*x2665))+((r20*x2664))+(((-0.502238137091374)*x2662))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2666=(cj5*r21);
IkReal x2667=((0.0809712504171555)*sj3);
IkReal x2668=((0.0160210495477794)*r02);
IkReal x2669=(r20*sj5);
IkReal x2670=((0.0160210495477794)*r22);
IkReal x2671=((0.140253680131967)*sj3);
IkReal x2672=(r00*sj5);
IkReal x2673=(cj3*sj4);
IkReal x2674=((0.00924927184554663)*cj4);
IkReal x2675=((0.0717219785716089)*cj4);
IkReal x2676=((0.124232630584188)*cj4);
IkReal x2677=((0.0934963197956057)*sj3);
IkReal x2678=(cj5*r01);
IkReal x2679=(sj4*sj5);
IkReal x2680=((0.29)*(IKcos(j1)));
IkReal x2681=((0.29)*(IKsin(j1)));
IkReal x2682=(cj5*r00*sj4);
IkReal x2683=((0.046746319868033)*cj4*sj3);
IkReal x2684=((0.143449603387718)*x2679);
IkReal x2685=(cj5*r20*sj4);
IkReal x2686=((0.187)*cj3*cj4*sj5);
IkReal x2687=((0.187)*cj3*cj4*cj5);
evalcond[0]=(((x2672*x2675))+(((0.0627673694158124)*r02))+((r02*x2676))+(((-1.0)*r01*x2684))+(((0.143449603387718)*x2682))+((x2675*x2678))+(((-1.0)*x2681))+px+(((-0.145649059756499)*x2678))+(((-0.145649059756499)*x2672)));
evalcond[1]=(((x2666*x2675))+((r22*x2676))+(((0.143449603387718)*x2685))+(((0.0627673694158124)*r22))+(((-1.0)*x2680))+pz+((x2669*x2675))+(((-1.0)*r21*x2684))+(((-0.145649059756499)*x2666))+(((-0.145649059756499)*x2669)));
evalcond[2]=(((x2672*x2683))+(((-0.064677809339343)*x2666))+(((-0.064677809339343)*x2669))+((cj4*r02*x2667))+((r01*x2686))+(((-0.0184992718312161)*x2685))+(((-1.0)*r00*x2687))+(((-1.0)*r02*x2667))+(((0.0184992718312161)*r21*x2679))+(((-1.0)*cj4*x2670))+(((-1.0)*x2680))+pz+((x2678*x2683))+(((0.161948875218934)*r02*x2673))+((x2671*x2672))+((x2671*x2678))+(((-1.0)*x2666*x2674))+(((-1.0)*x2669*x2674))+(((0.0934963197956057)*x2673*x2678))+((x2677*x2682))+(((-1.0)*r01*x2677*x2679))+(((0.0934963197956057)*x2672*x2673))+x2670);
evalcond[3]=((((-0.0184992718312161)*r01*x2679))+(((0.0184992718312161)*x2682))+((x2672*x2674))+(((0.0934963197956057)*x2669*x2673))+((x2666*x2671))+(((-1.0)*r21*x2677*x2679))+((cj4*r22*x2667))+((cj4*x2668))+((r21*x2686))+(((-1.0)*px))+(((0.064677809339343)*x2678))+(((0.064677809339343)*x2672))+(((-1.0)*x2668))+(((0.161948875218934)*r22*x2673))+((x2669*x2671))+(((0.0934963197956057)*x2666*x2673))+((x2666*x2683))+((x2677*x2685))+(((-1.0)*r20*x2687))+(((-1.0)*r22*x2667))+((x2669*x2683))+((x2674*x2678))+x2681);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2688=((0.249980320149909)*cj1);
IkReal x2689=((0.433001339129174)*sj1);
IkReal x2690=(cj5*r21);
IkReal x2691=(r20*sj5);
IkReal x2692=((0.433001339129174)*cj1);
IkReal x2693=(r00*sj5);
IkReal x2694=((0.249980320149909)*sj1);
IkReal x2695=(cj5*r01);
IkReal x2696=((0.866036765876652)*cj5*sj4);
IkReal x2697=(cj4*x2695);
IkReal x2698=((0.866036765876652)*sj4*sj5);
IkReal x2699=((0.750019679850091)*cj4*r02);
IkReal x2700=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*x2692*x2697))+(((-1.0)*r02*x2688))+(((-1.0)*cj4*x2692*x2693))+(((-1.0)*cj1*x2699))+((r22*x2694))+((cj4*x2689*x2690))+((cj4*x2689*x2691))+(((-1.0)*cj1*r00*x2696))+(((-1.0)*x2689*x2690))+(((-1.0)*x2689*x2691))+((r20*sj1*x2696))+((x2692*x2695))+((x2692*x2693))+((sj1*x2700))+((cj1*r01*x2698))+(((-1.0)*r21*sj1*x2698)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2691*x2692))+((cj4*x2689*x2693))+((r22*x2688))+(((-1.0)*r01*sj1*x2698))+((cj4*x2691*x2692))+((x2689*x2697))+((sj1*x2699))+((r00*sj1*x2696))+(((-1.0)*x2689*x2693))+(((-1.0)*x2689*x2695))+((cj4*x2690*x2692))+((cj1*r20*x2696))+(((-1.0)*x2690*x2692))+((r02*x2694))+(((-1.0)*cj1*r21*x2698))+((cj1*x2700)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2692*x2697))+(((-1.0)*r02*x2688))+(((-1.0)*cj4*x2692*x2693))+(((-1.0)*cj1*x2699))+((r22*x2694))+((cj4*x2689*x2690))+((cj4*x2689*x2691))+(((-1.0)*cj1*r00*x2696))+(((-1.0)*x2689*x2690))+(((-1.0)*x2689*x2691))+((r20*sj1*x2696))+((x2692*x2695))+((x2692*x2693))+((sj1*x2700))+((cj1*r01*x2698))+(((-1.0)*r21*sj1*x2698))))+IKsqr(((((-1.0)*x2691*x2692))+((cj4*x2689*x2693))+((r22*x2688))+(((-1.0)*r01*sj1*x2698))+((cj4*x2691*x2692))+((x2689*x2697))+((sj1*x2699))+((r00*sj1*x2696))+(((-1.0)*x2689*x2693))+(((-1.0)*x2689*x2695))+((cj4*x2690*x2692))+((cj1*r20*x2696))+(((-1.0)*x2690*x2692))+((r02*x2694))+(((-1.0)*cj1*r21*x2698))+((cj1*x2700))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2692*x2697))+(((-1.0)*r02*x2688))+(((-1.0)*cj4*x2692*x2693))+(((-1.0)*cj1*x2699))+((r22*x2694))+((cj4*x2689*x2690))+((cj4*x2689*x2691))+(((-1.0)*cj1*r00*x2696))+(((-1.0)*x2689*x2690))+(((-1.0)*x2689*x2691))+((r20*sj1*x2696))+((x2692*x2695))+((x2692*x2693))+((sj1*x2700))+((cj1*r01*x2698))+(((-1.0)*r21*sj1*x2698))), ((((-1.0)*x2691*x2692))+((cj4*x2689*x2693))+((r22*x2688))+(((-1.0)*r01*sj1*x2698))+((cj4*x2691*x2692))+((x2689*x2697))+((sj1*x2699))+((r00*sj1*x2696))+(((-1.0)*x2689*x2693))+(((-1.0)*x2689*x2695))+((cj4*x2690*x2692))+((cj1*r20*x2696))+(((-1.0)*x2690*x2692))+((r02*x2694))+(((-1.0)*cj1*r21*x2698))+((cj1*x2700))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2701=IKcos(j2);
IkReal x2702=IKsin(j2);
IkReal x2703=(cj4*r02);
IkReal x2704=(cj4*sj5);
IkReal x2705=((0.433001339129174)*r20);
IkReal x2706=(cj5*r21);
IkReal x2707=(cj4*cj5);
IkReal x2708=(r01*sj3);
IkReal x2709=((1.0)*cj3);
IkReal x2710=(r00*sj5);
IkReal x2711=((0.750019679850091)*sj3);
IkReal x2712=((0.0160210495477794)*r22);
IkReal x2713=(r20*sj5);
IkReal x2714=((0.433001339129174)*sj3);
IkReal x2715=(cj4*r22);
IkReal x2716=(cj5*r01);
IkReal x2717=((0.866036765876652)*sj4);
IkReal x2718=(cj5*r20);
IkReal x2719=(sj4*sj5);
IkReal x2720=((0.499980319762597)*sj3);
IkReal x2721=((0.249980320149909)*sj3);
IkReal x2722=(sj1*x2701);
IkReal x2723=(cj1*x2701);
IkReal x2724=(cj5*r00*sj4);
IkReal x2725=((0.499980319762597)*cj3*sj4);
IkReal x2726=(sj1*x2702);
IkReal x2727=(cj1*x2702);
IkReal x2728=((1.0)*x2727);
evalcond[0]=(x2726+x2723+(((-0.249980320149909)*r22))+(((-1.0)*x2704*x2705))+(((-0.433001339129174)*cj4*x2706))+(((-1.0)*x2717*x2718))+(((0.433001339129174)*x2706))+((sj5*x2705))+((r21*sj5*x2717))+(((-0.750019679850091)*x2715)));
evalcond[1]=(x2722+(((0.433001339129174)*x2710))+(((0.433001339129174)*x2716))+(((-1.0)*cj5*r00*x2717))+((r01*sj5*x2717))+(((-0.249980320149909)*r02))+(((-0.433001339129174)*r00*x2704))+(((-0.750019679850091)*x2703))+(((-0.433001339129174)*r01*x2707))+(((-1.0)*x2728)));
evalcond[2]=((((0.064677809339343)*x2706))+(((-0.187)*x2723))+(((-0.187)*x2726))+(((-0.0184992718312161)*r21*x2719))+(((-1.0)*x2712))+(((0.064677809339343)*x2713))+(((0.00924927184554663)*r20*x2704))+(((0.00924927184554663)*cj4*x2706))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.0184992718312161)*sj4*x2718))+((cj4*x2712)));
evalcond[3]=((((-0.0160210495477794)*r02))+(((-0.187)*x2722))+(((0.064677809339343)*x2710))+(((0.064677809339343)*x2716))+(((0.29)*sj1))+(((-1.0)*px))+(((0.0160210495477794)*x2703))+(((0.187)*x2727))+(((0.0184992718312161)*x2724))+(((0.00924927184554663)*r00*x2704))+(((-0.0184992718312161)*r01*x2719))+(((0.00924927184554663)*r01*x2707)));
evalcond[4]=(x2722+((cj4*x2706*x2721))+((x2713*x2725))+((x2706*x2711))+((sj4*x2718*x2720))+((r20*x2704*x2721))+(((-1.0)*r20*x2707*x2709))+((x2711*x2713))+((cj3*r22*x2717))+(((-1.0)*x2728))+(((-1.0)*r22*x2714))+((cj3*r21*x2704))+((x2706*x2725))+((x2714*x2715))+(((-1.0)*r21*x2719*x2720)));
evalcond[5]=(((cj3*r02*x2717))+((x2703*x2714))+(((-1.0)*r00*x2707*x2709))+(((0.750019679850091)*cj5*x2708))+((cj3*r01*x2704))+(((-1.0)*r02*x2714))+((r00*x2704*x2721))+(((-1.0)*x2723))+(((-1.0)*x2726))+((x2710*x2711))+(((-0.499980319762597)*x2708*x2719))+((x2720*x2724))+(((0.249980320149909)*x2707*x2708))+((x2716*x2725))+((x2710*x2725)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2729=(cj5*r21);
IkReal x2730=(cj0*r01);
IkReal x2731=((0.143449603387718)*sj4);
IkReal x2732=(r20*sj5);
IkReal x2733=(cj0*r02);
IkReal x2734=((0.494653804785234)*sj4);
IkReal x2735=(cj0*r00);
IkReal x2736=((0.247317167488307)*cj4);
IkReal x2737=((0.0717219785716089)*cj4);
CheckValue<IkReal> x2738=IKPowWithIntegerCheck(cj0,-2);
if(!x2738.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x2738.value)*(((((0.145649059756499)*sj5*x2735))+(((-1.0)*sj5*x2735*x2737))+(((0.145649059756499)*cj5*x2730))+(((-1.0)*cj5*x2730*x2737))+((sj5*x2730*x2731))+(((-0.124232630584188)*cj4*x2733))+(((-0.0627673694158124)*x2733))+(((0.007)*cj0*sj0))+(((-1.0)*cj5*x2731*x2735))+(((-1.0)*cj0*px)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.502238137091374)*x2729))+(((-0.502238137091374)*x2732))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((x2732*x2736))+((cj5*r20*x2734))+((x2729*x2736))+(((-1.0)*r21*sj5*x2734)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x2738.value)*(((((0.145649059756499)*sj5*x2735))+(((-1.0)*sj5*x2735*x2737))+(((0.145649059756499)*cj5*x2730))+(((-1.0)*cj5*x2730*x2737))+((sj5*x2730*x2731))+(((-0.124232630584188)*cj4*x2733))+(((-0.0627673694158124)*x2733))+(((0.007)*cj0*sj0))+(((-1.0)*cj5*x2731*x2735))+(((-1.0)*cj0*px))))))+IKsqr(((((-0.502238137091374)*x2729))+(((-0.502238137091374)*x2732))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((x2732*x2736))+((cj5*r20*x2734))+((x2729*x2736))+(((-1.0)*r21*sj5*x2734))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x2738.value)*(((((0.145649059756499)*sj5*x2735))+(((-1.0)*sj5*x2735*x2737))+(((0.145649059756499)*cj5*x2730))+(((-1.0)*cj5*x2730*x2737))+((sj5*x2730*x2731))+(((-0.124232630584188)*cj4*x2733))+(((-0.0627673694158124)*x2733))+(((0.007)*cj0*sj0))+(((-1.0)*cj5*x2731*x2735))+(((-1.0)*cj0*px))))), ((((-0.502238137091374)*x2729))+(((-0.502238137091374)*x2732))+(((0.428388381324785)*cj4*r22))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+((x2732*x2736))+((cj5*r20*x2734))+((x2729*x2736))+(((-1.0)*r21*sj5*x2734))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x2739=IKsin(j1);
IkReal x2740=IKcos(j1);
IkReal x2741=sj0*sj0;
IkReal x2742=cj0*cj0;
IkReal x2743=(cj0*sj5);
IkReal x2744=((0.0184992718312161)*sj4);
IkReal x2745=((0.0809712504171555)*sj3);
IkReal x2746=(cj5*r11);
IkReal x2747=(cj5*r10);
IkReal x2748=((0.145649059756499)*sj5);
IkReal x2749=((0.140253680131967)*sj3);
IkReal x2750=(r00*sj5);
IkReal x2751=((1.0)*sj0);
IkReal x2752=(r10*sj5);
IkReal x2753=((0.00924927184554663)*cj4);
IkReal x2754=((0.0717219785716089)*cj4);
IkReal x2755=(cj5*r21);
IkReal x2756=(cj4*r02);
IkReal x2757=(cj5*r01);
IkReal x2758=(cj4*r12);
IkReal x2759=((0.0809712504171555)*cj4);
IkReal x2760=(cj0*r22);
IkReal x2761=((0.0934963197956057)*cj3);
IkReal x2762=(sj0*sj4);
IkReal x2763=(cj5*r00);
IkReal x2764=((0.007)*cj0);
IkReal x2765=(sj0*sj5);
IkReal x2766=((0.0809712504171555)*sj0);
IkReal x2767=((0.064677809339343)*r20);
IkReal x2768=((1.0)*cj0);
IkReal x2769=((0.0160210495477794)*r02);
IkReal x2770=((0.0160210495477794)*r12);
IkReal x2771=((0.064677809339343)*sj0);
IkReal x2772=((0.0934963197956057)*sj3);
IkReal x2773=(r22*sj0);
IkReal x2774=(r01*sj5);
IkReal x2775=((0.064677809339343)*cj0);
IkReal x2776=((0.161948875218934)*sj4);
IkReal x2777=(r20*sj4);
IkReal x2778=((0.143449603387718)*sj4);
IkReal x2779=(r11*sj5);
IkReal x2780=(sj0*x2764);
IkReal x2781=((0.187)*cj3*cj4);
IkReal x2782=((0.046746319868033)*cj4*sj3);
IkReal x2783=((0.29)*x2740);
IkReal x2784=(cj3*x2776);
IkReal x2785=(sj5*x2762);
IkReal x2786=((0.29)*x2739);
IkReal x2787=(sj4*x2772);
IkReal x2788=(cj0*cj5*r20);
IkReal x2789=(cj4*x2773);
IkReal x2790=(cj5*r20*sj0);
IkReal x2791=(cj0*sj0*x2786);
evalcond[0]=((((0.124232630584188)*cj4*r22))+(((-1.0)*x2783))+((x2754*x2755))+(((0.0627673694158124)*r22))+pz+((r20*sj5*x2754))+(((-1.0)*r21*sj5*x2778))+(((-0.145649059756499)*x2755))+(((0.143449603387718)*cj5*x2777))+(((-1.0)*r20*x2748)));
evalcond[1]=((((-1.0)*x2780))+(((0.145649059756499)*sj0*x2746))+(((0.143449603387718)*x2762*x2779))+(((-1.0)*sj0*x2752*x2754))+(((-1.0)*py*x2751))+(((-0.0627673694158124)*r12*sj0))+(((-1.0)*x2741*x2786))+((r10*sj0*x2748))+(((-0.124232630584188)*sj0*x2758))+(((-1.0)*sj0*x2746*x2754))+(((-0.143449603387718)*x2747*x2762)));
evalcond[2]=(x2780+(((-1.0)*r00*x2743*x2754))+(((-1.0)*x2742*x2786))+(((-0.124232630584188)*cj0*x2756))+(((0.145649059756499)*cj0*x2757))+(((-1.0)*px*x2768))+(((-0.0627673694158124)*cj0*r02))+(((0.145649059756499)*r00*x2743))+(((-1.0)*cj0*x2763*x2778))+(((-1.0)*cj0*x2754*x2757))+((r01*x2743*x2778)));
evalcond[3]=(((x2779*x2781))+((x2749*x2752))+(((0.0160210495477794)*x2789))+(((-0.0160210495477794)*x2773))+((x2746*x2749))+((sj0*x2753*x2755))+(((-1.0)*pz*x2751))+((sj4*x2746*x2761))+((x2747*x2787))+((x2746*x2782))+((r12*x2784))+(((-1.0)*x2747*x2781))+((x2755*x2771))+((x2745*x2758))+((x2744*x2790))+((r20*x2753*x2765))+((x2765*x2767))+((sj0*x2783))+((x2752*x2782))+(((-1.0)*x2779*x2787))+(((-1.0)*r12*x2745))+((sj4*x2752*x2761))+(((-1.0)*r21*x2744*x2765)));
evalcond[4]=(((x2749*x2750))+((x2749*x2757))+(((-0.0160210495477794)*x2760))+(((-1.0)*x2774*x2787))+(((-1.0)*pz*x2768))+((sj4*x2757*x2761))+(((-1.0)*r21*x2743*x2744))+((r02*x2784))+((x2755*x2775))+((x2744*x2788))+((x2745*x2756))+((x2763*x2787))+((sj4*x2750*x2761))+((x2757*x2782))+((x2774*x2781))+((x2750*x2782))+(((-1.0)*x2763*x2781))+((x2743*x2767))+((r20*x2743*x2753))+((cj0*x2783))+((cj0*x2753*x2755))+(((0.0160210495477794)*cj4*x2760))+(((-1.0)*r02*x2745)));
evalcond[5]=(((x2752*x2753))+((x2745*x2773))+((x2781*x2790))+(((-1.0)*x2744*x2779))+(((-0.161948875218934)*cj3*r22*x2762))+(((-1.0)*sj0*x2749*x2755))+((x2746*x2753))+(((-1.0)*x2755*x2761*x2762))+(((-1.0)*cj5*r20*x2762*x2772))+(((-1.0)*x2745*x2789))+(((-1.0)*sj0*x2786))+(((-1.0)*r20*x2765*x2782))+((x2744*x2747))+(((0.064677809339343)*x2752))+(((-1.0)*r21*x2765*x2781))+(((-1.0)*x2764))+((r21*x2772*x2785))+(((-1.0)*py))+(((0.064677809339343)*x2746))+(((-1.0)*x2770))+(((-1.0)*sj0*x2755*x2782))+(((0.0160210495477794)*x2758))+(((-1.0)*r20*x2749*x2765))+(((-1.0)*r20*x2761*x2785)));
evalcond[6]=((((-1.0)*x2744*x2774))+((x2753*x2757))+((x2745*x2760))+((x2781*x2788))+(((-1.0)*r20*x2743*x2782))+(((0.007)*sj0))+((x2744*x2763))+(((-1.0)*r21*x2743*x2781))+((x2750*x2753))+(((-1.0)*r20*x2743*x2749))+(((0.064677809339343)*x2750))+(((0.064677809339343)*x2757))+(((-1.0)*x2769))+(((-1.0)*px))+(((-1.0)*cj0*x2755*x2782))+(((-1.0)*cj0*x2786))+(((-1.0)*x2743*x2761*x2777))+(((0.0160210495477794)*x2756))+(((-1.0)*cj0*cj5*x2772*x2777))+(((-1.0)*cj0*sj4*x2755*x2761))+((r21*x2743*x2787))+(((-1.0)*cj4*x2745*x2760))+(((-1.0)*cj0*x2749*x2755))+(((-1.0)*x2760*x2784)));
evalcond[7]=((((-1.0)*r01*x2744*x2765))+((sj0*x2750*x2753))+((x2757*x2771))+(((-1.0)*x2791))+((x2750*x2771))+((sj0*x2753*x2757))+(((-1.0)*sj0*x2769))+((sj0*x2744*x2763))+(((-1.0)*cj0*x2747*x2776))+(((-1.0)*cj0*x2746*x2759))+(((0.0160210495477794)*sj0*x2756))+((r11*x2743*x2776))+(((-0.046746319868033)*cj0*r12))+(((0.007)*x2741))+(((0.0809712504171555)*r10*x2743))+(((0.0809712504171555)*cj0*x2746))+(((-0.140253680131967)*cj0*x2758))+(((-1.0)*px*x2751))+(((-1.0)*r10*x2743*x2759)));
evalcond[8]=(((cj0*x2746*x2753))+(((-1.0)*x2791))+(((0.0160210495477794)*cj0*x2758))+(((-1.0)*sj0*x2757*x2759))+((x2750*x2766))+(((-1.0)*py*x2768))+(((-0.007)*x2742))+((x2757*x2766))+((r10*x2743*x2753))+(((-0.161948875218934)*x2762*x2763))+((cj0*x2744*x2747))+(((0.064677809339343)*r10*x2743))+((x2746*x2775))+(((0.161948875218934)*x2762*x2774))+(((-0.140253680131967)*sj0*x2756))+(((-1.0)*sj0*x2750*x2759))+(((-0.046746319868033)*r02*sj0))+(((-1.0)*r11*x2743*x2744))+(((-1.0)*cj0*x2770)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2792=((0.249980320149909)*cj1);
IkReal x2793=((0.433001339129174)*sj1);
IkReal x2794=(cj5*r21);
IkReal x2795=(r20*sj5);
IkReal x2796=((0.433001339129174)*cj1);
IkReal x2797=(r00*sj5);
IkReal x2798=((0.249980320149909)*sj1);
IkReal x2799=(cj5*r01);
IkReal x2800=((0.866036765876652)*cj5*sj4);
IkReal x2801=(cj4*x2799);
IkReal x2802=((0.866036765876652)*sj4*sj5);
IkReal x2803=((0.750019679850091)*cj4*r02);
IkReal x2804=((0.750019679850091)*cj4*r22);
if( IKabs((((x2796*x2801))+((sj1*x2804))+(((-1.0)*x2796*x2799))+(((-1.0)*x2796*x2797))+((cj1*x2803))+((r02*x2792))+((r22*x2798))+(((-1.0)*r21*sj1*x2802))+(((-1.0)*cj1*r01*x2802))+((cj4*x2796*x2797))+((cj4*x2793*x2795))+((cj4*x2793*x2794))+((cj1*r00*x2800))+((r20*sj1*x2800))+(((-1.0)*x2793*x2794))+(((-1.0)*x2793*x2795)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2795*x2796))+(((-1.0)*sj1*x2803))+((cj4*x2794*x2796))+((cj1*x2804))+((cj4*x2795*x2796))+(((-1.0)*cj1*r21*x2802))+(((-1.0)*r00*sj1*x2800))+((x2793*x2799))+((x2793*x2797))+(((-1.0)*x2793*x2801))+((r22*x2792))+((cj1*r20*x2800))+((r01*sj1*x2802))+(((-1.0)*cj4*x2793*x2797))+(((-1.0)*x2794*x2796))+(((-1.0)*r02*x2798)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2796*x2801))+((sj1*x2804))+(((-1.0)*x2796*x2799))+(((-1.0)*x2796*x2797))+((cj1*x2803))+((r02*x2792))+((r22*x2798))+(((-1.0)*r21*sj1*x2802))+(((-1.0)*cj1*r01*x2802))+((cj4*x2796*x2797))+((cj4*x2793*x2795))+((cj4*x2793*x2794))+((cj1*r00*x2800))+((r20*sj1*x2800))+(((-1.0)*x2793*x2794))+(((-1.0)*x2793*x2795))))+IKsqr(((((-1.0)*x2795*x2796))+(((-1.0)*sj1*x2803))+((cj4*x2794*x2796))+((cj1*x2804))+((cj4*x2795*x2796))+(((-1.0)*cj1*r21*x2802))+(((-1.0)*r00*sj1*x2800))+((x2793*x2799))+((x2793*x2797))+(((-1.0)*x2793*x2801))+((r22*x2792))+((cj1*r20*x2800))+((r01*sj1*x2802))+(((-1.0)*cj4*x2793*x2797))+(((-1.0)*x2794*x2796))+(((-1.0)*r02*x2798))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x2796*x2801))+((sj1*x2804))+(((-1.0)*x2796*x2799))+(((-1.0)*x2796*x2797))+((cj1*x2803))+((r02*x2792))+((r22*x2798))+(((-1.0)*r21*sj1*x2802))+(((-1.0)*cj1*r01*x2802))+((cj4*x2796*x2797))+((cj4*x2793*x2795))+((cj4*x2793*x2794))+((cj1*r00*x2800))+((r20*sj1*x2800))+(((-1.0)*x2793*x2794))+(((-1.0)*x2793*x2795))), ((((-1.0)*x2795*x2796))+(((-1.0)*sj1*x2803))+((cj4*x2794*x2796))+((cj1*x2804))+((cj4*x2795*x2796))+(((-1.0)*cj1*r21*x2802))+(((-1.0)*r00*sj1*x2800))+((x2793*x2799))+((x2793*x2797))+(((-1.0)*x2793*x2801))+((r22*x2792))+((cj1*r20*x2800))+((r01*sj1*x2802))+(((-1.0)*cj4*x2793*x2797))+(((-1.0)*x2794*x2796))+(((-1.0)*r02*x2798))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2805=IKsin(j2);
IkReal x2806=IKcos(j2);
IkReal x2807=(cj4*r02);
IkReal x2808=(cj4*sj5);
IkReal x2809=((0.433001339129174)*r20);
IkReal x2810=(cj5*r21);
IkReal x2811=(cj4*cj5);
IkReal x2812=((0.249980320149909)*sj3);
IkReal x2813=((1.0)*cj3);
IkReal x2814=(r00*sj5);
IkReal x2815=((0.750019679850091)*sj3);
IkReal x2816=((0.0160210495477794)*r22);
IkReal x2817=(cj5*r01);
IkReal x2818=((0.499980319762597)*sj4);
IkReal x2819=((0.866036765876652)*sj4);
IkReal x2820=(cj5*r20);
IkReal x2821=(r01*sj5);
IkReal x2822=((0.433001339129174)*sj3);
IkReal x2823=((0.0184992718312161)*sj4);
IkReal x2824=(r21*sj5);
IkReal x2825=(r20*sj5);
IkReal x2826=(cj4*r22);
IkReal x2827=(cj1*x2806);
IkReal x2828=(sj1*x2805);
IkReal x2829=(cj5*r00*sj4);
IkReal x2830=(cj1*x2805);
IkReal x2831=(r20*x2818);
IkReal x2832=(sj1*x2806);
IkReal x2833=(x2828+x2827);
evalcond[0]=((((-0.750019679850091)*x2826))+(((-0.249980320149909)*r22))+(((-0.433001339129174)*cj4*x2810))+(((-1.0)*x2808*x2809))+((x2819*x2824))+(((0.433001339129174)*x2810))+(((-1.0)*x2819*x2820))+((sj5*x2809))+x2833);
evalcond[1]=((((-0.433001339129174)*r01*x2811))+(((-1.0)*x2832))+(((-0.249980320149909)*r02))+((x2819*x2821))+(((-1.0)*cj5*r00*x2819))+(((0.433001339129174)*x2814))+(((0.433001339129174)*x2817))+(((-0.433001339129174)*r00*x2808))+x2830+(((-0.750019679850091)*x2807)));
evalcond[2]=(((cj4*x2816))+(((0.00924927184554663)*cj4*x2810))+(((-0.187)*x2827))+(((-0.187)*x2828))+(((0.064677809339343)*x2810))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*x2816))+(((0.064677809339343)*x2825))+(((0.00924927184554663)*r20*x2808))+(((-1.0)*x2823*x2824))+((x2820*x2823)));
evalcond[3]=((((-0.0160210495477794)*r02))+(((-0.29)*sj1))+(((-1.0)*x2821*x2823))+((cj5*r00*x2823))+(((0.187)*x2832))+(((0.064677809339343)*x2817))+(((0.064677809339343)*x2814))+(((-1.0)*px))+(((0.0160210495477794)*x2807))+(((0.00924927184554663)*r01*x2811))+(((0.00924927184554663)*r00*x2808))+(((-0.187)*x2830)));
evalcond[4]=(((cj3*x2814*x2818))+((cj3*x2817*x2818))+((r00*x2808*x2812))+((r01*x2811*x2812))+((cj5*r00*sj3*x2818))+(((-1.0)*r02*x2822))+((x2807*x2822))+((x2815*x2817))+(((-1.0)*r00*x2811*x2813))+((cj3*r01*x2808))+((x2814*x2815))+x2833+(((-1.0)*sj3*x2818*x2821))+((cj3*r02*x2819)));
evalcond[5]=(((x2810*x2815))+(((-1.0)*x2830))+((x2822*x2826))+((cj3*x2818*x2825))+((cj4*x2810*x2812))+((x2815*x2825))+((r20*x2808*x2812))+((cj3*r21*x2808))+((cj3*r22*x2819))+((sj3*x2818*x2820))+(((-1.0)*r22*x2822))+((cj3*x2810*x2818))+x2832+(((-1.0)*r20*x2811*x2813))+(((-1.0)*sj3*x2818*x2824)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2834=((0.249980320149909)*cj1);
IkReal x2835=((0.433001339129174)*sj1);
IkReal x2836=(cj5*r21);
IkReal x2837=(r20*sj5);
IkReal x2838=((0.433001339129174)*cj1);
IkReal x2839=(r00*sj5);
IkReal x2840=((0.249980320149909)*sj1);
IkReal x2841=(cj5*r01);
IkReal x2842=((0.866036765876652)*cj5*sj4);
IkReal x2843=(cj4*x2841);
IkReal x2844=((0.866036765876652)*sj4*sj5);
IkReal x2845=((0.750019679850091)*cj4*r02);
IkReal x2846=((0.750019679850091)*cj4*r22);
if( IKabs((((cj1*r01*x2844))+((sj1*x2846))+(((-1.0)*cj1*r00*x2842))+((cj4*x2835*x2836))+((cj4*x2835*x2837))+((x2838*x2841))+(((-1.0)*cj4*x2838*x2839))+((r22*x2840))+((x2838*x2839))+(((-1.0)*r21*sj1*x2844))+(((-1.0)*x2838*x2843))+(((-1.0)*x2835*x2836))+(((-1.0)*x2835*x2837))+((r20*sj1*x2842))+(((-1.0)*r02*x2834))+(((-1.0)*cj1*x2845)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x2845))+((cj4*x2836*x2838))+((cj4*x2837*x2838))+((cj4*x2835*x2839))+(((-1.0)*cj1*r21*x2844))+(((-1.0)*x2836*x2838))+(((-1.0)*x2835*x2841))+((r00*sj1*x2842))+(((-1.0)*x2837*x2838))+(((-1.0)*x2835*x2839))+((r22*x2834))+((cj1*r20*x2842))+((cj1*x2846))+(((-1.0)*r01*sj1*x2844))+((r02*x2840))+((x2835*x2843)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*r01*x2844))+((sj1*x2846))+(((-1.0)*cj1*r00*x2842))+((cj4*x2835*x2836))+((cj4*x2835*x2837))+((x2838*x2841))+(((-1.0)*cj4*x2838*x2839))+((r22*x2840))+((x2838*x2839))+(((-1.0)*r21*sj1*x2844))+(((-1.0)*x2838*x2843))+(((-1.0)*x2835*x2836))+(((-1.0)*x2835*x2837))+((r20*sj1*x2842))+(((-1.0)*r02*x2834))+(((-1.0)*cj1*x2845))))+IKsqr((((sj1*x2845))+((cj4*x2836*x2838))+((cj4*x2837*x2838))+((cj4*x2835*x2839))+(((-1.0)*cj1*r21*x2844))+(((-1.0)*x2836*x2838))+(((-1.0)*x2835*x2841))+((r00*sj1*x2842))+(((-1.0)*x2837*x2838))+(((-1.0)*x2835*x2839))+((r22*x2834))+((cj1*r20*x2842))+((cj1*x2846))+(((-1.0)*r01*sj1*x2844))+((r02*x2840))+((x2835*x2843))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*r01*x2844))+((sj1*x2846))+(((-1.0)*cj1*r00*x2842))+((cj4*x2835*x2836))+((cj4*x2835*x2837))+((x2838*x2841))+(((-1.0)*cj4*x2838*x2839))+((r22*x2840))+((x2838*x2839))+(((-1.0)*r21*sj1*x2844))+(((-1.0)*x2838*x2843))+(((-1.0)*x2835*x2836))+(((-1.0)*x2835*x2837))+((r20*sj1*x2842))+(((-1.0)*r02*x2834))+(((-1.0)*cj1*x2845))), (((sj1*x2845))+((cj4*x2836*x2838))+((cj4*x2837*x2838))+((cj4*x2835*x2839))+(((-1.0)*cj1*r21*x2844))+(((-1.0)*x2836*x2838))+(((-1.0)*x2835*x2841))+((r00*sj1*x2842))+(((-1.0)*x2837*x2838))+(((-1.0)*x2835*x2839))+((r22*x2834))+((cj1*r20*x2842))+((cj1*x2846))+(((-1.0)*r01*sj1*x2844))+((r02*x2840))+((x2835*x2843))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2847=IKcos(j2);
IkReal x2848=IKsin(j2);
IkReal x2849=(cj4*r02);
IkReal x2850=(cj4*sj5);
IkReal x2851=((0.433001339129174)*r20);
IkReal x2852=(cj5*r21);
IkReal x2853=(cj4*cj5);
IkReal x2854=(r01*sj3);
IkReal x2855=((1.0)*cj3);
IkReal x2856=(r00*sj5);
IkReal x2857=((0.750019679850091)*sj3);
IkReal x2858=((0.0160210495477794)*r22);
IkReal x2859=(r20*sj5);
IkReal x2860=((0.433001339129174)*sj3);
IkReal x2861=(cj4*r22);
IkReal x2862=(cj5*r01);
IkReal x2863=((0.866036765876652)*sj4);
IkReal x2864=(cj5*r20);
IkReal x2865=(sj4*sj5);
IkReal x2866=((0.499980319762597)*sj3);
IkReal x2867=((0.249980320149909)*sj3);
IkReal x2868=(sj1*x2847);
IkReal x2869=(cj1*x2847);
IkReal x2870=(cj5*r00*sj4);
IkReal x2871=((0.499980319762597)*cj3*sj4);
IkReal x2872=(sj1*x2848);
IkReal x2873=(cj1*x2848);
IkReal x2874=((1.0)*x2873);
evalcond[0]=(((r21*sj5*x2863))+(((-0.249980320149909)*r22))+(((-1.0)*x2850*x2851))+(((-0.750019679850091)*x2861))+((sj5*x2851))+(((-0.433001339129174)*cj4*x2852))+(((-1.0)*x2863*x2864))+(((0.433001339129174)*x2852))+x2869+x2872);
evalcond[1]=((((-0.750019679850091)*x2849))+(((-0.249980320149909)*r02))+(((-1.0)*cj5*r00*x2863))+(((-1.0)*x2874))+(((0.433001339129174)*x2862))+(((-0.433001339129174)*r00*x2850))+(((-0.433001339129174)*r01*x2853))+(((0.433001339129174)*x2856))+((r01*sj5*x2863))+x2868);
evalcond[2]=((((-0.187)*x2872))+(((-0.0184992718312161)*r21*x2865))+(((-0.187)*x2869))+(((0.0184992718312161)*sj4*x2864))+(((0.064677809339343)*x2859))+(((0.064677809339343)*x2852))+((cj4*x2858))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.00924927184554663)*r20*x2850))+(((-1.0)*x2858))+(((0.00924927184554663)*cj4*x2852)));
evalcond[3]=((((0.0184992718312161)*x2870))+(((-0.0160210495477794)*r02))+(((-0.0184992718312161)*r01*x2865))+(((-0.187)*x2868))+(((0.064677809339343)*x2856))+(((0.29)*sj1))+(((0.0160210495477794)*x2849))+(((-1.0)*px))+(((0.064677809339343)*x2862))+(((0.187)*x2873))+(((0.00924927184554663)*r01*x2853))+(((0.00924927184554663)*r00*x2850)));
evalcond[4]=(((x2852*x2871))+((r20*x2850*x2867))+((cj3*r21*x2850))+(((-1.0)*x2874))+((x2852*x2857))+(((-1.0)*r22*x2860))+((sj4*x2864*x2866))+((x2859*x2871))+((cj3*r22*x2863))+(((-1.0)*r20*x2853*x2855))+((cj4*x2852*x2867))+(((-1.0)*r21*x2865*x2866))+((x2857*x2859))+x2868+((x2860*x2861)));
evalcond[5]=((((-1.0)*r02*x2860))+((cj3*r02*x2863))+((r00*x2850*x2867))+((x2856*x2871))+(((-1.0)*x2869))+(((-1.0)*x2872))+((x2866*x2870))+((x2862*x2871))+((x2849*x2860))+(((0.750019679850091)*cj5*x2854))+((x2856*x2857))+((cj3*r01*x2850))+(((-0.499980319762597)*x2854*x2865))+(((0.249980320149909)*x2853*x2854))+(((-1.0)*r00*x2853*x2855)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2875=((0.433001339129174)*sj1);
IkReal x2876=(cj5*r21);
IkReal x2877=(r10*sj5);
IkReal x2878=((0.433001339129174)*cj1);
IkReal x2879=(r20*sj5);
IkReal x2880=(cj5*r11);
IkReal x2881=((0.866036765876652)*sj4);
IkReal x2882=(cj1*sj5);
IkReal x2883=(cj5*r20);
IkReal x2884=((0.249980320149909)*r22);
IkReal x2885=(sj1*sj5);
IkReal x2886=((0.249980320149909)*r12);
IkReal x2887=(cj5*r10);
IkReal x2888=((0.750019679850091)*cj4*r12);
IkReal x2889=((0.750019679850091)*cj4*r22);
if( IKabs((((cj1*x2881*x2887))+(((-1.0)*x2877*x2878))+((cj4*x2875*x2876))+((cj4*x2875*x2879))+((cj4*x2878*x2880))+((sj1*x2889))+((sj1*x2884))+(((-1.0)*r11*x2881*x2882))+((cj1*x2886))+((cj1*x2888))+(((-1.0)*r21*x2881*x2885))+(((-1.0)*x2878*x2880))+((sj1*x2881*x2883))+(((-1.0)*x2875*x2879))+(((-1.0)*x2875*x2876))+((cj4*x2877*x2878)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x2881*x2883))+(((-1.0)*x2876*x2878))+(((-1.0)*cj4*x2875*x2877))+((r11*x2881*x2885))+((cj4*x2878*x2879))+((x2875*x2877))+(((-1.0)*x2878*x2879))+((cj1*x2889))+((cj1*x2884))+(((-1.0)*r21*x2881*x2882))+(((-1.0)*cj4*x2875*x2880))+((x2875*x2880))+(((-1.0)*sj1*x2881*x2887))+(((-1.0)*sj1*x2886))+(((-1.0)*sj1*x2888))+((cj4*x2876*x2878)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*x2881*x2887))+(((-1.0)*x2877*x2878))+((cj4*x2875*x2876))+((cj4*x2875*x2879))+((cj4*x2878*x2880))+((sj1*x2889))+((sj1*x2884))+(((-1.0)*r11*x2881*x2882))+((cj1*x2886))+((cj1*x2888))+(((-1.0)*r21*x2881*x2885))+(((-1.0)*x2878*x2880))+((sj1*x2881*x2883))+(((-1.0)*x2875*x2879))+(((-1.0)*x2875*x2876))+((cj4*x2877*x2878))))+IKsqr((((cj1*x2881*x2883))+(((-1.0)*x2876*x2878))+(((-1.0)*cj4*x2875*x2877))+((r11*x2881*x2885))+((cj4*x2878*x2879))+((x2875*x2877))+(((-1.0)*x2878*x2879))+((cj1*x2889))+((cj1*x2884))+(((-1.0)*r21*x2881*x2882))+(((-1.0)*cj4*x2875*x2880))+((x2875*x2880))+(((-1.0)*sj1*x2881*x2887))+(((-1.0)*sj1*x2886))+(((-1.0)*sj1*x2888))+((cj4*x2876*x2878))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*x2881*x2887))+(((-1.0)*x2877*x2878))+((cj4*x2875*x2876))+((cj4*x2875*x2879))+((cj4*x2878*x2880))+((sj1*x2889))+((sj1*x2884))+(((-1.0)*r11*x2881*x2882))+((cj1*x2886))+((cj1*x2888))+(((-1.0)*r21*x2881*x2885))+(((-1.0)*x2878*x2880))+((sj1*x2881*x2883))+(((-1.0)*x2875*x2879))+(((-1.0)*x2875*x2876))+((cj4*x2877*x2878))), (((cj1*x2881*x2883))+(((-1.0)*x2876*x2878))+(((-1.0)*cj4*x2875*x2877))+((r11*x2881*x2885))+((cj4*x2878*x2879))+((x2875*x2877))+(((-1.0)*x2878*x2879))+((cj1*x2889))+((cj1*x2884))+(((-1.0)*r21*x2881*x2882))+(((-1.0)*cj4*x2875*x2880))+((x2875*x2880))+(((-1.0)*sj1*x2881*x2887))+(((-1.0)*sj1*x2886))+(((-1.0)*sj1*x2888))+((cj4*x2876*x2878))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2890=IKsin(j2);
IkReal x2891=IKcos(j2);
IkReal x2892=(cj4*sj5);
IkReal x2893=((0.433001339129174)*r20);
IkReal x2894=((0.064677809339343)*cj5);
IkReal x2895=(r10*sj3);
IkReal x2896=(cj3*r21);
IkReal x2897=(r20*sj5);
IkReal x2898=((0.750019679850091)*sj3);
IkReal x2899=(r10*sj5);
IkReal x2900=((0.0160210495477794)*r22);
IkReal x2901=((0.499980319762597)*sj4);
IkReal x2902=(sj3*sj5);
IkReal x2903=(cj5*r21);
IkReal x2904=(cj4*r12);
IkReal x2905=((0.433001339129174)*sj3);
IkReal x2906=((0.866036765876652)*sj4);
IkReal x2907=(cj5*r10);
IkReal x2908=(cj5*r11);
IkReal x2909=(cj5*r20);
IkReal x2910=((0.433001339129174)*cj4);
IkReal x2911=(cj4*r22);
IkReal x2912=((0.00924927184554663)*cj4);
IkReal x2913=((0.0184992718312161)*sj4);
IkReal x2914=(cj1*x2891);
IkReal x2915=(sj1*x2890);
IkReal x2916=(cj1*x2890);
IkReal x2917=(sj1*x2891);
IkReal x2918=((0.249980320149909)*cj4*sj3);
IkReal x2919=(sj5*x2913);
IkReal x2920=((1.0)*cj3*cj4*cj5);
IkReal x2921=(x2914+x2915);
evalcond[0]=((((-1.0)*x2906*x2909))+(((-0.249980320149909)*r22))+((r21*sj5*x2906))+((sj5*x2893))+(((-1.0)*x2892*x2893))+(((0.433001339129174)*x2903))+(((-0.750019679850091)*x2911))+(((-1.0)*x2903*x2910))+x2921);
evalcond[1]=((((-1.0)*x2906*x2907))+(((-0.750019679850091)*x2904))+(((-0.249980320149909)*r12))+(((-0.433001339129174)*r10*x2892))+(((0.433001339129174)*x2899))+((r11*sj5*x2906))+(((0.433001339129174)*x2908))+(((-1.0)*x2908*x2910))+(((-1.0)*x2917))+x2916);
evalcond[2]=((((0.00924927184554663)*r20*x2892))+((r21*x2894))+((x2909*x2913))+(((-1.0)*x2900))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.064677809339343)*x2897))+((cj4*x2900))+(((-1.0)*r21*x2919))+((x2903*x2912))+(((-0.187)*x2915))+(((-0.187)*x2914)));
evalcond[3]=((((0.0160210495477794)*x2904))+(((-0.0160210495477794)*r12))+(((-0.29)*sj1))+(((0.187)*x2917))+((x2907*x2913))+(((-1.0)*r11*x2919))+(((-1.0)*py))+((r11*x2894))+(((0.064677809339343)*x2899))+(((0.00924927184554663)*r10*x2892))+((x2908*x2912))+(((-0.187)*x2916)));
evalcond[4]=(((cj5*x2895*x2901))+(((0.750019679850091)*sj5*x2895))+(((-1.0)*cj3*cj4*x2907))+((x2904*x2905))+((cj3*x2899*x2901))+((cj3*r11*x2892))+((cj3*x2901*x2908))+((x2898*x2908))+(((-1.0)*r12*x2905))+((cj3*r12*x2906))+(((-1.0)*r11*x2901*x2902))+(((0.249980320149909)*x2892*x2895))+((x2908*x2918))+x2921);
evalcond[5]=(((cj5*x2896*x2901))+((cj3*r22*x2906))+(((0.249980320149909)*r20*sj3*x2892))+((cj3*x2897*x2901))+((sj3*x2901*x2909))+(((-1.0)*r21*x2901*x2902))+(((-1.0)*cj3*cj4*x2909))+((x2892*x2896))+((x2898*x2903))+((x2905*x2911))+((x2897*x2898))+(((-1.0)*x2916))+((x2903*x2918))+x2917+(((-1.0)*r22*x2905)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2922=((0.433001339129174)*sj1);
IkReal x2923=(cj5*r21);
IkReal x2924=(r10*sj5);
IkReal x2925=((0.433001339129174)*cj1);
IkReal x2926=(r20*sj5);
IkReal x2927=(cj5*r11);
IkReal x2928=((0.866036765876652)*sj4);
IkReal x2929=(cj1*sj5);
IkReal x2930=(cj5*r20);
IkReal x2931=((0.249980320149909)*r22);
IkReal x2932=(sj1*sj5);
IkReal x2933=((0.249980320149909)*r12);
IkReal x2934=(cj5*r10);
IkReal x2935=((0.750019679850091)*cj4*r12);
IkReal x2936=((0.750019679850091)*cj4*r22);
if( IKabs((((sj1*x2931))+((sj1*x2936))+((r11*x2928*x2929))+((x2925*x2927))+((x2924*x2925))+(((-1.0)*r21*x2928*x2932))+(((-1.0)*cj1*x2928*x2934))+(((-1.0)*cj4*x2924*x2925))+(((-1.0)*cj4*x2925*x2927))+(((-1.0)*cj1*x2933))+(((-1.0)*cj1*x2935))+((sj1*x2928*x2930))+((cj4*x2922*x2923))+((cj4*x2922*x2926))+(((-1.0)*x2922*x2926))+(((-1.0)*x2922*x2923)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x2933))+((sj1*x2935))+(((-1.0)*r21*x2928*x2929))+((cj4*x2925*x2926))+(((-1.0)*x2923*x2925))+((cj1*x2928*x2930))+(((-1.0)*x2925*x2926))+((cj1*x2936))+((cj1*x2931))+((cj4*x2923*x2925))+(((-1.0)*r11*x2928*x2932))+((sj1*x2928*x2934))+((cj4*x2922*x2927))+((cj4*x2922*x2924))+(((-1.0)*x2922*x2927))+(((-1.0)*x2922*x2924)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x2931))+((sj1*x2936))+((r11*x2928*x2929))+((x2925*x2927))+((x2924*x2925))+(((-1.0)*r21*x2928*x2932))+(((-1.0)*cj1*x2928*x2934))+(((-1.0)*cj4*x2924*x2925))+(((-1.0)*cj4*x2925*x2927))+(((-1.0)*cj1*x2933))+(((-1.0)*cj1*x2935))+((sj1*x2928*x2930))+((cj4*x2922*x2923))+((cj4*x2922*x2926))+(((-1.0)*x2922*x2926))+(((-1.0)*x2922*x2923))))+IKsqr((((sj1*x2933))+((sj1*x2935))+(((-1.0)*r21*x2928*x2929))+((cj4*x2925*x2926))+(((-1.0)*x2923*x2925))+((cj1*x2928*x2930))+(((-1.0)*x2925*x2926))+((cj1*x2936))+((cj1*x2931))+((cj4*x2923*x2925))+(((-1.0)*r11*x2928*x2932))+((sj1*x2928*x2934))+((cj4*x2922*x2927))+((cj4*x2922*x2924))+(((-1.0)*x2922*x2927))+(((-1.0)*x2922*x2924))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((sj1*x2931))+((sj1*x2936))+((r11*x2928*x2929))+((x2925*x2927))+((x2924*x2925))+(((-1.0)*r21*x2928*x2932))+(((-1.0)*cj1*x2928*x2934))+(((-1.0)*cj4*x2924*x2925))+(((-1.0)*cj4*x2925*x2927))+(((-1.0)*cj1*x2933))+(((-1.0)*cj1*x2935))+((sj1*x2928*x2930))+((cj4*x2922*x2923))+((cj4*x2922*x2926))+(((-1.0)*x2922*x2926))+(((-1.0)*x2922*x2923))), (((sj1*x2933))+((sj1*x2935))+(((-1.0)*r21*x2928*x2929))+((cj4*x2925*x2926))+(((-1.0)*x2923*x2925))+((cj1*x2928*x2930))+(((-1.0)*x2925*x2926))+((cj1*x2936))+((cj1*x2931))+((cj4*x2923*x2925))+(((-1.0)*r11*x2928*x2932))+((sj1*x2928*x2934))+((cj4*x2922*x2927))+((cj4*x2922*x2924))+(((-1.0)*x2922*x2927))+(((-1.0)*x2922*x2924))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2937=IKcos(j2);
IkReal x2938=IKsin(j2);
IkReal x2939=(cj4*sj5);
IkReal x2940=((0.433001339129174)*r20);
IkReal x2941=((0.064677809339343)*cj5);
IkReal x2942=(r10*sj3);
IkReal x2943=(cj3*sj4);
IkReal x2944=((0.433001339129174)*r10);
IkReal x2945=((0.0160210495477794)*r22);
IkReal x2946=(r20*sj5);
IkReal x2947=(r11*sj5);
IkReal x2948=(cj5*r20);
IkReal x2949=(cj5*r21);
IkReal x2950=((0.866036765876652)*sj4);
IkReal x2951=(cj5*r10);
IkReal x2952=(cj5*r11);
IkReal x2953=((0.750019679850091)*sj3);
IkReal x2954=(cj4*sj3);
IkReal x2955=((0.750019679850091)*cj4);
IkReal x2956=((0.433001339129174)*cj4);
IkReal x2957=((0.433001339129174)*r22);
IkReal x2958=((0.0160210495477794)*r12);
IkReal x2959=((0.0184992718312161)*sj4);
IkReal x2960=(r21*sj5);
IkReal x2961=(r10*sj5);
IkReal x2962=((0.00924927184554663)*cj4);
IkReal x2963=(sj1*x2937);
IkReal x2964=(cj1*x2937);
IkReal x2965=((0.433001339129174)*r12*sj3);
IkReal x2966=((0.499980319762597)*sj3*sj4);
IkReal x2967=(sj1*x2938);
IkReal x2968=(cj1*x2938);
IkReal x2969=((1.0)*x2968);
IkReal x2970=((1.0)*cj3*cj4*cj5);
evalcond[0]=((((-1.0)*x2939*x2940))+(((-1.0)*x2948*x2950))+(((-0.249980320149909)*r22))+((sj5*x2940))+(((-1.0)*x2949*x2956))+(((-1.0)*r22*x2955))+x2964+x2967+(((0.433001339129174)*x2949))+((x2950*x2960)));
evalcond[1]=((((-1.0)*x2939*x2944))+(((-1.0)*x2952*x2956))+(((-0.249980320149909)*r12))+((x2947*x2950))+(((0.433001339129174)*x2952))+(((-1.0)*x2969))+((sj5*x2944))+(((-1.0)*r12*x2955))+(((-1.0)*x2950*x2951))+x2963);
evalcond[2]=(((r21*x2941))+(((0.064677809339343)*x2946))+((x2948*x2959))+(((-1.0)*x2959*x2960))+(((-1.0)*pz))+(((-0.187)*x2967))+(((-0.187)*x2964))+((cj4*x2945))+(((0.29)*cj1))+((x2949*x2962))+(((-1.0)*x2945))+(((0.00924927184554663)*r20*x2939)));
evalcond[3]=((((-1.0)*x2947*x2959))+((x2951*x2959))+(((-1.0)*x2958))+(((0.29)*sj1))+(((0.064677809339343)*x2961))+((x2952*x2962))+((cj4*x2958))+(((-1.0)*py))+(((-0.187)*x2963))+((r11*x2941))+(((0.00924927184554663)*r10*x2939))+(((0.187)*x2968)));
evalcond[4]=(((x2954*x2957))+((x2948*x2966))+((x2946*x2953))+((cj3*r21*x2939))+(((0.499980319762597)*x2943*x2946))+(((0.499980319762597)*x2943*x2949))+(((0.866036765876652)*r22*x2943))+(((-1.0)*cj3*cj4*x2948))+(((-1.0)*x2969))+(((-1.0)*sj3*x2957))+(((-1.0)*x2960*x2966))+(((0.249980320149909)*r20*sj3*x2939))+((x2949*x2953))+(((0.249980320149909)*x2949*x2954))+x2963);
evalcond[5]=((((0.750019679850091)*sj5*x2942))+(((0.499980319762597)*x2943*x2961))+(((0.499980319762597)*x2943*x2952))+(((-1.0)*x2964))+(((-1.0)*x2967))+(((0.433001339129174)*r12*x2954))+(((0.249980320149909)*x2939*x2942))+(((-1.0)*x2947*x2966))+((cj3*r11*x2939))+(((-1.0)*x2965))+(((-1.0)*cj3*cj4*x2951))+(((0.499980319762597)*cj5*sj4*x2942))+((x2952*x2953))+(((0.866036765876652)*r12*x2943))+(((0.249980320149909)*x2952*x2954)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2971=(sj0*sj5);
IkReal x2972=((0.866036765876652)*sj4);
IkReal x2973=(cj1*r21);
IkReal x2974=((0.433001339129174)*sj1);
IkReal x2975=(cj4*r20);
IkReal x2976=(r10*sj5);
IkReal x2977=(cj4*cj5);
IkReal x2978=(cj1*r11);
IkReal x2979=(cj5*sj0);
IkReal x2980=(r22*sj0);
IkReal x2981=((0.249980320149909)*cj1);
IkReal x2982=(cj5*r10);
IkReal x2983=((0.750019679850091)*cj4);
IkReal x2984=((0.433001339129174)*cj1);
IkReal x2985=((0.249980320149909)*sj1);
IkReal x2986=(r12*x2983);
CheckValue<IkReal> x2987 = IKatan2WithCheck(IkReal(((((-0.433001339129174)*cj5*x2978))+((x2971*x2974*x2975))+(((-1.0)*sj5*x2972*x2978))+(((-1.0)*x2976*x2984))+((r20*sj1*x2972*x2979))+(((-1.0)*r21*sj1*x2971*x2972))+((r12*x2981))+((r21*sj0*x2974*x2977))+(((-1.0)*r20*x2971*x2974))+((cj1*x2986))+((x2980*x2985))+((cj4*x2976*x2984))+(((0.433001339129174)*x2977*x2978))+((sj1*x2980*x2983))+(((-1.0)*r21*x2974*x2979))+((cj1*x2972*x2982)))),IkReal((((cj5*r11*x2974))+(((-0.433001339129174)*x2973*x2979))+(((-1.0)*r20*x2971*x2984))+((cj1*x2980*x2983))+((x2974*x2976))+(((-1.0)*x2971*x2972*x2973))+(((-1.0)*r12*x2985))+((r11*sj1*sj5*x2972))+(((-1.0)*sj1*x2972*x2982))+((x2980*x2981))+(((-1.0)*sj1*x2986))+(((0.433001339129174)*sj0*x2973*x2977))+(((-1.0)*r11*x2974*x2977))+((cj1*r20*x2972*x2979))+((x2971*x2975*x2984))+(((-1.0)*cj4*x2974*x2976)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2987.valid){
continue;
}
CheckValue<IkReal> x2988=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x2988.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x2987.value)+(((1.5707963267949)*(x2988.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2989=IKsin(j2);
IkReal x2990=IKcos(j2);
IkReal x2991=(cj4*r02);
IkReal x2992=(cj5*r11);
IkReal x2993=(cj3*cj4);
IkReal x2994=(r21*sj5);
IkReal x2995=(r10*sj5);
IkReal x2996=((1.0)*cj5);
IkReal x2997=((0.00924927184554663)*cj4);
IkReal x2998=((0.866036765876652)*sj4);
IkReal x2999=(cj5*r10);
IkReal x3000=(cj5*sj3);
IkReal x3001=(r00*sj5);
IkReal x3002=(cj0*sj1);
IkReal x3003=((0.433001339129174)*cj4);
IkReal x3004=((0.0184992718312161)*sj4);
IkReal x3005=(r20*sj5);
IkReal x3006=((0.249980320149909)*cj4);
IkReal x3007=(r11*sj5);
IkReal x3008=(cj5*r21);
IkReal x3009=(cj5*r00);
IkReal x3010=((0.0160210495477794)*r22);
IkReal x3011=(sj0*sj1);
IkReal x3012=(cj5*r01);
IkReal x3013=((0.750019679850091)*sj3);
IkReal x3014=(cj5*r20);
IkReal x3015=((0.750019679850091)*cj4);
IkReal x3016=(r22*sj3);
IkReal x3017=(r12*sj3);
IkReal x3018=((0.499980319762597)*sj4);
IkReal x3019=(r01*sj5);
IkReal x3020=((0.0160210495477794)*r12);
IkReal x3021=((0.433001339129174)*sj3);
IkReal x3022=(cj3*x3018);
IkReal x3023=((0.187)*x2990);
IkReal x3024=((1.0)*x2990);
IkReal x3025=(sj3*x3006);
IkReal x3026=(cj1*x2989);
IkReal x3027=(sj1*x2989);
IkReal x3028=(cj1*x2990);
IkReal x3029=(sj0*x3026);
evalcond[0]=(x3028+x3027+(((-1.0)*x3003*x3008))+(((-1.0)*x3003*x3005))+(((-0.249980320149909)*r22))+(((-1.0)*r22*x3015))+(((0.433001339129174)*x3008))+(((0.433001339129174)*x3005))+(((-1.0)*x2998*x3014))+((x2994*x2998)));
evalcond[1]=((((-1.0)*x3003*x3012))+((x2998*x3019))+(((-0.249980320149909)*r02))+(((0.433001339129174)*x3001))+(((0.433001339129174)*x3012))+(((-1.0)*x2998*x3009))+(((-0.750019679850091)*x2991))+((cj0*x3026))+(((-1.0)*x3001*x3003))+(((-1.0)*x3002*x3024)));
evalcond[2]=(x3029+((x2998*x3007))+(((0.433001339129174)*x2992))+(((0.433001339129174)*x2995))+(((-0.249980320149909)*r12))+(((-1.0)*x3011*x3024))+(((-1.0)*r12*x3015))+(((-1.0)*x2995*x3003))+(((-1.0)*x2992*x3003))+(((-1.0)*x2998*x2999)));
evalcond[3]=(((cj4*x3010))+(((0.064677809339343)*x3005))+(((0.064677809339343)*x3008))+(((-1.0)*cj1*x3023))+(((-0.187)*x3027))+(((-1.0)*x2994*x3004))+(((-1.0)*x3010))+(((-1.0)*pz))+(((0.29)*cj1))+((x3004*x3014))+((x2997*x3005))+((x2997*x3008)));
evalcond[4]=(((x2997*x3012))+(((-0.0160210495477794)*r02))+(((0.007)*sj0))+((x3002*x3023))+(((0.064677809339343)*x3012))+(((0.064677809339343)*x3001))+(((-1.0)*px))+(((-0.187)*cj0*x3026))+(((0.0160210495477794)*x2991))+(((-1.0)*x3004*x3019))+((x3004*x3009))+(((-0.29)*x3002))+((x2997*x3001)));
evalcond[5]=(((x2995*x2997))+((x2999*x3004))+(((-1.0)*x3020))+((x2992*x2997))+(((-0.187)*x3029))+(((-0.007)*cj0))+(((-1.0)*py))+((cj4*x3020))+((x3011*x3023))+(((-1.0)*x3004*x3007))+(((-0.29)*x3011))+(((0.064677809339343)*x2995))+(((0.064677809339343)*x2992)));
evalcond[6]=((((0.750019679850091)*r21*x3000))+(((-0.433001339129174)*x3016))+(((-1.0)*sj3*x2994*x3018))+(((-1.0)*x3026))+((cj3*r22*x2998))+((x3005*x3025))+((x3005*x3022))+((sj1*x2990))+((x3003*x3016))+((r21*x3000*x3006))+((x3008*x3022))+((x2993*x2994))+(((-1.0)*r20*x2993*x2996))+((x3005*x3013))+((r20*x3000*x3018)));
evalcond[7]=(((x2991*x3021))+((r00*x3000*x3018))+((x2989*x3002))+((x2993*x3019))+((x3001*x3013))+(((-1.0)*r00*x2993*x2996))+(((-1.0)*sj3*x3018*x3019))+(((0.750019679850091)*r01*x3000))+((r01*x3000*x3006))+((cj0*x3028))+(((-1.0)*r02*x3021))+((cj3*r02*x2998))+((x3012*x3022))+((x3001*x3022))+((x3001*x3025)));
evalcond[8]=((((-1.0)*sj3*x3007*x3018))+((x2995*x3022))+((x2995*x3025))+(((-0.433001339129174)*x3017))+((sj0*x3028))+((x2989*x3011))+(((-1.0)*r10*x2993*x2996))+((x2992*x3022))+((x2992*x3025))+((x2993*x3007))+((x2995*x3013))+((x3003*x3017))+((sj3*x2999*x3018))+((x2992*x3013))+((cj3*r12*x2998)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3030=((0.249980320149909)*cj1);
IkReal x3031=(cj0*cj1);
IkReal x3032=((0.750019679850091)*cj4);
IkReal x3033=(cj0*r20);
IkReal x3034=(cj1*r00);
IkReal x3035=(cj0*r22);
IkReal x3036=(r01*sj1);
IkReal x3037=((0.433001339129174)*sj1);
IkReal x3038=(cj5*r21);
IkReal x3039=((0.249980320149909)*sj1);
IkReal x3040=(cj1*r01);
IkReal x3041=((0.433001339129174)*cj5);
IkReal x3042=((0.433001339129174)*cj4);
IkReal x3043=((0.433001339129174)*sj5);
IkReal x3044=((0.866036765876652)*cj5*sj4);
IkReal x3045=((0.866036765876652)*sj4*sj5);
IkReal x3046=(cj4*x3041);
IkReal x3047=(cj4*sj5*x3037);
CheckValue<IkReal> x3048 = IKatan2WithCheck(IkReal((((r02*x3030))+(((-1.0)*cj0*x3037*x3038))+((sj1*x3033*x3044))+((x3033*x3047))+(((-1.0)*cj0*r21*sj1*x3045))+(((-1.0)*sj5*x3033*x3037))+((x3035*x3039))+((x3034*x3044))+((x3040*x3046))+(((-1.0)*x3034*x3043))+((sj1*x3032*x3035))+(((-1.0)*x3040*x3045))+(((-1.0)*x3040*x3041))+((cj1*r02*x3032))+((cj0*cj4*x3037*x3038))+((sj5*x3034*x3042)))),IkReal((((r20*sj5*x3031*x3042))+((x3031*x3038*x3042))+((x3030*x3035))+(((-1.0)*r21*x3031*x3045))+(((-0.433001339129174)*x3031*x3038))+(((-1.0)*r02*sj1*x3032))+((r22*x3031*x3032))+(((-1.0)*r00*x3047))+(((-1.0)*r20*x3031*x3043))+(((-1.0)*r02*x3039))+(((-1.0)*r00*sj1*x3044))+((r00*sj5*x3037))+(((-1.0)*x3036*x3046))+((r20*x3031*x3044))+((x3036*x3041))+((x3036*x3045)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3048.valid){
continue;
}
CheckValue<IkReal> x3049=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x3049.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x3048.value)+(((1.5707963267949)*(x3049.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3050=IKsin(j2);
IkReal x3051=IKcos(j2);
IkReal x3052=(cj4*r02);
IkReal x3053=(cj5*r11);
IkReal x3054=(cj3*cj4);
IkReal x3055=(r21*sj5);
IkReal x3056=(r10*sj5);
IkReal x3057=((1.0)*cj5);
IkReal x3058=((0.00924927184554663)*cj4);
IkReal x3059=((0.866036765876652)*sj4);
IkReal x3060=(cj5*r10);
IkReal x3061=(cj5*sj3);
IkReal x3062=(r00*sj5);
IkReal x3063=(cj0*sj1);
IkReal x3064=((0.433001339129174)*cj4);
IkReal x3065=((0.0184992718312161)*sj4);
IkReal x3066=(r20*sj5);
IkReal x3067=((0.249980320149909)*cj4);
IkReal x3068=(r11*sj5);
IkReal x3069=(cj5*r21);
IkReal x3070=(cj5*r00);
IkReal x3071=((0.0160210495477794)*r22);
IkReal x3072=(sj0*sj1);
IkReal x3073=(cj5*r01);
IkReal x3074=((0.750019679850091)*sj3);
IkReal x3075=(cj5*r20);
IkReal x3076=((0.750019679850091)*cj4);
IkReal x3077=(r22*sj3);
IkReal x3078=(r12*sj3);
IkReal x3079=((0.499980319762597)*sj4);
IkReal x3080=(r01*sj5);
IkReal x3081=((0.0160210495477794)*r12);
IkReal x3082=((0.433001339129174)*sj3);
IkReal x3083=(cj3*x3079);
IkReal x3084=((0.187)*x3051);
IkReal x3085=((1.0)*x3051);
IkReal x3086=(sj3*x3067);
IkReal x3087=(cj1*x3050);
IkReal x3088=(sj1*x3050);
IkReal x3089=(cj1*x3051);
IkReal x3090=(sj0*x3087);
evalcond[0]=((((-1.0)*x3059*x3075))+(((-1.0)*r22*x3076))+x3089+x3088+(((-0.249980320149909)*r22))+(((0.433001339129174)*x3069))+(((0.433001339129174)*x3066))+((x3055*x3059))+(((-1.0)*x3064*x3069))+(((-1.0)*x3064*x3066)));
evalcond[1]=((((-1.0)*x3059*x3070))+(((-0.249980320149909)*r02))+(((-1.0)*x3062*x3064))+(((0.433001339129174)*x3062))+(((0.433001339129174)*x3073))+(((-1.0)*x3064*x3073))+(((-1.0)*x3063*x3085))+((cj0*x3087))+(((-0.750019679850091)*x3052))+((x3059*x3080)));
evalcond[2]=(x3090+(((-0.249980320149909)*r12))+(((-1.0)*x3053*x3064))+(((-1.0)*r12*x3076))+((x3059*x3068))+(((-1.0)*x3072*x3085))+(((0.433001339129174)*x3053))+(((0.433001339129174)*x3056))+(((-1.0)*x3059*x3060))+(((-1.0)*x3056*x3064)));
evalcond[3]=((((-1.0)*cj1*x3084))+((cj4*x3071))+((x3058*x3066))+((x3058*x3069))+(((0.064677809339343)*x3066))+(((0.064677809339343)*x3069))+(((-0.187)*x3088))+((x3065*x3075))+(((-1.0)*x3071))+(((-1.0)*pz))+(((0.29)*cj1))+(((-1.0)*x3055*x3065)));
evalcond[4]=((((-0.0160210495477794)*r02))+(((0.007)*sj0))+(((0.0160210495477794)*x3052))+(((-1.0)*x3065*x3080))+(((0.064677809339343)*x3073))+((x3058*x3062))+(((0.064677809339343)*x3062))+((x3065*x3070))+((x3058*x3073))+((x3063*x3084))+(((-1.0)*px))+(((-0.187)*cj0*x3087))+(((-0.29)*x3063)));
evalcond[5]=((((-1.0)*x3081))+((x3072*x3084))+((x3056*x3058))+(((-0.187)*x3090))+(((-0.007)*cj0))+(((-1.0)*py))+((x3053*x3058))+((cj4*x3081))+(((-0.29)*x3072))+(((-1.0)*x3065*x3068))+((x3060*x3065))+(((0.064677809339343)*x3053))+(((0.064677809339343)*x3056)));
evalcond[6]=((((-1.0)*sj3*x3055*x3079))+(((-0.433001339129174)*x3077))+(((0.750019679850091)*r21*x3061))+((cj3*r22*x3059))+((x3069*x3083))+(((-1.0)*r20*x3054*x3057))+((sj1*x3051))+((r20*x3061*x3079))+(((-1.0)*x3087))+((x3066*x3083))+((x3066*x3086))+((x3064*x3077))+((x3054*x3055))+((x3066*x3074))+((r21*x3061*x3067)));
evalcond[7]=(((x3062*x3074))+((cj3*r02*x3059))+(((-1.0)*sj3*x3079*x3080))+(((-1.0)*r00*x3054*x3057))+((x3073*x3083))+(((0.750019679850091)*r01*x3061))+((x3050*x3063))+((r01*x3061*x3067))+((x3054*x3080))+((x3062*x3083))+((x3062*x3086))+((r00*x3061*x3079))+(((-1.0)*r02*x3082))+((x3052*x3082))+((cj0*x3089)));
evalcond[8]=(((x3056*x3083))+((x3056*x3086))+(((-0.433001339129174)*x3078))+((sj3*x3060*x3079))+((sj0*x3089))+(((-1.0)*sj3*x3068*x3079))+((x3053*x3074))+((x3056*x3074))+((x3064*x3078))+((x3050*x3072))+((cj3*r12*x3059))+(((-1.0)*r10*x3054*x3057))+((x3053*x3083))+((x3053*x3086))+((x3054*x3068)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3091=(sj0*sj5);
IkReal x3092=((0.143449603387718)*sj4);
IkReal x3093=(cj4*sj0);
IkReal x3094=(cj5*r11);
IkReal x3095=((0.247317167488307)*cj4);
IkReal x3096=(cj5*r21);
IkReal x3097=(r20*sj5);
IkReal x3098=((0.494653804785234)*sj4);
CheckValue<IkReal> x3099=IKPowWithIntegerCheck(sj0,-2);
if(!x3099.valid){
continue;
}
if( IKabs(((3.44827586206897)*(x3099.value)*(((((-0.124232630584188)*r12*x3093))+(((-1.0)*cj5*r10*sj0*x3092))+(((-0.0627673694158124)*r12*sj0))+(((-0.007)*cj0*sj0))+(((0.145649059756499)*sj0*x3094))+((r11*x3091*x3092))+(((-0.0717219785716089)*x3093*x3094))+(((-1.0)*py*sj0))+(((-0.0717219785716089)*cj4*r10*x3091))+(((0.145649059756499)*r10*x3091)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.428388381324785)*cj4*r22))+((cj5*r20*x3098))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x3098))+((x3095*x3096))+((x3095*x3097))+(((-0.502238137091374)*x3096))+(((-0.502238137091374)*x3097)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((3.44827586206897)*(x3099.value)*(((((-0.124232630584188)*r12*x3093))+(((-1.0)*cj5*r10*sj0*x3092))+(((-0.0627673694158124)*r12*sj0))+(((-0.007)*cj0*sj0))+(((0.145649059756499)*sj0*x3094))+((r11*x3091*x3092))+(((-0.0717219785716089)*x3093*x3094))+(((-1.0)*py*sj0))+(((-0.0717219785716089)*cj4*r10*x3091))+(((0.145649059756499)*r10*x3091))))))+IKsqr(((((0.428388381324785)*cj4*r22))+((cj5*r20*x3098))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x3098))+((x3095*x3096))+((x3095*x3097))+(((-0.502238137091374)*x3096))+(((-0.502238137091374)*x3097))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((3.44827586206897)*(x3099.value)*(((((-0.124232630584188)*r12*x3093))+(((-1.0)*cj5*r10*sj0*x3092))+(((-0.0627673694158124)*r12*sj0))+(((-0.007)*cj0*sj0))+(((0.145649059756499)*sj0*x3094))+((r11*x3091*x3092))+(((-0.0717219785716089)*x3093*x3094))+(((-1.0)*py*sj0))+(((-0.0717219785716089)*cj4*r10*x3091))+(((0.145649059756499)*r10*x3091))))), ((((0.428388381324785)*cj4*r22))+((cj5*r20*x3098))+(((0.216439204882112)*r22))+(((3.44827586206897)*pz))+(((-1.0)*r21*sj5*x3098))+((x3095*x3096))+((x3095*x3097))+(((-0.502238137091374)*x3096))+(((-0.502238137091374)*x3097))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x3100=IKsin(j1);
IkReal x3101=IKcos(j1);
IkReal x3102=sj0*sj0;
IkReal x3103=cj0*cj0;
IkReal x3104=(cj0*sj5);
IkReal x3105=((0.0184992718312161)*sj4);
IkReal x3106=((0.0809712504171555)*sj3);
IkReal x3107=(cj5*r11);
IkReal x3108=(cj5*r10);
IkReal x3109=((0.145649059756499)*sj5);
IkReal x3110=((0.140253680131967)*sj3);
IkReal x3111=(r00*sj5);
IkReal x3112=((1.0)*sj0);
IkReal x3113=(r10*sj5);
IkReal x3114=((0.00924927184554663)*cj4);
IkReal x3115=((0.0717219785716089)*cj4);
IkReal x3116=(cj5*r21);
IkReal x3117=(cj4*r02);
IkReal x3118=(cj5*r01);
IkReal x3119=(cj4*r12);
IkReal x3120=((0.0809712504171555)*cj4);
IkReal x3121=(cj0*r22);
IkReal x3122=((0.0934963197956057)*cj3);
IkReal x3123=(sj0*sj4);
IkReal x3124=(cj5*r00);
IkReal x3125=((0.007)*cj0);
IkReal x3126=(sj0*sj5);
IkReal x3127=((0.0809712504171555)*sj0);
IkReal x3128=((0.064677809339343)*r20);
IkReal x3129=((1.0)*cj0);
IkReal x3130=((0.0160210495477794)*r02);
IkReal x3131=((0.0160210495477794)*r12);
IkReal x3132=((0.064677809339343)*sj0);
IkReal x3133=((0.0934963197956057)*sj3);
IkReal x3134=(r22*sj0);
IkReal x3135=(r01*sj5);
IkReal x3136=((0.064677809339343)*cj0);
IkReal x3137=((0.161948875218934)*sj4);
IkReal x3138=(r20*sj4);
IkReal x3139=((0.143449603387718)*sj4);
IkReal x3140=(r11*sj5);
IkReal x3141=(sj0*x3125);
IkReal x3142=((0.187)*cj3*cj4);
IkReal x3143=((0.046746319868033)*cj4*sj3);
IkReal x3144=((0.29)*x3101);
IkReal x3145=(cj3*x3137);
IkReal x3146=(sj5*x3123);
IkReal x3147=((0.29)*x3100);
IkReal x3148=(sj4*x3133);
IkReal x3149=(cj0*cj5*r20);
IkReal x3150=(cj4*x3134);
IkReal x3151=(cj5*r20*sj0);
IkReal x3152=(cj0*sj0*x3147);
evalcond[0]=((((0.124232630584188)*cj4*r22))+(((-1.0)*r20*x3109))+(((-1.0)*x3144))+(((-1.0)*r21*sj5*x3139))+((r20*sj5*x3115))+(((-0.145649059756499)*x3116))+(((0.0627673694158124)*r22))+(((0.143449603387718)*cj5*x3138))+pz+((x3115*x3116)));
evalcond[1]=((((-0.143449603387718)*x3108*x3123))+(((-1.0)*x3141))+((r10*sj0*x3109))+(((-0.0627673694158124)*r12*sj0))+(((0.145649059756499)*sj0*x3107))+(((-1.0)*py*x3112))+(((0.143449603387718)*x3123*x3140))+(((-1.0)*sj0*x3113*x3115))+(((-0.124232630584188)*sj0*x3119))+(((-1.0)*x3102*x3147))+(((-1.0)*sj0*x3107*x3115)));
evalcond[2]=(x3141+(((-1.0)*cj0*x3115*x3118))+(((-1.0)*cj0*x3124*x3139))+(((-0.0627673694158124)*cj0*r02))+(((0.145649059756499)*cj0*x3118))+(((0.145649059756499)*r00*x3104))+((r01*x3104*x3139))+(((-1.0)*x3103*x3147))+(((-1.0)*r00*x3104*x3115))+(((-0.124232630584188)*cj0*x3117))+(((-1.0)*px*x3129)));
evalcond[3]=(((x3105*x3151))+((r20*x3114*x3126))+((x3116*x3132))+((r12*x3145))+(((-1.0)*x3140*x3148))+(((-1.0)*r21*x3105*x3126))+((sj0*x3144))+((x3107*x3110))+(((-1.0)*x3108*x3142))+(((-1.0)*pz*x3112))+(((-1.0)*r12*x3106))+((x3126*x3128))+((x3108*x3148))+((x3110*x3113))+((x3140*x3142))+((x3106*x3119))+((x3107*x3143))+((sj4*x3107*x3122))+((sj0*x3114*x3116))+((sj4*x3113*x3122))+(((0.0160210495477794)*x3150))+((x3113*x3143))+(((-0.0160210495477794)*x3134)));
evalcond[4]=(((x3116*x3136))+((x3105*x3149))+((x3124*x3148))+((x3111*x3143))+((sj4*x3118*x3122))+((r02*x3145))+((cj0*x3144))+((x3135*x3142))+(((-1.0)*r21*x3104*x3105))+((sj4*x3111*x3122))+(((-1.0)*x3135*x3148))+(((0.0160210495477794)*cj4*x3121))+((x3104*x3128))+((x3110*x3118))+((x3110*x3111))+((x3106*x3117))+(((-1.0)*x3124*x3142))+((x3118*x3143))+(((-1.0)*r02*x3106))+(((-0.0160210495477794)*x3121))+((r20*x3104*x3114))+((cj0*x3114*x3116))+(((-1.0)*pz*x3129)));
evalcond[5]=((((-1.0)*sj0*x3110*x3116))+((x3142*x3151))+(((0.0160210495477794)*x3119))+((x3107*x3114))+(((-1.0)*cj5*r20*x3123*x3133))+((r21*x3133*x3146))+(((-1.0)*x3106*x3150))+((x3113*x3114))+(((-0.161948875218934)*cj3*r22*x3123))+(((-1.0)*r20*x3122*x3146))+(((-1.0)*py))+(((-1.0)*sj0*x3116*x3143))+(((-1.0)*r20*x3110*x3126))+(((-1.0)*r21*x3126*x3142))+(((0.064677809339343)*x3107))+(((-1.0)*x3125))+(((-1.0)*r20*x3126*x3143))+(((-1.0)*x3131))+(((0.064677809339343)*x3113))+(((-1.0)*x3116*x3122*x3123))+((x3105*x3108))+((x3106*x3134))+(((-1.0)*x3105*x3140))+(((-1.0)*sj0*x3147)));
evalcond[6]=((((-1.0)*cj0*cj5*x3133*x3138))+((x3142*x3149))+(((0.007)*sj0))+(((-1.0)*r20*x3104*x3143))+(((0.0160210495477794)*x3117))+(((-1.0)*cj0*x3116*x3143))+((x3111*x3114))+(((-1.0)*x3105*x3135))+((x3114*x3118))+(((-1.0)*x3104*x3122*x3138))+(((-1.0)*x3121*x3145))+(((-1.0)*px))+(((-1.0)*cj0*x3147))+(((-1.0)*cj0*x3110*x3116))+((x3105*x3124))+((r21*x3104*x3148))+(((-1.0)*x3130))+(((0.064677809339343)*x3118))+(((0.064677809339343)*x3111))+(((-1.0)*cj4*x3106*x3121))+((x3106*x3121))+(((-1.0)*cj0*sj4*x3116*x3122))+(((-1.0)*r21*x3104*x3142))+(((-1.0)*r20*x3104*x3110)));
evalcond[7]=((((-1.0)*x3152))+(((-1.0)*cj0*x3107*x3120))+(((0.0809712504171555)*cj0*x3107))+(((0.0160210495477794)*sj0*x3117))+(((-1.0)*r01*x3105*x3126))+(((-1.0)*sj0*x3130))+((x3118*x3132))+(((-0.046746319868033)*cj0*r12))+(((-1.0)*cj0*x3108*x3137))+(((-1.0)*px*x3112))+((sj0*x3105*x3124))+(((0.007)*x3102))+((sj0*x3111*x3114))+((r11*x3104*x3137))+((x3111*x3132))+((sj0*x3114*x3118))+(((-1.0)*r10*x3104*x3120))+(((-0.140253680131967)*cj0*x3119))+(((0.0809712504171555)*r10*x3104)));
evalcond[8]=((((-1.0)*x3152))+(((-1.0)*sj0*x3111*x3120))+(((-1.0)*py*x3129))+(((-0.161948875218934)*x3123*x3124))+(((-1.0)*cj0*x3131))+(((-0.140253680131967)*sj0*x3117))+(((0.0160210495477794)*cj0*x3119))+((cj0*x3105*x3108))+(((-0.007)*x3103))+((x3118*x3127))+((r10*x3104*x3114))+((x3107*x3136))+(((-1.0)*sj0*x3118*x3120))+(((0.161948875218934)*x3123*x3135))+(((-1.0)*r11*x3104*x3105))+(((0.064677809339343)*r10*x3104))+((x3111*x3127))+(((-0.046746319868033)*r02*sj0))+((cj0*x3107*x3114)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3153=((0.249980320149909)*cj1);
IkReal x3154=((0.433001339129174)*sj1);
IkReal x3155=(cj5*r21);
IkReal x3156=(r20*sj5);
IkReal x3157=((0.433001339129174)*cj1);
IkReal x3158=(r00*sj5);
IkReal x3159=((0.249980320149909)*sj1);
IkReal x3160=(cj5*r01);
IkReal x3161=((0.866036765876652)*cj5*sj4);
IkReal x3162=(cj4*x3160);
IkReal x3163=((0.866036765876652)*sj4*sj5);
IkReal x3164=((0.750019679850091)*cj4*r02);
IkReal x3165=((0.750019679850091)*cj4*r22);
if( IKabs(((((-1.0)*x3157*x3158))+(((-1.0)*x3157*x3160))+((r22*x3159))+((cj1*x3164))+((r02*x3153))+((r20*sj1*x3161))+((cj4*x3154*x3156))+((cj4*x3154*x3155))+((cj4*x3157*x3158))+((sj1*x3165))+(((-1.0)*cj1*r01*x3163))+(((-1.0)*x3154*x3155))+(((-1.0)*x3154*x3156))+((x3157*x3162))+((cj1*r00*x3161))+(((-1.0)*r21*sj1*x3163)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x3153))+((cj1*x3165))+(((-1.0)*x3156*x3157))+((x3154*x3158))+((r01*sj1*x3163))+((x3154*x3160))+(((-1.0)*cj1*r21*x3163))+((cj4*x3155*x3157))+((cj4*x3156*x3157))+(((-1.0)*sj1*x3164))+(((-1.0)*cj4*x3154*x3158))+((cj1*r20*x3161))+(((-1.0)*x3154*x3162))+(((-1.0)*r02*x3159))+(((-1.0)*r00*sj1*x3161))+(((-1.0)*x3155*x3157)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x3157*x3158))+(((-1.0)*x3157*x3160))+((r22*x3159))+((cj1*x3164))+((r02*x3153))+((r20*sj1*x3161))+((cj4*x3154*x3156))+((cj4*x3154*x3155))+((cj4*x3157*x3158))+((sj1*x3165))+(((-1.0)*cj1*r01*x3163))+(((-1.0)*x3154*x3155))+(((-1.0)*x3154*x3156))+((x3157*x3162))+((cj1*r00*x3161))+(((-1.0)*r21*sj1*x3163))))+IKsqr((((r22*x3153))+((cj1*x3165))+(((-1.0)*x3156*x3157))+((x3154*x3158))+((r01*sj1*x3163))+((x3154*x3160))+(((-1.0)*cj1*r21*x3163))+((cj4*x3155*x3157))+((cj4*x3156*x3157))+(((-1.0)*sj1*x3164))+(((-1.0)*cj4*x3154*x3158))+((cj1*r20*x3161))+(((-1.0)*x3154*x3162))+(((-1.0)*r02*x3159))+(((-1.0)*r00*sj1*x3161))+(((-1.0)*x3155*x3157))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x3157*x3158))+(((-1.0)*x3157*x3160))+((r22*x3159))+((cj1*x3164))+((r02*x3153))+((r20*sj1*x3161))+((cj4*x3154*x3156))+((cj4*x3154*x3155))+((cj4*x3157*x3158))+((sj1*x3165))+(((-1.0)*cj1*r01*x3163))+(((-1.0)*x3154*x3155))+(((-1.0)*x3154*x3156))+((x3157*x3162))+((cj1*r00*x3161))+(((-1.0)*r21*sj1*x3163))), (((r22*x3153))+((cj1*x3165))+(((-1.0)*x3156*x3157))+((x3154*x3158))+((r01*sj1*x3163))+((x3154*x3160))+(((-1.0)*cj1*r21*x3163))+((cj4*x3155*x3157))+((cj4*x3156*x3157))+(((-1.0)*sj1*x3164))+(((-1.0)*cj4*x3154*x3158))+((cj1*r20*x3161))+(((-1.0)*x3154*x3162))+(((-1.0)*r02*x3159))+(((-1.0)*r00*sj1*x3161))+(((-1.0)*x3155*x3157))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3166=IKsin(j2);
IkReal x3167=IKcos(j2);
IkReal x3168=(cj4*r02);
IkReal x3169=(cj4*sj5);
IkReal x3170=((0.433001339129174)*r20);
IkReal x3171=(cj5*r21);
IkReal x3172=(cj4*cj5);
IkReal x3173=((0.249980320149909)*sj3);
IkReal x3174=((1.0)*cj3);
IkReal x3175=(r00*sj5);
IkReal x3176=((0.750019679850091)*sj3);
IkReal x3177=((0.0160210495477794)*r22);
IkReal x3178=(cj5*r01);
IkReal x3179=((0.499980319762597)*sj4);
IkReal x3180=((0.866036765876652)*sj4);
IkReal x3181=(cj5*r20);
IkReal x3182=(r01*sj5);
IkReal x3183=((0.433001339129174)*sj3);
IkReal x3184=((0.0184992718312161)*sj4);
IkReal x3185=(r21*sj5);
IkReal x3186=(r20*sj5);
IkReal x3187=(cj4*r22);
IkReal x3188=(cj1*x3167);
IkReal x3189=(sj1*x3166);
IkReal x3190=(cj5*r00*sj4);
IkReal x3191=(cj1*x3166);
IkReal x3192=(r20*x3179);
IkReal x3193=(sj1*x3167);
IkReal x3194=(x3188+x3189);
evalcond[0]=((((-1.0)*x3169*x3170))+x3194+(((-1.0)*x3180*x3181))+(((-0.249980320149909)*r22))+(((-0.433001339129174)*cj4*x3171))+((sj5*x3170))+((x3180*x3185))+(((-0.750019679850091)*x3187))+(((0.433001339129174)*x3171)));
evalcond[1]=((((-1.0)*cj5*r00*x3180))+x3191+(((-0.249980320149909)*r02))+(((-0.750019679850091)*x3168))+((x3180*x3182))+(((-0.433001339129174)*r00*x3169))+(((0.433001339129174)*x3178))+(((0.433001339129174)*x3175))+(((-1.0)*x3193))+(((-0.433001339129174)*r01*x3172)));
evalcond[2]=((((-1.0)*x3184*x3185))+((cj4*x3177))+(((0.064677809339343)*x3186))+(((-1.0)*x3177))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.00924927184554663)*r20*x3169))+(((-0.187)*x3189))+(((-0.187)*x3188))+(((0.064677809339343)*x3171))+((x3181*x3184))+(((0.00924927184554663)*cj4*x3171)));
evalcond[3]=((((-0.0160210495477794)*r02))+(((-0.29)*sj1))+(((-1.0)*px))+((cj5*r00*x3184))+(((0.00924927184554663)*r01*x3172))+(((-1.0)*x3182*x3184))+(((-0.187)*x3191))+(((0.00924927184554663)*r00*x3169))+(((0.064677809339343)*x3175))+(((0.064677809339343)*x3178))+(((0.187)*x3193))+(((0.0160210495477794)*x3168)));
evalcond[4]=((((-1.0)*r00*x3172*x3174))+((cj3*r01*x3169))+x3194+((r01*x3172*x3173))+(((-1.0)*r02*x3183))+((cj3*x3175*x3179))+((r00*x3169*x3173))+((cj3*r02*x3180))+((x3176*x3178))+((cj5*r00*sj3*x3179))+((cj3*x3178*x3179))+((x3168*x3183))+(((-1.0)*sj3*x3179*x3182))+((x3175*x3176)));
evalcond[5]=(((cj3*r21*x3169))+x3193+(((-1.0)*r22*x3183))+((x3176*x3186))+((cj4*x3171*x3173))+((r20*x3169*x3173))+((sj3*x3179*x3181))+((cj3*x3179*x3186))+((x3183*x3187))+((x3171*x3176))+((cj3*r22*x3180))+((cj3*x3171*x3179))+(((-1.0)*sj3*x3179*x3185))+(((-1.0)*x3191))+(((-1.0)*r20*x3172*x3174)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3195=((0.249980320149909)*cj1);
IkReal x3196=((0.433001339129174)*sj1);
IkReal x3197=(cj5*r21);
IkReal x3198=(r20*sj5);
IkReal x3199=((0.433001339129174)*cj1);
IkReal x3200=(r00*sj5);
IkReal x3201=((0.249980320149909)*sj1);
IkReal x3202=(cj5*r01);
IkReal x3203=((0.866036765876652)*cj5*sj4);
IkReal x3204=(cj4*x3202);
IkReal x3205=((0.866036765876652)*sj4*sj5);
IkReal x3206=((0.750019679850091)*cj4*r02);
IkReal x3207=((0.750019679850091)*cj4*r22);
if( IKabs((((r22*x3201))+(((-1.0)*x3196*x3197))+(((-1.0)*x3196*x3198))+(((-1.0)*x3199*x3204))+(((-1.0)*cj4*x3199*x3200))+((cj1*r01*x3205))+((x3199*x3202))+((x3199*x3200))+(((-1.0)*r02*x3195))+(((-1.0)*cj1*r00*x3203))+(((-1.0)*cj1*x3206))+((cj4*x3196*x3198))+((cj4*x3196*x3197))+(((-1.0)*r21*sj1*x3205))+((sj1*x3207))+((r20*sj1*x3203)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*sj1*x3203))+(((-1.0)*x3196*x3202))+(((-1.0)*x3196*x3200))+((x3196*x3204))+(((-1.0)*x3197*x3199))+(((-1.0)*cj1*r21*x3205))+(((-1.0)*r01*sj1*x3205))+(((-1.0)*x3198*x3199))+((cj1*r20*x3203))+((cj4*x3196*x3200))+((cj1*x3207))+((cj4*x3198*x3199))+((r22*x3195))+((cj4*x3197*x3199))+((r02*x3201))+((sj1*x3206)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r22*x3201))+(((-1.0)*x3196*x3197))+(((-1.0)*x3196*x3198))+(((-1.0)*x3199*x3204))+(((-1.0)*cj4*x3199*x3200))+((cj1*r01*x3205))+((x3199*x3202))+((x3199*x3200))+(((-1.0)*r02*x3195))+(((-1.0)*cj1*r00*x3203))+(((-1.0)*cj1*x3206))+((cj4*x3196*x3198))+((cj4*x3196*x3197))+(((-1.0)*r21*sj1*x3205))+((sj1*x3207))+((r20*sj1*x3203))))+IKsqr((((r00*sj1*x3203))+(((-1.0)*x3196*x3202))+(((-1.0)*x3196*x3200))+((x3196*x3204))+(((-1.0)*x3197*x3199))+(((-1.0)*cj1*r21*x3205))+(((-1.0)*r01*sj1*x3205))+(((-1.0)*x3198*x3199))+((cj1*r20*x3203))+((cj4*x3196*x3200))+((cj1*x3207))+((cj4*x3198*x3199))+((r22*x3195))+((cj4*x3197*x3199))+((r02*x3201))+((sj1*x3206))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r22*x3201))+(((-1.0)*x3196*x3197))+(((-1.0)*x3196*x3198))+(((-1.0)*x3199*x3204))+(((-1.0)*cj4*x3199*x3200))+((cj1*r01*x3205))+((x3199*x3202))+((x3199*x3200))+(((-1.0)*r02*x3195))+(((-1.0)*cj1*r00*x3203))+(((-1.0)*cj1*x3206))+((cj4*x3196*x3198))+((cj4*x3196*x3197))+(((-1.0)*r21*sj1*x3205))+((sj1*x3207))+((r20*sj1*x3203))), (((r00*sj1*x3203))+(((-1.0)*x3196*x3202))+(((-1.0)*x3196*x3200))+((x3196*x3204))+(((-1.0)*x3197*x3199))+(((-1.0)*cj1*r21*x3205))+(((-1.0)*r01*sj1*x3205))+(((-1.0)*x3198*x3199))+((cj1*r20*x3203))+((cj4*x3196*x3200))+((cj1*x3207))+((cj4*x3198*x3199))+((r22*x3195))+((cj4*x3197*x3199))+((r02*x3201))+((sj1*x3206))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3208=IKcos(j2);
IkReal x3209=IKsin(j2);
IkReal x3210=(cj4*r02);
IkReal x3211=(cj4*sj5);
IkReal x3212=((0.433001339129174)*r20);
IkReal x3213=(cj5*r21);
IkReal x3214=(cj4*cj5);
IkReal x3215=(r01*sj3);
IkReal x3216=((1.0)*cj3);
IkReal x3217=(r00*sj5);
IkReal x3218=((0.750019679850091)*sj3);
IkReal x3219=((0.0160210495477794)*r22);
IkReal x3220=(r20*sj5);
IkReal x3221=((0.433001339129174)*sj3);
IkReal x3222=(cj4*r22);
IkReal x3223=(cj5*r01);
IkReal x3224=((0.866036765876652)*sj4);
IkReal x3225=(cj5*r20);
IkReal x3226=(sj4*sj5);
IkReal x3227=((0.499980319762597)*sj3);
IkReal x3228=((0.249980320149909)*sj3);
IkReal x3229=(sj1*x3208);
IkReal x3230=(cj1*x3208);
IkReal x3231=(cj5*r00*sj4);
IkReal x3232=((0.499980319762597)*cj3*sj4);
IkReal x3233=(sj1*x3209);
IkReal x3234=(cj1*x3209);
IkReal x3235=((1.0)*x3234);
evalcond[0]=((((-1.0)*x3211*x3212))+(((-0.750019679850091)*x3222))+(((-0.433001339129174)*cj4*x3213))+(((-0.249980320149909)*r22))+x3233+x3230+((r21*sj5*x3224))+(((-1.0)*x3224*x3225))+((sj5*x3212))+(((0.433001339129174)*x3213)));
evalcond[1]=((((0.433001339129174)*x3223))+(((-0.249980320149909)*r02))+(((-0.433001339129174)*r01*x3214))+(((-0.750019679850091)*x3210))+(((-0.433001339129174)*r00*x3211))+x3229+((r01*sj5*x3224))+(((-1.0)*cj5*r00*x3224))+(((-1.0)*x3235))+(((0.433001339129174)*x3217)));
evalcond[2]=(((cj4*x3219))+(((0.064677809339343)*x3213))+(((-0.0184992718312161)*r21*x3226))+(((0.0184992718312161)*sj4*x3225))+(((0.00924927184554663)*r20*x3211))+(((-0.187)*x3230))+(((-0.187)*x3233))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.00924927184554663)*cj4*x3213))+(((-1.0)*x3219))+(((0.064677809339343)*x3220)));
evalcond[3]=((((0.064677809339343)*x3217))+(((-0.0160210495477794)*r02))+(((0.0184992718312161)*x3231))+(((0.187)*x3234))+(((-0.0184992718312161)*r01*x3226))+(((0.00924927184554663)*r01*x3214))+(((0.29)*sj1))+(((0.00924927184554663)*r00*x3211))+(((-1.0)*px))+(((0.0160210495477794)*x3210))+(((-0.187)*x3229))+(((0.064677809339343)*x3223)));
evalcond[4]=(((cj3*r21*x3211))+((x3220*x3232))+((x3218*x3220))+((x3213*x3218))+(((-1.0)*r21*x3226*x3227))+((cj3*r22*x3224))+x3229+((x3213*x3232))+((sj4*x3225*x3227))+((x3221*x3222))+(((-1.0)*r22*x3221))+(((-1.0)*x3235))+(((-1.0)*r20*x3214*x3216))+((r20*x3211*x3228))+((cj4*x3213*x3228)));
evalcond[5]=(((x3223*x3232))+(((-1.0)*r02*x3221))+((x3210*x3221))+(((0.249980320149909)*x3214*x3215))+((cj3*r02*x3224))+(((-1.0)*x3233))+(((-1.0)*x3230))+((r00*x3211*x3228))+(((0.750019679850091)*cj5*x3215))+((cj3*r01*x3211))+((x3227*x3231))+(((-0.499980319762597)*x3215*x3226))+((x3217*x3232))+(((-1.0)*r00*x3214*x3216))+((x3217*x3218)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3236=((0.433001339129174)*sj1);
IkReal x3237=(cj5*r21);
IkReal x3238=(r10*sj5);
IkReal x3239=((0.433001339129174)*cj1);
IkReal x3240=(r20*sj5);
IkReal x3241=(cj5*r11);
IkReal x3242=((0.866036765876652)*sj4);
IkReal x3243=(cj1*sj5);
IkReal x3244=(cj5*r20);
IkReal x3245=((0.249980320149909)*r22);
IkReal x3246=(sj1*sj5);
IkReal x3247=((0.249980320149909)*r12);
IkReal x3248=(cj5*r10);
IkReal x3249=((0.750019679850091)*cj4*r12);
IkReal x3250=((0.750019679850091)*cj4*r22);
if( IKabs((((sj1*x3245))+(((-1.0)*x3236*x3240))+(((-1.0)*x3239*x3241))+((cj4*x3236*x3237))+((cj1*x3242*x3248))+(((-1.0)*x3238*x3239))+(((-1.0)*x3236*x3237))+((sj1*x3242*x3244))+((cj4*x3238*x3239))+((cj1*x3249))+((cj1*x3247))+((cj4*x3239*x3241))+((sj1*x3250))+(((-1.0)*r21*x3242*x3246))+((cj4*x3236*x3240))+(((-1.0)*r11*x3242*x3243)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x3250))+(((-1.0)*x3239*x3240))+((x3236*x3241))+((cj1*x3242*x3244))+(((-1.0)*x3237*x3239))+(((-1.0)*cj4*x3236*x3241))+((cj1*x3245))+((x3236*x3238))+((cj4*x3239*x3240))+(((-1.0)*cj4*x3236*x3238))+((r11*x3242*x3246))+(((-1.0)*sj1*x3249))+(((-1.0)*sj1*x3247))+(((-1.0)*sj1*x3242*x3248))+(((-1.0)*r21*x3242*x3243))+((cj4*x3237*x3239)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x3245))+(((-1.0)*x3236*x3240))+(((-1.0)*x3239*x3241))+((cj4*x3236*x3237))+((cj1*x3242*x3248))+(((-1.0)*x3238*x3239))+(((-1.0)*x3236*x3237))+((sj1*x3242*x3244))+((cj4*x3238*x3239))+((cj1*x3249))+((cj1*x3247))+((cj4*x3239*x3241))+((sj1*x3250))+(((-1.0)*r21*x3242*x3246))+((cj4*x3236*x3240))+(((-1.0)*r11*x3242*x3243))))+IKsqr((((cj1*x3250))+(((-1.0)*x3239*x3240))+((x3236*x3241))+((cj1*x3242*x3244))+(((-1.0)*x3237*x3239))+(((-1.0)*cj4*x3236*x3241))+((cj1*x3245))+((x3236*x3238))+((cj4*x3239*x3240))+(((-1.0)*cj4*x3236*x3238))+((r11*x3242*x3246))+(((-1.0)*sj1*x3249))+(((-1.0)*sj1*x3247))+(((-1.0)*sj1*x3242*x3248))+(((-1.0)*r21*x3242*x3243))+((cj4*x3237*x3239))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((sj1*x3245))+(((-1.0)*x3236*x3240))+(((-1.0)*x3239*x3241))+((cj4*x3236*x3237))+((cj1*x3242*x3248))+(((-1.0)*x3238*x3239))+(((-1.0)*x3236*x3237))+((sj1*x3242*x3244))+((cj4*x3238*x3239))+((cj1*x3249))+((cj1*x3247))+((cj4*x3239*x3241))+((sj1*x3250))+(((-1.0)*r21*x3242*x3246))+((cj4*x3236*x3240))+(((-1.0)*r11*x3242*x3243))), (((cj1*x3250))+(((-1.0)*x3239*x3240))+((x3236*x3241))+((cj1*x3242*x3244))+(((-1.0)*x3237*x3239))+(((-1.0)*cj4*x3236*x3241))+((cj1*x3245))+((x3236*x3238))+((cj4*x3239*x3240))+(((-1.0)*cj4*x3236*x3238))+((r11*x3242*x3246))+(((-1.0)*sj1*x3249))+(((-1.0)*sj1*x3247))+(((-1.0)*sj1*x3242*x3248))+(((-1.0)*r21*x3242*x3243))+((cj4*x3237*x3239))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3251=IKsin(j2);
IkReal x3252=IKcos(j2);
IkReal x3253=(cj4*sj5);
IkReal x3254=((0.433001339129174)*r20);
IkReal x3255=((0.064677809339343)*cj5);
IkReal x3256=(r10*sj3);
IkReal x3257=(cj3*r21);
IkReal x3258=(r20*sj5);
IkReal x3259=((0.750019679850091)*sj3);
IkReal x3260=(r10*sj5);
IkReal x3261=((0.0160210495477794)*r22);
IkReal x3262=((0.499980319762597)*sj4);
IkReal x3263=(sj3*sj5);
IkReal x3264=(cj5*r21);
IkReal x3265=(cj4*r12);
IkReal x3266=((0.433001339129174)*sj3);
IkReal x3267=((0.866036765876652)*sj4);
IkReal x3268=(cj5*r10);
IkReal x3269=(cj5*r11);
IkReal x3270=(cj5*r20);
IkReal x3271=((0.433001339129174)*cj4);
IkReal x3272=(cj4*r22);
IkReal x3273=((0.00924927184554663)*cj4);
IkReal x3274=((0.0184992718312161)*sj4);
IkReal x3275=(cj1*x3252);
IkReal x3276=(sj1*x3251);
IkReal x3277=(cj1*x3251);
IkReal x3278=(sj1*x3252);
IkReal x3279=((0.249980320149909)*cj4*sj3);
IkReal x3280=(sj5*x3274);
IkReal x3281=((1.0)*cj3*cj4*cj5);
IkReal x3282=(x3276+x3275);
evalcond[0]=((((-0.249980320149909)*r22))+x3282+(((-1.0)*x3253*x3254))+(((0.433001339129174)*x3264))+(((-1.0)*x3264*x3271))+((r21*sj5*x3267))+(((-0.750019679850091)*x3272))+(((-1.0)*x3267*x3270))+((sj5*x3254)));
evalcond[1]=((((-1.0)*x3278))+(((-0.249980320149909)*r12))+x3277+(((0.433001339129174)*x3260))+(((0.433001339129174)*x3269))+((r11*sj5*x3267))+(((-1.0)*x3269*x3271))+(((-1.0)*x3267*x3268))+(((-0.750019679850091)*x3265))+(((-0.433001339129174)*r10*x3253)));
evalcond[2]=(((x3264*x3273))+((cj4*x3261))+(((-1.0)*r21*x3280))+(((-0.187)*x3276))+(((-0.187)*x3275))+(((-1.0)*x3261))+((r21*x3255))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.00924927184554663)*r20*x3253))+(((0.064677809339343)*x3258))+((x3270*x3274)));
evalcond[3]=((((-0.0160210495477794)*r12))+(((-0.29)*sj1))+(((-0.187)*x3277))+(((0.0160210495477794)*x3265))+((r11*x3255))+(((0.064677809339343)*x3260))+(((-1.0)*py))+((x3268*x3274))+((x3269*x3273))+(((0.187)*x3278))+(((0.00924927184554663)*r10*x3253))+(((-1.0)*r11*x3280)));
evalcond[4]=(((cj3*x3262*x3269))+((x3265*x3266))+((cj3*r12*x3267))+(((-1.0)*r12*x3266))+(((-1.0)*cj3*cj4*x3268))+x3282+((cj3*r11*x3253))+((cj3*x3260*x3262))+(((0.249980320149909)*x3253*x3256))+((cj5*x3256*x3262))+((x3259*x3269))+(((0.750019679850091)*sj5*x3256))+((x3269*x3279))+(((-1.0)*r11*x3262*x3263)));
evalcond[5]=(((x3264*x3279))+(((-1.0)*r21*x3262*x3263))+(((-1.0)*x3277))+(((-1.0)*cj3*cj4*x3270))+((sj3*x3262*x3270))+(((0.249980320149909)*r20*sj3*x3253))+((x3258*x3259))+x3278+((cj3*x3258*x3262))+((cj5*x3257*x3262))+((cj3*r22*x3267))+((x3259*x3264))+((x3266*x3272))+(((-1.0)*r22*x3266))+((x3253*x3257)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3283=((0.433001339129174)*sj1);
IkReal x3284=(cj5*r21);
IkReal x3285=(r10*sj5);
IkReal x3286=((0.433001339129174)*cj1);
IkReal x3287=(r20*sj5);
IkReal x3288=(cj5*r11);
IkReal x3289=((0.866036765876652)*sj4);
IkReal x3290=(cj1*sj5);
IkReal x3291=(cj5*r20);
IkReal x3292=((0.249980320149909)*r22);
IkReal x3293=(sj1*sj5);
IkReal x3294=((0.249980320149909)*r12);
IkReal x3295=(cj5*r10);
IkReal x3296=((0.750019679850091)*cj4*r12);
IkReal x3297=((0.750019679850091)*cj4*r22);
if( IKabs((((x3285*x3286))+((x3286*x3288))+((sj1*x3289*x3291))+(((-1.0)*cj1*x3296))+(((-1.0)*cj1*x3294))+(((-1.0)*cj4*x3286*x3288))+(((-1.0)*x3283*x3284))+(((-1.0)*x3283*x3287))+((sj1*x3292))+((sj1*x3297))+((r11*x3289*x3290))+((cj4*x3283*x3287))+((cj4*x3283*x3284))+(((-1.0)*cj4*x3285*x3286))+(((-1.0)*r21*x3289*x3293))+(((-1.0)*cj1*x3289*x3295)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x3286*x3287))+((cj1*x3289*x3291))+((cj1*x3297))+((cj1*x3292))+(((-1.0)*r11*x3289*x3293))+((cj4*x3284*x3286))+((sj1*x3289*x3295))+(((-1.0)*x3283*x3285))+(((-1.0)*x3283*x3288))+((sj1*x3296))+((sj1*x3294))+((cj4*x3283*x3288))+((cj4*x3283*x3285))+(((-1.0)*x3284*x3286))+(((-1.0)*r21*x3289*x3290))+(((-1.0)*x3286*x3287)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x3285*x3286))+((x3286*x3288))+((sj1*x3289*x3291))+(((-1.0)*cj1*x3296))+(((-1.0)*cj1*x3294))+(((-1.0)*cj4*x3286*x3288))+(((-1.0)*x3283*x3284))+(((-1.0)*x3283*x3287))+((sj1*x3292))+((sj1*x3297))+((r11*x3289*x3290))+((cj4*x3283*x3287))+((cj4*x3283*x3284))+(((-1.0)*cj4*x3285*x3286))+(((-1.0)*r21*x3289*x3293))+(((-1.0)*cj1*x3289*x3295))))+IKsqr((((cj4*x3286*x3287))+((cj1*x3289*x3291))+((cj1*x3297))+((cj1*x3292))+(((-1.0)*r11*x3289*x3293))+((cj4*x3284*x3286))+((sj1*x3289*x3295))+(((-1.0)*x3283*x3285))+(((-1.0)*x3283*x3288))+((sj1*x3296))+((sj1*x3294))+((cj4*x3283*x3288))+((cj4*x3283*x3285))+(((-1.0)*x3284*x3286))+(((-1.0)*r21*x3289*x3290))+(((-1.0)*x3286*x3287))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x3285*x3286))+((x3286*x3288))+((sj1*x3289*x3291))+(((-1.0)*cj1*x3296))+(((-1.0)*cj1*x3294))+(((-1.0)*cj4*x3286*x3288))+(((-1.0)*x3283*x3284))+(((-1.0)*x3283*x3287))+((sj1*x3292))+((sj1*x3297))+((r11*x3289*x3290))+((cj4*x3283*x3287))+((cj4*x3283*x3284))+(((-1.0)*cj4*x3285*x3286))+(((-1.0)*r21*x3289*x3293))+(((-1.0)*cj1*x3289*x3295))), (((cj4*x3286*x3287))+((cj1*x3289*x3291))+((cj1*x3297))+((cj1*x3292))+(((-1.0)*r11*x3289*x3293))+((cj4*x3284*x3286))+((sj1*x3289*x3295))+(((-1.0)*x3283*x3285))+(((-1.0)*x3283*x3288))+((sj1*x3296))+((sj1*x3294))+((cj4*x3283*x3288))+((cj4*x3283*x3285))+(((-1.0)*x3284*x3286))+(((-1.0)*r21*x3289*x3290))+(((-1.0)*x3286*x3287))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3298=IKcos(j2);
IkReal x3299=IKsin(j2);
IkReal x3300=(cj4*sj5);
IkReal x3301=((0.433001339129174)*r20);
IkReal x3302=((0.064677809339343)*cj5);
IkReal x3303=(r10*sj3);
IkReal x3304=(cj3*sj4);
IkReal x3305=((0.433001339129174)*r10);
IkReal x3306=((0.0160210495477794)*r22);
IkReal x3307=(r20*sj5);
IkReal x3308=(r11*sj5);
IkReal x3309=(cj5*r20);
IkReal x3310=(cj5*r21);
IkReal x3311=((0.866036765876652)*sj4);
IkReal x3312=(cj5*r10);
IkReal x3313=(cj5*r11);
IkReal x3314=((0.750019679850091)*sj3);
IkReal x3315=(cj4*sj3);
IkReal x3316=((0.750019679850091)*cj4);
IkReal x3317=((0.433001339129174)*cj4);
IkReal x3318=((0.433001339129174)*r22);
IkReal x3319=((0.0160210495477794)*r12);
IkReal x3320=((0.0184992718312161)*sj4);
IkReal x3321=(r21*sj5);
IkReal x3322=(r10*sj5);
IkReal x3323=((0.00924927184554663)*cj4);
IkReal x3324=(sj1*x3298);
IkReal x3325=(cj1*x3298);
IkReal x3326=((0.433001339129174)*r12*sj3);
IkReal x3327=((0.499980319762597)*sj3*sj4);
IkReal x3328=(sj1*x3299);
IkReal x3329=(cj1*x3299);
IkReal x3330=((1.0)*x3329);
IkReal x3331=((1.0)*cj3*cj4*cj5);
evalcond[0]=((((0.433001339129174)*x3310))+(((-0.249980320149909)*r22))+x3325+x3328+((x3311*x3321))+(((-1.0)*r22*x3316))+(((-1.0)*x3309*x3311))+((sj5*x3301))+(((-1.0)*x3310*x3317))+(((-1.0)*x3300*x3301)));
evalcond[1]=((((0.433001339129174)*x3313))+x3324+(((-0.249980320149909)*r12))+(((-1.0)*x3330))+(((-1.0)*x3313*x3317))+((sj5*x3305))+(((-1.0)*x3311*x3312))+(((-1.0)*r12*x3316))+((x3308*x3311))+(((-1.0)*x3300*x3305)));
evalcond[2]=(((cj4*x3306))+((x3310*x3323))+((r21*x3302))+(((-1.0)*x3306))+(((0.00924927184554663)*r20*x3300))+(((-1.0)*pz))+(((-0.187)*x3328))+(((-0.187)*x3325))+(((-1.0)*x3320*x3321))+(((0.29)*cj1))+(((0.064677809339343)*x3307))+((x3309*x3320)));
evalcond[3]=(((cj4*x3319))+(((0.29)*sj1))+(((-1.0)*x3319))+((r11*x3302))+(((0.187)*x3329))+(((-1.0)*py))+(((0.00924927184554663)*r10*x3300))+(((-0.187)*x3324))+(((-1.0)*x3308*x3320))+(((0.064677809339343)*x3322))+((x3312*x3320))+((x3313*x3323)));
evalcond[4]=((((-1.0)*cj3*cj4*x3309))+x3324+(((0.249980320149909)*x3310*x3315))+((x3315*x3318))+(((0.499980319762597)*x3304*x3310))+(((-1.0)*x3321*x3327))+(((0.499980319762597)*x3304*x3307))+(((-1.0)*x3330))+((cj3*r21*x3300))+(((0.866036765876652)*r22*x3304))+((x3309*x3327))+((x3307*x3314))+(((0.249980320149909)*r20*sj3*x3300))+(((-1.0)*sj3*x3318))+((x3310*x3314)));
evalcond[5]=((((-1.0)*x3326))+(((0.249980320149909)*x3300*x3303))+(((-1.0)*x3328))+(((-1.0)*x3325))+(((0.750019679850091)*sj5*x3303))+(((0.866036765876652)*r12*x3304))+(((-1.0)*cj3*cj4*x3312))+((x3313*x3314))+(((0.249980320149909)*x3313*x3315))+(((0.499980319762597)*x3304*x3313))+((cj3*r11*x3300))+(((0.499980319762597)*cj5*sj4*x3303))+(((0.433001339129174)*r12*x3315))+(((0.499980319762597)*x3304*x3322))+(((-1.0)*x3308*x3327)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3332=(sj0*sj5);
IkReal x3333=((0.866036765876652)*sj4);
IkReal x3334=(cj1*r21);
IkReal x3335=((0.433001339129174)*sj1);
IkReal x3336=(cj4*r20);
IkReal x3337=(r10*sj5);
IkReal x3338=(cj4*cj5);
IkReal x3339=(cj1*r11);
IkReal x3340=(cj5*sj0);
IkReal x3341=(r22*sj0);
IkReal x3342=((0.249980320149909)*cj1);
IkReal x3343=(cj5*r10);
IkReal x3344=((0.750019679850091)*cj4);
IkReal x3345=((0.433001339129174)*cj1);
IkReal x3346=((0.249980320149909)*sj1);
IkReal x3347=(r12*x3344);
CheckValue<IkReal> x3348=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x3348.valid){
continue;
}
CheckValue<IkReal> x3349 = IKatan2WithCheck(IkReal(((((0.433001339129174)*x3338*x3339))+(((-1.0)*sj5*x3333*x3339))+(((-1.0)*r21*sj1*x3332*x3333))+(((-1.0)*x3337*x3345))+((cj4*x3337*x3345))+(((-1.0)*r20*x3332*x3335))+((r20*sj1*x3333*x3340))+((x3341*x3346))+((sj1*x3341*x3344))+((cj1*x3347))+((r21*sj0*x3335*x3338))+((cj1*x3333*x3343))+(((-0.433001339129174)*cj5*x3339))+((x3332*x3335*x3336))+(((-1.0)*r21*x3335*x3340))+((r12*x3342)))),IkReal(((((-1.0)*x3332*x3333*x3334))+(((-1.0)*sj1*x3347))+(((-1.0)*cj4*x3335*x3337))+(((0.433001339129174)*sj0*x3334*x3338))+((cj5*r11*x3335))+((cj1*r20*x3333*x3340))+((x3341*x3342))+(((-1.0)*r20*x3332*x3345))+(((-1.0)*sj1*x3333*x3343))+((r11*sj1*sj5*x3333))+(((-0.433001339129174)*x3334*x3340))+(((-1.0)*r11*x3335*x3338))+((x3335*x3337))+((x3332*x3336*x3345))+(((-1.0)*r12*x3346))+((cj1*x3341*x3344)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3349.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3348.value)))+(x3349.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3350=IKsin(j2);
IkReal x3351=IKcos(j2);
IkReal x3352=(cj4*r02);
IkReal x3353=(cj5*r11);
IkReal x3354=(cj3*cj4);
IkReal x3355=(r21*sj5);
IkReal x3356=(r10*sj5);
IkReal x3357=((1.0)*cj5);
IkReal x3358=((0.00924927184554663)*cj4);
IkReal x3359=((0.866036765876652)*sj4);
IkReal x3360=(cj5*r10);
IkReal x3361=(cj5*sj3);
IkReal x3362=(r00*sj5);
IkReal x3363=(cj0*sj1);
IkReal x3364=((0.433001339129174)*cj4);
IkReal x3365=((0.0184992718312161)*sj4);
IkReal x3366=(r20*sj5);
IkReal x3367=((0.249980320149909)*cj4);
IkReal x3368=(r11*sj5);
IkReal x3369=(cj5*r21);
IkReal x3370=(cj5*r00);
IkReal x3371=((0.0160210495477794)*r22);
IkReal x3372=(sj0*sj1);
IkReal x3373=(cj5*r01);
IkReal x3374=((0.750019679850091)*sj3);
IkReal x3375=(cj5*r20);
IkReal x3376=((0.750019679850091)*cj4);
IkReal x3377=(r22*sj3);
IkReal x3378=(r12*sj3);
IkReal x3379=((0.499980319762597)*sj4);
IkReal x3380=(r01*sj5);
IkReal x3381=((0.0160210495477794)*r12);
IkReal x3382=((0.433001339129174)*sj3);
IkReal x3383=(cj3*x3379);
IkReal x3384=((0.187)*x3351);
IkReal x3385=((1.0)*x3351);
IkReal x3386=(sj3*x3367);
IkReal x3387=(cj1*x3350);
IkReal x3388=(sj1*x3350);
IkReal x3389=(cj1*x3351);
IkReal x3390=(sj0*x3387);
evalcond[0]=((((-1.0)*r22*x3376))+(((-0.249980320149909)*r22))+x3388+x3389+(((-1.0)*x3364*x3369))+(((-1.0)*x3364*x3366))+((x3355*x3359))+(((-1.0)*x3359*x3375))+(((0.433001339129174)*x3366))+(((0.433001339129174)*x3369)));
evalcond[1]=((((0.433001339129174)*x3373))+(((-0.249980320149909)*r02))+(((-1.0)*x3362*x3364))+((cj0*x3387))+((x3359*x3380))+(((-1.0)*x3363*x3385))+(((-0.750019679850091)*x3352))+(((-1.0)*x3359*x3370))+(((-1.0)*x3364*x3373))+(((0.433001339129174)*x3362)));
evalcond[2]=((((-1.0)*x3359*x3360))+x3390+(((-0.249980320149909)*r12))+(((0.433001339129174)*x3356))+(((0.433001339129174)*x3353))+((x3359*x3368))+(((-1.0)*x3356*x3364))+(((-1.0)*r12*x3376))+(((-1.0)*x3353*x3364))+(((-1.0)*x3372*x3385)));
evalcond[3]=(((cj4*x3371))+((x3358*x3369))+((x3358*x3366))+(((-1.0)*x3371))+(((-0.187)*x3388))+(((-1.0)*pz))+(((0.29)*cj1))+(((0.064677809339343)*x3366))+(((0.064677809339343)*x3369))+((x3365*x3375))+(((-1.0)*x3355*x3365))+(((-1.0)*cj1*x3384)));
evalcond[4]=((((-0.0160210495477794)*r02))+(((0.007)*sj0))+((x3358*x3362))+(((-0.187)*cj0*x3387))+(((-1.0)*px))+(((0.064677809339343)*x3362))+(((-0.29)*x3363))+(((0.0160210495477794)*x3352))+((x3365*x3370))+((x3358*x3373))+(((-1.0)*x3365*x3380))+((x3363*x3384))+(((0.064677809339343)*x3373)));
evalcond[5]=(((cj4*x3381))+((x3372*x3384))+(((-0.187)*x3390))+((x3360*x3365))+(((-0.007)*cj0))+(((-1.0)*py))+(((-1.0)*x3365*x3368))+((x3356*x3358))+(((0.064677809339343)*x3356))+(((0.064677809339343)*x3353))+(((-1.0)*x3381))+((x3353*x3358))+(((-0.29)*x3372)));
evalcond[6]=(((r20*x3361*x3379))+(((-1.0)*x3387))+((sj1*x3351))+((x3364*x3377))+(((-0.433001339129174)*x3377))+(((-1.0)*r20*x3354*x3357))+(((-1.0)*sj3*x3355*x3379))+((cj3*r22*x3359))+((r21*x3361*x3367))+((x3366*x3374))+((x3354*x3355))+((x3366*x3383))+((x3366*x3386))+((x3369*x3383))+(((0.750019679850091)*r21*x3361)));
evalcond[7]=(((x3362*x3374))+(((-1.0)*sj3*x3379*x3380))+((x3373*x3383))+((x3350*x3363))+((cj0*x3389))+((cj3*r02*x3359))+(((-1.0)*r02*x3382))+((x3354*x3380))+((r01*x3361*x3367))+((x3352*x3382))+((r00*x3361*x3379))+(((0.750019679850091)*r01*x3361))+((x3362*x3383))+((x3362*x3386))+(((-1.0)*r00*x3354*x3357)));
evalcond[8]=(((sj0*x3389))+((x3364*x3378))+(((-0.433001339129174)*x3378))+((x3350*x3372))+((x3353*x3374))+((x3356*x3386))+((x3356*x3383))+(((-1.0)*r10*x3354*x3357))+((x3354*x3368))+((x3356*x3374))+((cj3*r12*x3359))+((x3353*x3386))+((x3353*x3383))+(((-1.0)*sj3*x3368*x3379))+((sj3*x3360*x3379)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3391=((0.249980320149909)*cj1);
IkReal x3392=(cj0*cj1);
IkReal x3393=((0.750019679850091)*cj4);
IkReal x3394=(cj0*r20);
IkReal x3395=(cj1*r00);
IkReal x3396=(cj0*r22);
IkReal x3397=(r01*sj1);
IkReal x3398=((0.433001339129174)*sj1);
IkReal x3399=(cj5*r21);
IkReal x3400=((0.249980320149909)*sj1);
IkReal x3401=(cj1*r01);
IkReal x3402=((0.433001339129174)*cj5);
IkReal x3403=((0.433001339129174)*cj4);
IkReal x3404=((0.433001339129174)*sj5);
IkReal x3405=((0.866036765876652)*cj5*sj4);
IkReal x3406=((0.866036765876652)*sj4*sj5);
IkReal x3407=(cj4*x3402);
IkReal x3408=(cj4*sj5*x3398);
CheckValue<IkReal> x3409 = IKatan2WithCheck(IkReal(((((-1.0)*x3401*x3402))+(((-1.0)*x3401*x3406))+((x3394*x3408))+((sj1*x3394*x3405))+(((-1.0)*cj0*r21*sj1*x3406))+((sj5*x3395*x3403))+(((-1.0)*x3395*x3404))+((x3395*x3405))+((r02*x3391))+((x3401*x3407))+((x3396*x3400))+(((-1.0)*cj0*x3398*x3399))+((cj0*cj4*x3398*x3399))+(((-1.0)*sj5*x3394*x3398))+((cj1*r02*x3393))+((sj1*x3393*x3396)))),IkReal(((((-1.0)*r00*x3408))+((r20*sj5*x3392*x3403))+((x3391*x3396))+((x3392*x3399*x3403))+((r22*x3392*x3393))+((r00*sj5*x3398))+((x3397*x3402))+((x3397*x3406))+(((-1.0)*r02*x3400))+(((-0.433001339129174)*x3392*x3399))+(((-1.0)*x3397*x3407))+(((-1.0)*r21*x3392*x3406))+(((-1.0)*r02*sj1*x3393))+(((-1.0)*r00*sj1*x3405))+((r20*x3392*x3405))+(((-1.0)*r20*x3392*x3404)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3409.valid){
continue;
}
CheckValue<IkReal> x3410=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x3410.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x3409.value)+(((1.5707963267949)*(x3410.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3411=IKsin(j2);
IkReal x3412=IKcos(j2);
IkReal x3413=(cj4*r02);
IkReal x3414=(cj5*r11);
IkReal x3415=(cj3*cj4);
IkReal x3416=(r21*sj5);
IkReal x3417=(r10*sj5);
IkReal x3418=((1.0)*cj5);
IkReal x3419=((0.00924927184554663)*cj4);
IkReal x3420=((0.866036765876652)*sj4);
IkReal x3421=(cj5*r10);
IkReal x3422=(cj5*sj3);
IkReal x3423=(r00*sj5);
IkReal x3424=(cj0*sj1);
IkReal x3425=((0.433001339129174)*cj4);
IkReal x3426=((0.0184992718312161)*sj4);
IkReal x3427=(r20*sj5);
IkReal x3428=((0.249980320149909)*cj4);
IkReal x3429=(r11*sj5);
IkReal x3430=(cj5*r21);
IkReal x3431=(cj5*r00);
IkReal x3432=((0.0160210495477794)*r22);
IkReal x3433=(sj0*sj1);
IkReal x3434=(cj5*r01);
IkReal x3435=((0.750019679850091)*sj3);
IkReal x3436=(cj5*r20);
IkReal x3437=((0.750019679850091)*cj4);
IkReal x3438=(r22*sj3);
IkReal x3439=(r12*sj3);
IkReal x3440=((0.499980319762597)*sj4);
IkReal x3441=(r01*sj5);
IkReal x3442=((0.0160210495477794)*r12);
IkReal x3443=((0.433001339129174)*sj3);
IkReal x3444=(cj3*x3440);
IkReal x3445=((0.187)*x3412);
IkReal x3446=((1.0)*x3412);
IkReal x3447=(sj3*x3428);
IkReal x3448=(cj1*x3411);
IkReal x3449=(sj1*x3411);
IkReal x3450=(cj1*x3412);
IkReal x3451=(sj0*x3448);
evalcond[0]=((((-1.0)*x3420*x3436))+(((0.433001339129174)*x3427))+(((-0.249980320149909)*r22))+(((0.433001339129174)*x3430))+(((-1.0)*x3425*x3430))+(((-1.0)*x3425*x3427))+x3450+x3449+(((-1.0)*r22*x3437))+((x3416*x3420)));
evalcond[1]=((((-1.0)*x3420*x3431))+(((0.433001339129174)*x3423))+(((0.433001339129174)*x3434))+(((-0.249980320149909)*r02))+(((-1.0)*x3425*x3434))+(((-1.0)*x3423*x3425))+((cj0*x3448))+(((-0.750019679850091)*x3413))+((x3420*x3441))+(((-1.0)*x3424*x3446)));
evalcond[2]=((((-1.0)*x3433*x3446))+(((-1.0)*r12*x3437))+(((-1.0)*x3420*x3421))+(((-0.249980320149909)*r12))+((x3420*x3429))+(((-1.0)*x3417*x3425))+x3451+(((0.433001339129174)*x3417))+(((0.433001339129174)*x3414))+(((-1.0)*x3414*x3425)));
evalcond[3]=((((-0.187)*x3449))+(((-1.0)*x3416*x3426))+(((-1.0)*x3432))+(((-1.0)*pz))+(((0.29)*cj1))+((cj4*x3432))+(((0.064677809339343)*x3430))+(((0.064677809339343)*x3427))+(((-1.0)*cj1*x3445))+((x3419*x3430))+((x3426*x3436))+((x3419*x3427)));
evalcond[4]=((((-0.0160210495477794)*r02))+(((0.007)*sj0))+(((-0.187)*cj0*x3448))+((x3424*x3445))+(((-0.29)*x3424))+(((-1.0)*px))+(((0.064677809339343)*x3434))+(((0.064677809339343)*x3423))+(((0.0160210495477794)*x3413))+(((-1.0)*x3426*x3441))+((x3419*x3434))+((x3426*x3431))+((x3419*x3423)));
evalcond[5]=(((x3417*x3419))+(((0.064677809339343)*x3414))+(((0.064677809339343)*x3417))+(((-1.0)*x3426*x3429))+((x3414*x3419))+(((-0.187)*x3451))+(((-0.007)*cj0))+(((-1.0)*py))+((x3421*x3426))+(((-0.29)*x3433))+((cj4*x3442))+((x3433*x3445))+(((-1.0)*x3442)));
evalcond[6]=(((x3425*x3438))+(((-0.433001339129174)*x3438))+((r21*x3422*x3428))+(((-1.0)*r20*x3415*x3418))+(((0.750019679850091)*r21*x3422))+((r20*x3422*x3440))+((sj1*x3412))+((x3427*x3435))+((cj3*r22*x3420))+((x3430*x3444))+(((-1.0)*x3448))+((x3415*x3416))+((x3427*x3444))+((x3427*x3447))+(((-1.0)*sj3*x3416*x3440)));
evalcond[7]=(((x3415*x3441))+((x3423*x3444))+((x3423*x3447))+(((-1.0)*r00*x3415*x3418))+((r01*x3422*x3428))+((x3434*x3444))+((r00*x3422*x3440))+((cj3*r02*x3420))+(((0.750019679850091)*r01*x3422))+(((-1.0)*r02*x3443))+((x3411*x3424))+((cj0*x3450))+(((-1.0)*sj3*x3440*x3441))+((x3413*x3443))+((x3423*x3435)));
evalcond[8]=(((x3425*x3439))+(((-0.433001339129174)*x3439))+((cj3*r12*x3420))+((x3415*x3429))+((sj0*x3450))+((sj3*x3421*x3440))+((x3417*x3435))+((x3414*x3435))+(((-1.0)*sj3*x3429*x3440))+(((-1.0)*r10*x3415*x3418))+((x3414*x3444))+((x3414*x3447))+((x3411*x3433))+((x3417*x3447))+((x3417*x3444)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
}
}
// [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1)] (original are [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1)])
static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    // HACK should be 1e-5*norm
    IkReal tol = 1e-2*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        // HACK should be tol*100
        if( IKabs(wi[i]) < 5e-5 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API bool ComputeIk2(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions, void* pOpenRAVEManip) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "d7e3c19f0468aede6e4b131a841de050"; }

IKFAST_API const char* GetIkFastVersion() { return "0x1000004a"; }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
